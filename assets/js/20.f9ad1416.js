(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{491:function(t,a,r){"use strict";r.r(a);var s=r(14),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"希尔排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序"}},[t._v("#")]),t._v(" 希尔排序")]),t._v(" "),r("p",[t._v("希尔排序(Shell's Sort)是插入排序的一种又称“缩小增量排序”（Diminishing Increment Sort），是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因 D.L.Shell 于\n1959 年提出而得名。")]),t._v(" "),r("p",[t._v("希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至 1 时，整个文件恰被分成一组，算法便终止。")]),t._v(" "),r("h2",{attrs:{id:"算法原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法原理"}},[t._v("#")]),t._v(" 算法原理")]),t._v(" "),r("p",[t._v("设置增量序列/因子,分割数组进行插入排序,直至增量因子为 1")]),t._v(" "),r("ol",[r("li",[t._v("选择一个增量序列 t1，t2，…，tk，其中 ti>tj，tk=1；")]),t._v(" "),r("li",[t._v("按增量序列个数 k，对序列进行 k 趟排序；")]),t._v(" "),r("li",[t._v("每趟排序，根据对应的增量 ti，将待排序列分割成若干长度为 m 的子序列，分别对各子表进行直接插入排序。仅增量因子为 1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。")])]),t._v(" "),r("h2",{attrs:{id:"实例演示"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实例演示"}},[t._v("#")]),t._v(" 实例演示")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://forum.mianbaoban.cn/data/attachment/forum/201803/20/140156o7nq6qd76zd66nzn.jpg",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"算法分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法分析"}},[t._v("#")]),t._v(" 算法分析")]),t._v(" "),r("h3",{attrs:{id:"时间复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),r("ul",[r("li",[t._v("最好时间复杂度 "),r("img",{attrs:{src:"https://latex.codecogs.com/png.latex?O(nlog%5E%7B2%7Dn)",alt:""}})]),t._v(" "),r("li",[t._v("最坏时间复杂度 "),r("img",{attrs:{src:"https://latex.codecogs.com/png.latex?O(nlog%5E%7B2%7Dn)",alt:""}})]),t._v(" "),r("li",[t._v("平均时间复杂度 O(nlog2n)")])]),t._v(" "),r("h3",{attrs:{id:"空间复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[t._v("#")]),t._v(" 空间复杂度")]),t._v(" "),r("ul",[r("li",[t._v("平均空间复杂度")])]),t._v(" "),r("h3",{attrs:{id:"稳定性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#稳定性"}},[t._v("#")]),t._v(" 稳定性")]),t._v(" "),r("p",[t._v("不稳定排序算法")]),t._v(" "),r("p",[t._v("由于多次插入排序，我们知道一次插入排序是稳定的，不会改变相同元素的相对顺序，但在不同的插入排序过程中，相同的元素可能在各自的插入排序中移动，最后其稳定性就会被打乱，所以 shell 排序\n是不稳定的。")]),t._v(" "),r("h2",{attrs:{id:"代码实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://baike.baidu.com/item/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("希尔排序_百度百科"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);