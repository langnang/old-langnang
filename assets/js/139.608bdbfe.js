(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{606:function(e,n,t){"use strict";t.r(n);var r=t(18),s=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"events-事件触发器-node-js-api-文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events-事件触发器-node-js-api-文档"}},[e._v("#")]),e._v(" events 事件触发器 | Node.js API 文档")]),e._v(" "),t("blockquote",[t("h2",{attrs:{id:"excerpt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),t("p",[e._v("中英对照")])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("源代码:")]),e._v(" "),t("a",{attrs:{href:"https://github.com/nodejs/node/blob/v12.22.12/lib/events.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/events.js"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v('Node.js 的大部分核心 API 都是围绕惯用的异步事件驱动架构构建的，在该架构中，某些类型的对象（称为"触发器"）触发命名事件，使 '),t("code",[e._v("Function")]),e._v(' 对象（"监听器"）被调用。')]),e._v(" "),t("p",[e._v("例如："),t("a",{attrs:{href:"http://nodejs.cn/api-v12/net.html#net_class_net_server",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("net.Server")]),t("OutboundLink")],1),e._v(" 对象在每次有连接时触发事件；"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_class_fs_readstream",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("fs.ReadStream")]),t("OutboundLink")],1),e._v(" 在打开文件时触发事件；"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v("在每当有数据可供读取时触发事件。")]),e._v(" "),t("p",[e._v("所有触发事件的对象都是 "),t("code",[e._v("EventEmitter")]),e._v(" 类的实例。 这些对象暴露了 "),t("code",[e._v("eventEmitter.on()")]),e._v(" 函数，允许将一个或多个函数绑定到对象触发的命名事件。 通常，事件名称是驼峰式字符串，但也可以使用任何有效的 JavaScript 属性键。")]),e._v(" "),t("p",[e._v("当 "),t("code",[e._v("EventEmitter")]),e._v(" 对象触发事件时，所有绑定到该特定事件的函数都会被同步地调用。")]),e._v(" "),t("p",[e._v("以下示例展示了使用单个监听器的简单的 "),t("code",[e._v("EventEmitter")]),e._v(" 实例。 "),t("code",[e._v("eventEmitter.on()")]),e._v(" 方法用于注册监听器，"),t("code",[e._v("eventEmitter.emit()")]),e._v(" 方法用于触发事件。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const EventEmitter = require('events');\n\nclass MyEmitter extends EventEmitter {}\n\nconst myEmitter = new MyEmitter();\nmyEmitter.on('event', () => {\n  console.log('an event occurred!');\n});\nmyEmitter.emit('event');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("h3",{attrs:{id:"将参数和-this-传给监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将参数和-this-传给监听器"}},[e._v("#")]),e._v(" 将参数和 this 传给监听器"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#passing-arguments-and-this-to-listeners",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/passing_arguments_and_this_to_listeners.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("eventEmitter.emit()")]),e._v(" 方法允许将任意一组参数传给监听器函数。 记住，当调用普通的监听器函数时，标准的 "),t("code",[e._v("this")]),e._v(" 关键字会被有意地设置为引用监听器绑定到的 "),t("code",[e._v("EventEmitter")]),e._v(" 实例。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nmyEmitter.on('event', function(a, b) {\n  console.log(a, b, this, this === myEmitter);\n  // 打印:\n  //   a b MyEmitter {\n  //     domain: null,\n  //     _events: { event: [Function] },\n  //     _eventsCount: 1,\n  //     _maxListeners: undefined } true\n});\nmyEmitter.emit('event', 'a', 'b');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("p",[e._v("可以使用 ES6 箭头函数作为监听器，但是，这样做时，"),t("code",[e._v("this")]),e._v(" 关键字将不再引用 "),t("code",[e._v("EventEmitter")]),e._v(" 实例：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nmyEmitter.on('event', (a, b) => {\n  console.log(a, b, this);\n  // 打印: a b {}\n});\nmyEmitter.emit('event', 'a', 'b');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h3",{attrs:{id:"异步-vs-同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步-vs-同步"}},[e._v("#")]),e._v(" 异步 VS 同步"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#asynchronous-vs-synchronous",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/asynchronous_vs_synchronous.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("EventEmitter")]),e._v(" 按照注册的顺序同步地调用所有监听器。 这确保了事件的正确排序，并有助于避免竞争条件和逻辑错误。 在适当的时候，监听器函数可以使用 "),t("code",[e._v("setImmediate()")]),e._v(" 或 "),t("code",[e._v("process.nextTick()")]),e._v(" 方法切换到异步的操作模式：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nmyEmitter.on('event', (a, b) => {\n  setImmediate(() => {\n    console.log('this happens asynchronously');\n  });\n});\nmyEmitter.emit('event', 'a', 'b');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h3",{attrs:{id:"仅处理事件一次"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#仅处理事件一次"}},[e._v("#")]),e._v(" 仅处理事件一次"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#handling-events-only-once",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/handling_events_only_once.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nlet m = 0;\nmyEmitter.on('event', () => {\n  console.log(++m);\n});\nmyEmitter.emit('event');\n// 打印: 1\nmyEmitter.emit('event');\n// 打印: 2\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[e._v("使用 "),t("code",[e._v("eventEmitter.once()")]),e._v(" 方法，可以注册一个监听器，该监听器最多为特定事件调用一次。 一旦事件被触发，则监听器就会被注销然后被调用。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nlet m = 0;\nmyEmitter.once('event', () => {\n  console.log(++m);\n});\nmyEmitter.emit('event');\n// 打印: 1\nmyEmitter.emit('event');\n// 忽略\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("h3",{attrs:{id:"错误事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#错误事件"}},[e._v("#")]),e._v(" 错误事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#error-events",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/error_events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("当 "),t("code",[e._v("EventEmitter")]),e._v(" 实例中发生错误时，典型的操作是触发 "),t("code",[e._v("'error'")]),e._v(" 事件。 这些在 Node.js 中被视为特殊情况。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("EventEmitter")]),e._v(" 没有为 "),t("code",[e._v("'error'")]),e._v(" 事件注册至少一个监听器，并且触发 "),t("code",[e._v("'error'")]),e._v(" 事件，则会抛出错误，打印堆栈跟踪，然后退出 Node.js 进程。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nmyEmitter.emit('error', new Error('whoops!'));\n// 抛出错误并使 Node.js 崩溃\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("为了防止 Node.js 进程崩溃，可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("domain")]),t("OutboundLink")],1),e._v(" 模块。 （但请注意，不推荐使用 "),t("code",[e._v("domain")]),e._v(" 模块。）")]),e._v(" "),t("p",[e._v("作为最佳实践，应始终为 "),t("code",[e._v("'error'")]),e._v(" 事件添加监听器。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nmyEmitter.on('error', (err) => {\n  console.error('whoops! there was an error');\n});\nmyEmitter.emit('error', new Error('whoops!'));\n// 打印: whoops! there was an error\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("通过使用符号 "),t("code",[e._v("errorMonitor")]),e._v(" 安装监听器，可以在不消费触发的错误的情况下监视 "),t("code",[e._v("'error'")]),e._v(" 事件。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nmyEmitter.on(EventEmitter.errorMonitor, (err) => {\n  MyMonitoringTool.log(err);\n});\nmyEmitter.emit('error', new Error('whoops!'));\n// 仍然抛出错误并使 Node.js 崩溃\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h3",{attrs:{id:"捕捉-promise-拒绝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#捕捉-promise-拒绝"}},[e._v("#")]),e._v(" 捕捉 Promise 拒绝"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#capture-rejections-of-promises",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/capture_rejections_of_promises.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api/documentation.html#stability-index",target:"_blank",rel:"noopener noreferrer"}},[e._v("稳定性: 1"),t("OutboundLink")],1),e._v(" - captureRejections 是实验的。")]),e._v(" "),t("p",[e._v("将 "),t("code",[e._v("async")]),e._v(" 函数与事件句柄一起使用是有问题的，因为它会在抛出异常的情况下导致未处理的拒绝：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const ee = new EventEmitter();\nee.on('something', async (value) => {\n  throw new Error('kaboom');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[t("code",[e._v("EventEmitter")]),e._v(" 构造函数中的 "),t("code",[e._v("captureRejections")]),e._v(" 选项或全局的设置可以改变这种行为，在 "),t("code",[e._v("Promise")]),e._v(" 上安装 "),t("code",[e._v(".then(undefined, handler)")]),e._v(" 句柄。 此句柄将异常异步地路由到 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_emitter_symbol_for_nodejs_rejection_err_eventname_args",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Symbol.for('nodejs.rejection')")]),t("OutboundLink")],1),e._v(" 方法（如果有）或 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_error_events",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'error'")]),t("OutboundLink")],1),e._v(" 事件句柄（如果没有）。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const ee1 = new EventEmitter({ captureRejections: true });\nee1.on('something', async (value) => {\n  throw new Error('kaboom');\n});\n\nee1.on('error', console.log);\n\nconst ee2 = new EventEmitter({ captureRejections: true });\nee2.on('something', async (value) => {\n  throw new Error('kaboom');\n});\n\nee2[Symbol.for('nodejs.rejection')] = console.log;\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("p",[e._v("设置 "),t("code",[e._v("EventEmitter.captureRejections = true")]),e._v(" 将更改 "),t("code",[e._v("EventEmitter")]),e._v(" 的所有新实例的默认值。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("EventEmitter.captureRejections = true;\nconst ee1 = new EventEmitter();\nee1.on('something', async (value) => {\n  throw new Error('kaboom');\n});\n\nee1.on('error', console.log);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("由 "),t("code",[e._v("captureRejections")]),e._v(" 行为生成的 "),t("code",[e._v("'error'")]),e._v(" 事件没有捕获句柄以避免无限的错误循环：建议不要使用 "),t("code",[e._v("async")]),e._v(" 函数作为 "),t("code",[e._v("'error'")]),e._v(" 事件句柄。")]),e._v(" "),t("h3",{attrs:{id:"eventemitter-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eventemitter-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("EventEmitter")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/class_eventemitter.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("EventEmitter")]),e._v(" 类由 "),t("code",[e._v("events")]),e._v(" 模块定义和暴露：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const EventEmitter = require('events');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("所有的 "),t("code",[e._v("EventEmitter")]),e._v("，当添加新的监听器时触发事件 "),t("code",[e._v("'newListener'")]),e._v("，当删除现有的监听器时触发事件 "),t("code",[e._v("'removeListener'")]),e._v("。")]),e._v(" "),t("p",[e._v("它支持以下的选项：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("captureRejections")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 启用"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_capture_rejections_of_promises",target:"_blank",rel:"noopener noreferrer"}},[e._v("自动捕获 promise 拒绝"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("h4",{attrs:{id:"newlistener-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#newlistener-事件"}},[e._v("#")]),e._v(" 'newListener' 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#event-newlistener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/event_newlistener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.26")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 正在监听的事件的名称")]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 事件处理函数")])]),e._v(" "),t("p",[e._v("在将监听器添加到其内部监听器数组之前，"),t("code",[e._v("EventEmitter")]),e._v(" 实例将触发自身的 "),t("code",[e._v("'newListener'")]),e._v(" 事件。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\n// 只做一次，这样就不会永远循环\nmyEmitter.once('newListener', (event, listener) => {\n  if (event === 'event') {\n    // 在前面插入新的监听器\n    myEmitter.on('event', () => {\n      console.log('B');\n    });\n  }\n});\nmyEmitter.on('event', () => {\n  console.log('A');\n});\nmyEmitter.emit('event');\n// 打印:\n//   B\n//   A\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("h4",{attrs:{id:"removelistener-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#removelistener-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'removeListener'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#event-removelistener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/event_removelistener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 事件名称")]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 事件处理函数")])]),e._v(" "),t("p",[e._v("在移除 "),t("code",[e._v("listener")]),e._v(" 后触发 "),t("code",[e._v("'removeListener'")]),e._v(" 事件。")]),e._v(" "),t("h4",{attrs:{id:"eventemitter-listenercount-emitter-eventname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eventemitter-listenercount-emitter-eventname"}},[e._v("#")]),e._v(" "),t("code",[e._v("EventEmitter.listenerCount(emitter, eventName)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#eventemitterlistenercountemitter-eventname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/eventemitter_listenercount_emitter_eventname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.9.12弃用于: v3.2.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("emitter")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1),e._v(" 要查询的触发器")]),e._v(" "),t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 事件名称")])]),e._v(" "),t("p",[e._v("返回在给定 "),t("code",[e._v("emitter")]),e._v(" 上注册的给定 "),t("code",[e._v("eventName")]),e._v(" 的监听器数量的类方法。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(EventEmitter.listenerCount(myEmitter, 'event'));\n// 打印: 2\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h4",{attrs:{id:"eventemitter-defaultmaxlisteners"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eventemitter-defaultmaxlisteners"}},[e._v("#")]),e._v(" "),t("code",[e._v("EventEmitter.defaultMaxListeners")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#eventemitterdefaultmaxlisteners",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/eventemitter_defaultmaxlisteners.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.2")]),e._v(" "),t("p",[e._v("默认情况下，最多可为任何单个事件注册 "),t("code",[e._v("10")]),e._v(" 个监听器。 可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_emitter_setmaxlisteners_n",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("emitter.setMaxListeners(n)")]),t("OutboundLink")],1),e._v(" 方法为单个 "),t("code",[e._v("EventEmitter")]),e._v(" 实例更改此限制。 要更改所有 "),t("code",[e._v("EventEmitter")]),e._v(" 实例的默认值，则可以使用 "),t("code",[e._v("EventEmitter.defaultMaxListeners")]),e._v(" 属性。")]),e._v(" "),t("p",[e._v("设置 "),t("code",[e._v("EventEmitter.defaultMaxListeners")]),e._v(" 时要小心，因为更改会影响所有 "),t("code",[e._v("EventEmitter")]),e._v(" 实例，包括在进行更改之前创建的实例。 但是，调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_emitter_setmaxlisteners_n",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("emitter.setMaxListeners(n)")]),t("OutboundLink")],1),e._v(" 仍然优先于 "),t("code",[e._v("EventEmitter.defaultMaxListeners")]),e._v("。")]),e._v(" "),t("p",[e._v("这不是硬性限制。 "),t("code",[e._v("EventEmitter")]),e._v(' 实例将允许添加更多监听器，但会向标准错误输出跟踪警告，指示已检测到"可能的 EventEmitter 内存泄漏"。 对于任何单个 '),t("code",[e._v("EventEmitter")]),e._v("，可以使用 "),t("code",[e._v("emitter.getMaxListeners()")]),e._v(" 和 "),t("code",[e._v("emitter.setMaxListeners()")]),e._v(" 方法来暂时避免此警告：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("emitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // 做些事情\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("触发的警告可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_event_warning",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.on('warning')")]),t("OutboundLink")],1),e._v(" 进行检查，并将具有额外的 "),t("code",[e._v("emitter")]),e._v("、"),t("code",[e._v("type")]),e._v(" 和 "),t("code",[e._v("count")]),e._v(" 属性，分别是指事件触发器实例、事件名称和绑定监听器的数量。 其 "),t("code",[e._v("name")]),e._v(" 属性设置为 "),t("code",[e._v("'MaxListenersExceededWarning'")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"eventemitter-errormonitor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eventemitter-errormonitor"}},[e._v("#")]),e._v(" "),t("code",[e._v("EventEmitter.errorMonitor")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#eventemittererrormonitor",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/eventemitter_errormonitor.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.17.0")]),e._v(" "),t("p",[e._v("此符号应用于安装仅监视 "),t("code",[e._v("'error'")]),e._v(" 事件的监听器。 在调用常规 "),t("code",[e._v("'error'")]),e._v(" 监听器之前调用使用此符号安装的监听器。")]),e._v(" "),t("p",[e._v("一旦触发 "),t("code",[e._v("'error'")]),e._v(" 事件，使用此符号安装监听器不会改变行为，因此如果未安装常规 "),t("code",[e._v("'error'")]),e._v(" 监听器，则进程仍将崩溃。")]),e._v(" "),t("h4",{attrs:{id:"emitter-addlistener-eventname-listener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-addlistener-eventname-listener"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.addListener(eventName, listener)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitteraddlistenereventname-listener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_addlistener_eventname_listener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.26")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[t("code",[e._v("emitter.on(eventName, listener)")]),e._v(" 的别名。")]),e._v(" "),t("h4",{attrs:{id:"emitter-emit-eventname-args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-emit-eventname-args"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.emit(eventName[, ...args])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitteremiteventname-args",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_emit_eventname_args.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.26")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[t("code",[e._v("...args")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[t("any",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("按注册顺序同步地调用为名为 "),t("code",[e._v("eventName")]),e._v(" 的事件注册的每个监听器，并将提供的参数传给每个监听器。")]),e._v(" "),t("p",[e._v("如果事件有监听器，则返回 "),t("code",[e._v("true")]),e._v("，否则返回 "),t("code",[e._v("false")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const EventEmitter = require('events');\nconst myEmitter = new EventEmitter();\n\n// 第一个监听器\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// 第二个监听器\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// 第三个监听器\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// 打印:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br")])]),t("h4",{attrs:{id:"emitter-eventnames"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-eventnames"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.eventNames()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emittereventnames",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_eventnames.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v6.0.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/ZJSz23",target:"_blank",rel:"noopener noreferrer"}},[t("Array",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回列出触发器已为其注册监听器的事件的数组。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// 打印: [ 'foo', 'bar', Symbol(symbol) ]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("h4",{attrs:{id:"emitter-getmaxlisteners"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-getmaxlisteners"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.getMaxListeners()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emittergetmaxlisteners",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_getmaxlisteners.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v1.0.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回 "),t("code",[e._v("EventEmitter")]),e._v(" 的当前最大监听器数的值，该值由 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_emitter_setmaxlisteners_n",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("emitter.setMaxListeners(n)")]),t("OutboundLink")],1),e._v(" 设置或默认为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_eventemitter_defaultmaxlisteners",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("EventEmitter.defaultMaxListeners")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"emitter-listenercount-eventname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-listenercount-eventname"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.listenerCount(eventName)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitterlistenercounteventname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_listenercount_eventname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v3.2.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 正在监听的事件的名称")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回监听名为 "),t("code",[e._v("eventName")]),e._v(" 的事件的监听器数量。")]),e._v(" "),t("h4",{attrs:{id:"emitter-listeners-eventname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-listeners-eventname"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.listeners(eventName)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitterlistenerseventname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_listeners_eventname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[e._v("<Function[]>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("返回名为 "),t("code",[e._v("eventName")]),e._v(" 的事件的监听器数组的副本。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// 打印: [ [Function] ]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h4",{attrs:{id:"emitter-off-eventname-listener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-off-eventname-listener"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.off(eventName, listener)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitteroffeventname-listener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_off_eventname_listener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_emitter_removelistener_eventname_listener",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("emitter.removeListener()")]),t("OutboundLink")],1),e._v(" 的别名。")]),e._v(" "),t("h4",{attrs:{id:"emitter-on-eventname-listener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-on-eventname-listener"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.on(eventName, listener)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitteroneventname-listener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_on_eventname_listener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.101")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 事件的名称。")]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 回调函数")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("将 "),t("code",[e._v("listener")]),e._v(" 函数添加到名为 "),t("code",[e._v("eventName")]),e._v(" 的事件的监听器数组的末尾。 不检查是否已添加 "),t("code",[e._v("listener")]),e._v("。 多次调用传入相同的 "),t("code",[e._v("eventName")]),e._v(" 和 "),t("code",[e._v("listener")]),e._v(" 组合将导致多次添加和调用 "),t("code",[e._v("listener")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("返回对 "),t("code",[e._v("EventEmitter")]),e._v(" 的引用，以便可以链式调用。")]),e._v(" "),t("p",[e._v("默认情况下，事件监听器按添加顺序调用。 "),t("code",[e._v("emitter.prependListener()")]),e._v(" 方法可用作将事件监听器添加到监听器数组开头的替代方法。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// 打印:\n//   b\n//   a\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h4",{attrs:{id:"emitter-once-eventname-listener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-once-eventname-listener"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.once(eventName, listener)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitteronceeventname-listener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_once_eventname_listener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.3.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 事件的名称。")]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 回调函数")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("为名为 "),t("code",[e._v("eventName")]),e._v(" 的事件添加单次的 "),t("code",[e._v("listener")]),e._v(" 函数。 下次触发 "),t("code",[e._v("eventName")]),e._v(" 时，将移除此监听器，然后再调用。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("返回对 "),t("code",[e._v("EventEmitter")]),e._v(" 的引用，以便可以链式调用。")]),e._v(" "),t("p",[e._v("默认情况下，事件监听器按添加顺序调用。 "),t("code",[e._v("emitter.prependOnceListener()")]),e._v(" 方法可用作将事件监听器添加到监听器数组开头的替代方法。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// 打印:\n//   b\n//   a\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h4",{attrs:{id:"emitter-prependlistener-eventname-listener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-prependlistener-eventname-listener"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.prependListener(eventName, listener)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitterprependlistenereventname-listener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_prependlistener_eventname_listener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v6.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 事件的名称。")]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 回调函数")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("将 "),t("code",[e._v("listener")]),e._v(" 函数添加到名为 "),t("code",[e._v("eventName")]),e._v(" 的事件的监听器数组的开头。 不检查是否已添加 "),t("code",[e._v("listener")]),e._v("。 多次调用传入相同的 "),t("code",[e._v("eventName")]),e._v(" 和 "),t("code",[e._v("listener")]),e._v(" 组合将导致多次添加和调用 "),t("code",[e._v("listener")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("返回对 "),t("code",[e._v("EventEmitter")]),e._v(" 的引用，以便可以链式调用。")]),e._v(" "),t("h4",{attrs:{id:"emitter-prependoncelistener-eventname-listener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-prependoncelistener-eventname-listener"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.prependOnceListener(eventName, listener)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitterprependoncelistenereventname-listener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_prependoncelistener_eventname_listener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v6.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 事件的名称。")]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 回调函数")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("将名为 "),t("code",[e._v("eventName")]),e._v(" 的事件的单次 "),t("code",[e._v("listener")]),e._v(" 函数添加到监听器数组的开头。 下次触发 "),t("code",[e._v("eventName")]),e._v(" 时，将移除此监听器，然后再调用。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("返回对 "),t("code",[e._v("EventEmitter")]),e._v(" 的引用，以便可以链式调用。")]),e._v(" "),t("h4",{attrs:{id:"emitter-removealllisteners-eventname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-removealllisteners-eventname"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.removeAllListeners([eventName])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitterremovealllistenerseventname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_removealllisteners_eventname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.26")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("删除所有监听器，或指定 "),t("code",[e._v("eventName")]),e._v(" 的监听器。")]),e._v(" "),t("p",[e._v("删除在代码其他地方添加的监听器是不好的做法，特别是当 "),t("code",[e._v("EventEmitter")]),e._v(" 实例是由其他组件或模块（例如套接字或文件流）创建时。")]),e._v(" "),t("p",[e._v("返回对 "),t("code",[e._v("EventEmitter")]),e._v(" 的引用，以便可以链式调用。")]),e._v(" "),t("h4",{attrs:{id:"emitter-removelistener-eventname-listener"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-removelistener-eventname-listener"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.removeListener(eventName, listener)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitterremovelistenereventname-listener",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_removelistener_eventname_listener.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.26")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[t("code",[e._v("listener")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("从名为 "),t("code",[e._v("eventName")]),e._v(" 的事件的监听器数组中移除指定的 "),t("code",[e._v("listener")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[t("code",[e._v("removeListener()")]),e._v(" 最多从监听器数组中删除一个监听器实例。 如果任何单个监听器已多次添加到指定 "),t("code",[e._v("eventName")]),e._v(" 的监听器数组中，则必须多次调用 "),t("code",[e._v("removeListener()")]),e._v(" 以删除每个实例。")]),e._v(" "),t("p",[e._v("这意味着在触发之后和最后一个监听器完成执行之前的任何 "),t("code",[e._v("removeListener()")]),e._v(" 或 "),t("code",[e._v("removeAllListeners()")]),e._v(" 调用都不会从正在进行的 "),t("code",[e._v("emit()")]),e._v(" 中删除它们。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA 删除监听器 callbackB，但它仍将被调用。\n// 触发时的内部监听器数组 [callbackA, callbackB]\nmyEmitter.emit('event');\n// 打印:\n//   A\n//   B\n\n// callbackB 现在被删除了。\n// 内部监听器数组 [callbackA]\nmyEmitter.emit('event');\n// 打印:\n//   A\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br")])]),t("p",[e._v("由于使用内部数组管理监听器，因此调用此方法将更改在移除监听器后注册的任何监听器的位置索引。 这不会影响调用监听器的顺序，但这意味着需要重新创建 "),t("code",[e._v("emitter.listeners()")]),e._v(" 方法返回的监听器数组的任何副本。")]),e._v(" "),t("p",[e._v("当单个函数被多次添加为单个事件的句柄时（如下例所示），则 "),t("code",[e._v("removeListener()")]),e._v(" 将删除最近添加的实例。 在示例中，删除了 "),t("code",[e._v("once('ping')")]),e._v(" 监听器：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("p",[e._v("返回对 "),t("code",[e._v("EventEmitter")]),e._v(" 的引用，以便可以链式调用。")]),e._v(" "),t("h4",{attrs:{id:"emitter-setmaxlisteners-n"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-setmaxlisteners-n"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.setMaxListeners(n)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emittersetmaxlistenersn",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_setmaxlisteners_n.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.3.5")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("n")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("默认情况下，如果为特定事件添加了 "),t("code",[e._v("10")]),e._v(" 个以上的监听器，则 "),t("code",[e._v("EventEmitter")]),e._v(" 将打印警告。 这是一个有用的默认值，有助于查找内存泄漏。 "),t("code",[e._v("emitter.setMaxListeners()")]),e._v(" 方法允许修改此特定 "),t("code",[e._v("EventEmitter")]),e._v(" 实例的限制。 该值可以设置为 "),t("code",[e._v("Infinity")]),e._v("（或 "),t("code",[e._v("0")]),e._v("）以指示无限数量的监听器。")]),e._v(" "),t("p",[e._v("返回对 "),t("code",[e._v("EventEmitter")]),e._v(" 的引用，以便可以链式调用。")]),e._v(" "),t("h4",{attrs:{id:"emitter-rawlisteners-eventname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-rawlisteners-eventname"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter.rawListeners(eventName)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emitterrawlistenerseventname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_rawlisteners_eventname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v9.4.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[e._v("<Function[]>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("返回名为 "),t("code",[e._v("eventName")]),e._v(" 的事件的监听器数组的副本，包括任何封装器（例如由 "),t("code",[e._v(".once()")]),e._v(" 创建的封装器）。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// 返回具有函数 `onceWrapper` 的新数组，\n// 该函数具有属性 `listener`，其中包含上面绑定的原始监听器\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// 将\"log once\"记录到控制台并且不会解除 `once` 事件的绑定\nlogFnWrapper.listener();\n\n// 将\"log once\"记录到控制台并删除监听器\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// 将返回新数组，其中包含由上面的 `.on()` 绑定的函数\nconst newListeners = emitter.rawListeners('log');\n\n// 记录\"log persistently\"两次\nnewListeners[0]();\nemitter.emit('log');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br")])]),t("h4",{attrs:{id:"emitter-symbol-for-nodejs-rejection-err-eventname-args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emitter-symbol-for-nodejs-rejection-err-eventname-args"}},[e._v("#")]),e._v(" "),t("code",[e._v("emitter[Symbol.for('nodejs.rejection')](err, eventName[, ...args])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#emittersymbolfornodejsrejectionerr-eventname-args",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/emitter_symbol_for_nodejs_rejection_err_eventname_args.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api/documentation.html#stability-index",target:"_blank",rel:"noopener noreferrer"}},[e._v("稳定性: 1"),t("OutboundLink")],1),e._v(" - captureRejections 是实验的。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("err")]),e._v(" 错误")]),e._v(" "),t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])]),e._v(" "),t("li",[t("code",[e._v("...args")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[t("any",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[t("code",[e._v("Symbol.for('nodejs.rejection')")]),e._v(" 方法被调用，以防在触发事件时发生 promise 拒绝，并且在触发器上启用了 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_capture_rejections_of_promises",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("captureRejections")]),t("OutboundLink")],1),e._v("。 可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_events_capturerejectionsymbol",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("events.captureRejectionSymbol")]),t("OutboundLink")],1),e._v(" 代替 "),t("code",[e._v("Symbol.for('nodejs.rejection')")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { EventEmitter, captureRejectionSymbol } = require('events');\n\nclass MyClass extends EventEmitter {\n  constructor() {\n    super({ captureRejections: true });\n  }\n\n  [captureRejectionSymbol](err, event, ...args) {\n    console.log('rejection happened for', event, 'with', err, ...args);\n    this.destroy(err);\n  }\n\n  destroy(err) {\n    // 把这里的资源卸除。\n  }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("h3",{attrs:{id:"events-once-emitter-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events-once-emitter-name"}},[e._v("#")]),e._v(" "),t("code",[e._v("events.once(emitter, name)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#eventsonceemitter-name",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/events_once_emitter_name.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.13.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("emitter")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/ri1kj8",target:"_blank",rel:"noopener noreferrer"}},[t("Promise",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建 "),t("code",[e._v("Promise")]),e._v("，其在 "),t("code",[e._v("EventEmitter")]),e._v(" 触发给定事件时被履行，或者如果 "),t("code",[e._v("EventEmitter")]),e._v(" 在等待时触发 "),t("code",[e._v("'error'")]),e._v(" 则被拒绝。 "),t("code",[e._v("Promise")]),e._v(" 将使用触发给定事件的所有参数的数组解决。")]),e._v(" "),t("p",[e._v("此方法有意通用，与 Web 平台 "),t("a",{attrs:{href:"http://url.nodejs.cn/zSu9eM",target:"_blank",rel:"noopener noreferrer"}},[e._v("EventTarget"),t("OutboundLink")],1),e._v(" 接口配合使用，该接口没有特殊的 "),t("code",[e._v("'error'")]),e._v(" 事件语义，也不监听 "),t("code",[e._v("'error'")]),e._v(" 事件。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br")])]),t("p",[t("code",[e._v("'error'")]),e._v(" 事件的特殊处理仅在 "),t("code",[e._v("events.once()")]),e._v(" 用于等待另一个事件时使用。 如果 "),t("code",[e._v("events.once()")]),e._v(" 用于等待 "),t("code",[e._v("error'")]),e._v(" 事件本身，则它将被视为任何其他类型的事件而无需特殊处理：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// 打印: ok boom\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h4",{attrs:{id:"等待-process-nexttick-上触发的多个事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#等待-process-nexttick-上触发的多个事件"}},[e._v("#")]),e._v(" 等待 process.nextTick() 上触发的多个事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#awaiting-multiple-events-emitted-on-processnexttick",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/awaiting_multiple_events_emitted_on_process_nexttick.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("当使用 "),t("code",[e._v("events.once()")]),e._v(" 函数等待在同一批 "),t("code",[e._v("process.nextTick()")]),e._v(" 操作中触发的多个事件时，或者同步触发多个事件时，有一个边缘情况值得注意。 具体来说，因为 "),t("code",[e._v("process.nextTick()")]),e._v(" 队列在 "),t("code",[e._v("Promise")]),e._v(" 微任务队列之前被排空，并且因为 "),t("code",[e._v("EventEmitter")]),e._v(" 同步触发所有事件，所以 "),t("code",[e._v("events.once()")]),e._v(" 有可能错过事件。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { EventEmitter, once } = require('events');\n\nconst myEE = new EventEmitter();\n\nasync function foo() {\n  await once(myEE, 'bar');\n  console.log('bar');\n\n  // 此 Promise 永远不会被解决，\n  // 因为 'foo' 事件在 Promise 被创建之前就已经触发了。\n  await once(myEE, 'foo');\n  console.log('foo');\n}\n\nprocess.nextTick(() => {\n  myEE.emit('bar');\n  myEE.emit('foo');\n});\n\nfoo().then(() => console.log('done'));\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br")])]),t("p",[e._v("要捕获这两个事件，则在等待其中一个之前创建每个 Promise，然后可以使用 "),t("code",[e._v("Promise.all()")]),e._v("、"),t("code",[e._v("Promise.race()")]),e._v(" 或 "),t("code",[e._v("Promise.allSettled()")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { EventEmitter, once } = require('events');\n\nconst myEE = new EventEmitter();\n\nasync function foo() {\n  await Promise.all([once(myEE, 'bar'), once(myEE, 'foo')]);\n  console.log('foo', 'bar');\n}\n\nprocess.nextTick(() => {\n  myEE.emit('bar');\n  myEE.emit('foo');\n});\n\nfoo().then(() => console.log('done'));\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br")])]),t("h3",{attrs:{id:"events-capturerejections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events-capturerejections"}},[e._v("#")]),e._v(" "),t("code",[e._v("events.captureRejections")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#eventscapturerejections",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/events_capturerejections.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api/documentation.html#stability-index",target:"_blank",rel:"noopener noreferrer"}},[e._v("稳定性: 1"),t("OutboundLink")],1),e._v(" - captureRejections 是实验的。")]),e._v(" "),t("p",[e._v("值: "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)]),e._v(" "),t("p",[e._v("更改所有新的 "),t("code",[e._v("EventEmitter")]),e._v(" 对象的默认 "),t("code",[e._v("captureRejections")]),e._v(" 选项。")]),e._v(" "),t("h3",{attrs:{id:"events-capturerejectionsymbol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events-capturerejectionsymbol"}},[e._v("#")]),e._v(" events.captureRejectionSymbol"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#eventscapturerejectionsymbol",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/events_capturerejectionsymbol.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api/documentation.html#stability-index",target:"_blank",rel:"noopener noreferrer"}},[e._v("稳定性: 1"),t("OutboundLink")],1),e._v(" - captureRejections 是实验的。")]),e._v(" "),t("p",[e._v("值: "),t("code",[e._v("Symbol.for('nodejs.rejection')")])]),e._v(" "),t("p",[e._v("了解如何编写自定义的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_emitter_symbol_for_nodejs_rejection_err_eventname_args",target:"_blank",rel:"noopener noreferrer"}},[e._v("拒绝句柄"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"events-on-emitter-eventname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events-on-emitter-eventname"}},[e._v("#")]),e._v(" events.on(emitter, eventName)"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#eventsonemitter-eventname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/events/events_on_emitter_eventname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("emitter")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("eventName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)]),e._v(" 正在监听的事件的名称")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/HnG4ws",target:"_blank",rel:"noopener noreferrer"}},[t("AsyncIterator",[t("OutboundLink")],1)],1),e._v(" 迭代由 "),t("code",[e._v("emitter")]),e._v(" 触发的 "),t("code",[e._v("eventName")]),e._v(" 事件")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // 稍后触发\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // 此内部块的执行是同步的，\n    // 且每次处理一个事件（即使有等待）。\n    // 如果需要并发执行，则不要使用。\n    console.log(event); // 打印 ['bar'] [42]\n  }\n  // 此处无法到达\n})();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br")])]),t("p",[e._v("返回迭代 "),t("code",[e._v("eventName")]),e._v(" 事件的 "),t("code",[e._v("AsyncIterator")]),e._v("。 如果 "),t("code",[e._v("EventEmitter")]),e._v(" 触发 "),t("code",[e._v("'error'")]),e._v("，则将抛出错误。 它在退出循环时删除所有监听器。 每次迭代返回的 "),t("code",[e._v("value")]),e._v(" 是由触发的事件参数组成的数组。")])])}),[],!1,null,null,null);n.default=s.exports}}]);