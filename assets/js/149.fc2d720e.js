(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{617:function(e,a,n){"use strict";n.r(a);var s=n(18),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"package-包模块-node-js-api-文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-包模块-node-js-api-文档"}},[e._v("#")]),e._v(" package 包模块 | Node.js API 文档")]),e._v(" "),n("blockquote",[n("h2",{attrs:{id:"excerpt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),n("p",[e._v("中英对照")])]),e._v(" "),n("hr"),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/modules_packages.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#introduction",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/introduction.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("包是由 "),n("code",[e._v("package.json")]),e._v(" 文件描述的文件夹树。 包由包含 "),n("code",[e._v("package.json")]),e._v(" 文件的文件夹和所有子文件夹组成，直到包含另一个 "),n("code",[e._v("package.json")]),e._v(" 文件的下一个文件夹或名为 "),n("code",[e._v("node_modules")]),e._v(" 的文件夹。")]),e._v(" "),n("p",[e._v("此页面为编写 "),n("code",[e._v("package.json")]),e._v(" 文件的包作者提供指导，以及 Node.js 定义的 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_node_js_package_json_field_definitions",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("package.json")]),n("OutboundLink")],1),e._v(" 字段的参考。")]),e._v(" "),n("h3",{attrs:{id:"确定模块系统"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#确定模块系统"}},[e._v("#")]),e._v(" 确定模块系统"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#determining-module-system",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/determining_module_system.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("当作为初始输入传给 "),n("code",[e._v("node")]),e._v(" 时，或当 ES 模块代码中的 "),n("code",[e._v("import")]),e._v(" 语句引用时，Node.js 会将以下视为"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/esm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES 模块"),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("以 "),n("code",[e._v(".mjs")]),e._v(" 结尾的文件。")])]),e._v(" "),n("li",[n("p",[e._v("当最近的父 "),n("code",[e._v("package.json")]),e._v(" 文件包含值为 "),n("code",[e._v('"module"')]),e._v(" 的顶层 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_type",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"type"')]),n("OutboundLink")],1),e._v(" 字段时，以 "),n("code",[e._v(".js")]),e._v(" 结尾的文件。")])]),e._v(" "),n("li",[n("p",[e._v("字符串作为参数传入 "),n("code",[e._v("--eval")]),e._v("，或通过 "),n("code",[e._v("STDIN")]),e._v(" 管道传输到 "),n("code",[e._v("node")]),e._v("，带有标志 "),n("code",[e._v("--input-type=module")]),e._v("。")])])]),e._v(" "),n("p",[e._v("Node.js 会将所有其他形式的输入视为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/modules.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),n("OutboundLink")],1),e._v("，例如 "),n("code",[e._v(".js")]),e._v(" 文件，其中最近的父 "),n("code",[e._v("package.json")]),e._v(" 文件不包含顶层 "),n("code",[e._v('"type"')]),e._v(" 字段，或者没有标志 "),n("code",[e._v("--input-type")]),e._v(" 的字符串输入。 此行为是为了保持向后兼容性。 但是，现在 Node.js 同时支持 CommonJS 和 ES 模块，最好尽可能明确。 当作为初始输入传给 "),n("code",[e._v("node")]),e._v(" 或被 ES 模块代码中的 "),n("code",[e._v("import")]),e._v(" 语句引用时，Node.js 会将以下视为 CommonJS：")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("以 "),n("code",[e._v(".cjs")]),e._v(" 结尾的文件。")])]),e._v(" "),n("li",[n("p",[e._v("当最近的父 "),n("code",[e._v("package.json")]),e._v(" 文件包含值为 "),n("code",[e._v('"commonjs"')]),e._v(" 的顶层字段 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_type",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"type"')]),n("OutboundLink")],1),e._v(" 时，以 "),n("code",[e._v(".js")]),e._v(" 结尾的文件。")])]),e._v(" "),n("li",[n("p",[e._v("字符串作为参数传入 "),n("code",[e._v("--eval")]),e._v(" 或 "),n("code",[e._v("--print")]),e._v("，或通过 "),n("code",[e._v("STDIN")]),e._v(" 管道传输到 "),n("code",[e._v("node")]),e._v("，带有标志 "),n("code",[e._v("--input-type=commonjs")]),e._v("。")])])]),e._v(" "),n("p",[e._v("包作者应该包括 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_type",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"type"')]),n("OutboundLink")],1),e._v(" 字段，即使在所有源都是 CommonJS 的包中也是如此。 如果 Node.js 的默认类型发生变化，显式说明包的 "),n("code",[e._v("type")]),e._v(" 将使包面向未来，它还将使构建工具和加载器更容易确定应如何解释包中的文件。")]),e._v(" "),n("h4",{attrs:{id:"package-json-和文件扩展名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-json-和文件扩展名"}},[e._v("#")]),e._v(" package.json 和文件扩展名"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packagejson-and-file-extensions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/package_json_and_file_extensions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("在包中，"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_node_js_package_json_field_definitions",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("package.json")]),n("OutboundLink")],1),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_type",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"type"')]),n("OutboundLink")],1),e._v(" 字段定义了 Node.js 应该如何解释 "),n("code",[e._v(".js")]),e._v(" 文件。 如果 "),n("code",[e._v("package.json")]),e._v(" 文件没有 "),n("code",[e._v('"type"')]),e._v(" 字段，则 "),n("code",[e._v(".js")]),e._v(" 文件将被视为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/modules.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[n("code",[e._v('"module"')]),e._v(" 的 "),n("code",[e._v("package.json")]),e._v(" "),n("code",[e._v('"type"')]),e._v(" 值告诉 Node.js 将该包中的 "),n("code",[e._v(".js")]),e._v(" 文件解释为使用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/esm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES 模块"),n("OutboundLink")],1),e._v("语法。")]),e._v(" "),n("p",[n("code",[e._v('"type"')]),e._v(" 字段不仅适用于初始入口点 ("),n("code",[e._v("node my-app.js")]),e._v(")，还适用于 "),n("code",[e._v("import")]),e._v(" 语句和 "),n("code",[e._v("import()")]),e._v(" 表达式引用的文件。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// my-app.js 被当做 ES 模块，\n// 因为在同一个文件夹中有 package.json 文件与 "type": "module"。\n\nimport \'./startup/init.js\';\n// 作为 ES 模块加载，因为 ./startup 不包含 package.json 文件，\n// 因此从上一层继承了 "type" 值。\n\nimport \'commonjs-package\';\n// 作为 CommonJS 加载，因为 ./node_modules/commonjs-package/package.json \n// 缺少 "type" 字段或包含 "type": "commonjs"。\n\nimport \'./node_modules/commonjs-package/index.js\';\n// 作为 CommonJS 加载，因为 ./node_modules/commonjs-package/package.json \n// 缺少 "type" 字段或包含 "type": "commonjs"。\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("p",[e._v("以 "),n("code",[e._v(".mjs")]),e._v(" 结尾的文件总是作为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/esm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES 模块"),n("OutboundLink")],1),e._v("加载，而不管最近的父级 "),n("code",[e._v("package.json")]),e._v("。")]),e._v(" "),n("p",[e._v("以 "),n("code",[e._v(".cjs")]),e._v(" 结尾的文件总是作为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/modules.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),n("OutboundLink")],1),e._v(" 加载，而不管最近的父级 "),n("code",[e._v("package.json")]),e._v("。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import './legacy-file.cjs';\n// 作为 CommonJS 加载，因为 .cjs 总是作为 CommonJS 加载。\n\nimport 'commonjs-package/src/index.mjs';\n// 作为 ES 模块加载，因为 .mjs 总是作为 ES 模块加载。\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[n("code",[e._v(".mjs")]),e._v(" 和 "),n("code",[e._v(".cjs")]),e._v(" 扩展可用于在同一个包中混合类型：")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("在 "),n("code",[e._v('"type": "module"')]),e._v(" 包中，Node.js 可以通过使用 "),n("code",[e._v(".cjs")]),e._v(" 扩展名命名它来指示将特定文件解释为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/modules.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),n("OutboundLink")],1),e._v("（因为 "),n("code",[e._v(".js")]),e._v(" 和 "),n("code",[e._v(".mjs")]),e._v(" 文件都被视为 "),n("code",[e._v('"module"')]),e._v(" 包中的 ES 模块）")])]),e._v(" "),n("li",[n("p",[e._v("在 "),n("code",[e._v('"type": "commonjs"')]),e._v(" 包中，Node.js 可以被指示将特定文件解释为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/esm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES 模块"),n("OutboundLink")],1),e._v("，方法是使用 "),n("code",[e._v(".mjs")]),e._v(" 扩展名命名它（因为 "),n("code",[e._v(".js")]),e._v(" 和 "),n("code",[e._v(".cjs")]),e._v(" 文件都被视为 "),n("code",[e._v('"commonjs"')]),e._v(" 包中的 CommonJS）。")])])]),e._v(" "),n("h4",{attrs:{id:"input-type-标志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#input-type-标志"}},[e._v("#")]),e._v(" --input-type 标志"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#--input-type-flag",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/input_type_flag.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("作为参数传给 "),n("code",[e._v("--eval")]),e._v("（或 "),n("code",[e._v("-e")]),e._v("），或通过 "),n("code",[e._v("STDIN")]),e._v(" 管道传输到 "),n("code",[e._v("node")]),e._v(" 的字符串，在设置 "),n("code",[e._v("--input-type=module")]),e._v(" 标志时被视为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/esm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES 模块"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("node --input-type=module --eval \"import { sep } from 'path'; console.log(sep);\"\n\necho \"import { sep } from 'path'; console.log(sep);\" | node --input-type=module\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("为了完整起见，还有 "),n("code",[e._v("--input-type=commonjs")]),e._v("，用于显式地将字符串输入作为 CommonJS 运行。 如果未指定 "),n("code",[e._v("--input-type")]),e._v("，这是默认行为。")]),e._v(" "),n("h3",{attrs:{id:"包的入口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#包的入口"}},[e._v("#")]),e._v(" 包的入口"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#package-entry-points",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/package_entry_points.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("在包的 "),n("code",[e._v("package.json")]),e._v(" 文件中，有两个字段可以定义包的入口点："),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" 和 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v("。 所有版本的 Node.js 都支持 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" 字段，但它的功能有限：它只定义了包的主要入口点。")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段提供了 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" 的替代方案，其中可以定义包主入口点，同时封装包，"),n("strong",[e._v("防止除 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 中定义的入口点之外的任何其他入口点")]),e._v("。 这种封装允许模块作者为他们的包定义一个公共接口。")]),e._v(" "),n("p",[e._v("如果同时定义了 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 和 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v("，则 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段优先于 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v("。 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 不特定于 ES 模块或 CommonJS；如果 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 存在，则 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" 将被覆盖。 因此 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" 不能用作 CommonJS 的后备，但它可以用作不支持 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段的旧版 Node.js 的后备。")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_conditional_exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("条件导出"),n("OutboundLink")],1),e._v("可以在 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 中用于为每个环境定义不同的包入口点，包括包是通过 "),n("code",[e._v("require")]),e._v(" 还是通过 "),n("code",[e._v("import")]),e._v(" 引用。 有关在单个包中同时支持 CommonJS 和 ES 模块的更多信息，请参阅"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_dual_commonjs_es_module_packages",target:"_blank",rel:"noopener noreferrer"}},[e._v("双 CommonJS/ES 模块包章节"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[n("strong",[e._v("警告")]),e._v("：引入 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段可防止包的消费者使用任何未定义的入口点，包括 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_node_js_package_json_field_definitions",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("package.json")]),n("OutboundLink")],1),e._v("（例如 "),n("code",[e._v("require('your-package/package.json')")]),e._v("。 "),n("strong",[e._v("这可能是一个突破性的变化。")])]),e._v(" "),n("p",[e._v("为了使 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 的引入不间断，请确保导出每个以前支持的入口点。 最好明确指定入口点，以便明确定义包的公共 API。 例如，以前导出 "),n("code",[e._v("main")]),e._v("、"),n("code",[e._v("lib")]),e._v("、"),n("code",[e._v("feature")]),e._v(" 和 "),n("code",[e._v("package.json")]),e._v(" 的项目可以使用以下 "),n("code",[e._v("package.exports")]),e._v("：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "name": "my-mod",\n  "exports": {\n    ".": "./lib/index.js",\n    "./lib": "./lib/index.js",\n    "./lib/index": "./lib/index.js",\n    "./lib/index.js": "./lib/index.js",\n    "./feature": "./feature/index.js",\n    "./feature/index.js": "./feature/index.js",\n    "./package.json": "./package.json"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("或者，一个项目可以选择导出整个文件夹：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "name": "my-mod",\n  "exports": {\n    ".": "./lib/index.js",\n    "./lib": "./lib/index.js",\n    "./lib/*": "./lib/*.js",\n    "./feature": "./feature/index.js",\n    "./feature/*": "./feature/*.js",\n    "./package.json": "./package.json"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("p",[e._v("作为最后的手段，可以通过为包 "),n("code",[e._v('"./*": "./*"')]),e._v(" 的根创建导出来完全禁用包封装。 这会以禁用封装和潜在的工具优势为代价公开包中的每个文件。 由于 Node.js 中的 ES 模块加载器强制使用"),n("a",{attrs:{href:"http://url.nodejs.cn/W9TQvZ",target:"_blank",rel:"noopener noreferrer"}},[e._v("完整说明符路径"),n("OutboundLink")],1),e._v("，导出根而不是明确表示条目比前面的任何一个示例都没有表现力。 不仅封装丢失，模块消费者也无法 "),n("code",[e._v("import feature from 'my-mod/feature'")]),e._v("，因为他们需要提供完整路径 "),n("code",[e._v("import feature from 'my-mod/feature/index.js")]),e._v("。")]),e._v(" "),n("h4",{attrs:{id:"主入口的导出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主入口的导出"}},[e._v("#")]),e._v(" 主入口的导出"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#main-entry-point-export",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/main_entry_point_export.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("要设置包的主入口点，建议在包的 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_node_js_package_json_field_definitions",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("package.json")]),n("OutboundLink")],1),e._v(" 文件中同时定义 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 和 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v("：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "main": "./main.js",\n  "exports": "./main.js"\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("当定义了 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段时，则包的所有子路径都被封装，不再提供给导入器。 例如，"),n("code",[e._v("require('pkg/subpath.js')")]),e._v(" 抛出 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_package_path_not_exported",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ERR_PACKAGE_PATH_NOT_EXPORTED")]),n("OutboundLink")],1),e._v(" 错误。")]),e._v(" "),n("p",[e._v("这种导出的封装为工具的包接口以及处理包的语义版本升级提供了更可靠的保证。 这不是强封装，因为直接要求包的任何绝对子路径，例如 "),n("code",[e._v("require('/path/to/node_modules/pkg/subpath.js')")]),e._v(" 仍然会加载 "),n("code",[e._v("subpath.js")]),e._v("。")]),e._v(" "),n("h4",{attrs:{id:"子路径的导出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#子路径的导出"}},[e._v("#")]),e._v(" 子路径的导出"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#subpath-exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/subpath_exports.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("当使用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段时，可以通过将主入口点视为 "),n("code",[e._v('"."')]),e._v(" 子路径来定义自定义子路径以及主入口点：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "main": "./main.js",\n  "exports": {\n    ".": "./main.js",\n    "./submodule": "./src/submodule.js"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("现在消费者只能导入 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 中定义的子路径：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import submodule from 'es-module-package/submodule';\n// 加载 ./node_modules/es-module-package/src/submodule.js\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("而其他子路径会出错：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import submodule from 'es-module-package/private-module.js';\n// 抛出 ERR_PACKAGE_PATH_NOT_EXPORTED\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h4",{attrs:{id:"子路径的导入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#子路径的导入"}},[e._v("#")]),e._v(" 子路径的导入"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#subpath-imports",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/subpath_imports.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("除了 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段，还可以定义内部包导入映射，这些映射仅适用于包本身内部的导入说明符。")]),e._v(" "),n("p",[e._v("导入字段中的条目必须始终以 "),n("code",[e._v("#")]),e._v(" 开头，以确保它们与包说明符没有歧义。")]),e._v(" "),n("p",[e._v("例如，可以使用导入字段来获得内部模块条件导出的好处：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// package.json\n{\n  "imports": {\n    "#dep": {\n      "node": "dep-node-native",\n      "default": "./dep-polyfill.js"\n    }\n  },\n  "dependencies": {\n    "dep-node-native": "^1.0.0"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("其中 "),n("code",[e._v("import '#dep'")]),e._v(" 没有得到外部包 "),n("code",[e._v("dep-node-native")]),e._v(" 的解析（依次包括其导出），而是获取了相对于其他环境中的包的本地文件 "),n("code",[e._v("./dep-polyfill.js")]),e._v("。")]),e._v(" "),n("p",[e._v("与 "),n("code",[e._v('"exports"')]),e._v(" 字段不同，"),n("code",[e._v('"imports"')]),e._v(" 字段允许映射到外部包。")]),e._v(" "),n("p",[e._v("导入字段的解析规则与导出字段类似。")]),e._v(" "),n("h4",{attrs:{id:"子路径的模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#子路径的模式"}},[e._v("#")]),e._v(" 子路径的模式"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#subpath-patterns",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/subpath_patterns.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("对于具有少量导出或导入的包，我们建议显式地列出每个导出子路径条目。 但是对于具有大量子路径的包，这可能会导致 "),n("code",[e._v("package.json")]),e._v(" 膨胀和维护问题。")]),e._v(" "),n("p",[e._v("对于这些用例，可以使用子路径导出模式：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// ./node_modules/es-module-package/package.json\n{\n  "exports": {\n    "./features/*": "./src/features/*.js"\n  },\n  "imports": {\n    "#internal/*": "./src/internal/*.js"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("然后，右侧 "),n("code",[e._v("*")]),e._v(" 的所有实例都将替换为该值，包括它是否包含任何 "),n("code",[e._v("/")]),e._v(" 分隔符。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import featureX from 'es-module-package/features/x';\n// 加载 ./node_modules/es-module-package/src/features/x.js\n\nimport featureY from 'es-module-package/features/y/y';\n// 加载 ./node_modules/es-module-package/src/features/y/y.js\n\nimport internalZ from '#internal/z';\n// 加载 ./node_modules/es-module-package/src/internal/z.js\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("这是直接的静态替换，没有对文件扩展名进行任何特殊处理。 在前面的例子中，"),n("code",[e._v("pkg/features/x.json")]),e._v(" 将在映射中解析为 "),n("code",[e._v("./src/features/x.json.js")]),e._v("。")]),e._v(" "),n("p",[e._v("导出的静态可枚举属性由导出模式维护，因为可以通过将右侧目标模式视为针对包内文件列表的 "),n("code",[e._v("**")]),e._v(" glob 来确定包的各个导出。 因为导出目标中禁止 "),n("code",[e._v("node_modules")]),e._v(" 路径，所以这个扩展只依赖包本身的文件。")]),e._v(" "),n("h4",{attrs:{id:"导出的语法糖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导出的语法糖"}},[e._v("#")]),e._v(" 导出的语法糖"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#exports-sugar",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/exports_sugar.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("如果 "),n("code",[e._v('"."')]),e._v(" 导出是唯一的导出，则 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段为这种情况提供了语法糖，即直接的 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段值。")]),e._v(" "),n("p",[e._v("如果 "),n("code",[e._v('"."')]),e._v(" 导出有回退数组或字符串值，则可以直接将 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段设置为此值。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "exports": {\n    ".": "./main.js"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("可以写成：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "exports": "./main.js"\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h4",{attrs:{id:"条件导出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#条件导出"}},[e._v("#")]),e._v(" 条件导出"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#conditional-exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/conditional_exports.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("条件导出提供了一种根据特定条件映射到不同路径的方法。 CommonJS 和 ES 模块导入都支持它们。")]),e._v(" "),n("p",[e._v("比如，包想要为 "),n("code",[e._v("require()")]),e._v(" 和 "),n("code",[e._v("import")]),e._v(" 提供不同的 ES 模块导出可以这样写：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// package.json\n{\n  "main": "./main-require.cjs",\n  "exports": {\n    "import": "./main-module.js",\n    "require": "./main-require.cjs"\n  },\n  "type": "module"\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("ul",[n("li",[n("code",[e._v('"import"')]),e._v(" - 当包通过 "),n("code",[e._v("import")]),e._v(" 或 "),n("code",[e._v("import()")]),e._v("，或者通过 ECMAScript 模块加载器的任何顶层导入或解析操作加载时匹配。 无论目标文件的模块格式如何，都适用。 "),n("em",[e._v("始终与 "),n("code",[e._v('"require"')]),e._v(" 互斥。")])]),e._v(" "),n("li",[n("code",[e._v('"require"')]),e._v(" - 当包通过 "),n("code",[e._v("require()")]),e._v(" 加载时匹配。 引用的文件应该可以用 "),n("code",[e._v("require()")]),e._v(" 加载，尽管无论目标文件的模块格式如何，条件都匹配。 预期的格式包括 CommonJS、JSON 和原生插件，但不包括 ES 模块，因为 "),n("code",[e._v("require()")]),e._v(" 不支持它们。 "),n("em",[e._v("始终与 "),n("code",[e._v('"import"')]),e._v(" 互斥。")])]),e._v(" "),n("li",[n("code",[e._v('"node"')]),e._v(" - 匹配任何 Node.js 环境。 可以是 CommonJS 或 ES 模块文件。 "),n("em",[e._v("此条件应始终在 "),n("code",[e._v('"import"')]),e._v(" 或 "),n("code",[e._v('"require"')]),e._v(" 之后。")])]),e._v(" "),n("li",[n("code",[e._v('"default"')]),e._v(" - 始终匹配的通用后备。 可以是 CommonJS 或 ES 模块文件。 "),n("em",[e._v("此条件应始终放在最后。")])])]),e._v(" "),n("p",[e._v("在 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 对象中，键顺序很重要。 在条件匹配过程中，较早的条目具有更高的优先级并优先于较晚的条目。 "),n("em",[e._v("一般规则是条件应该按照对象顺序从最具体到最不具体")]),e._v("。")]),e._v(" "),n("p",[e._v("Node.js 以外的运行时或工具可以自行决定使用它们。")]),e._v(" "),n("p",[e._v("使用 "),n("code",[e._v('"import"')]),e._v(" 和 "),n("code",[e._v('"require"')]),e._v(" 条件会导致一些危害，在"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_dual_commonjs_es_module_packages",target:"_blank",rel:"noopener noreferrer"}},[e._v("双 CommonJS/ES 模块包章节"),n("OutboundLink")],1),e._v("中有进一步的解释。")]),e._v(" "),n("p",[e._v("条件导出也可以扩展为导出子路径，例如：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "main": "./main.js",\n  "exports": {\n    ".": "./main.js",\n    "./feature": {\n      "node": "./feature-node.js",\n      "default": "./feature.js"\n    }\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("定义了一个包，其中 "),n("code",[e._v("require('pkg/feature')")]),e._v(" 和 "),n("code",[e._v("import 'pkg/feature'")]),e._v(" 可以在 Node.js 和其他 JS 环境之间提供不同的实现。")]),e._v(" "),n("p",[e._v("当使用环境分支时，总是尽可能包含 "),n("code",[e._v('"default"')]),e._v(" 条件。 提供 "),n("code",[e._v('"default"')]),e._v(" 条件可确保任何未知的 JS 环境都能够使用此通用实现，这有助于避免这些 JS 环境必须伪装成现有环境以支持具有条件导出的包。 出于这个原因，使用 "),n("code",[e._v('"node"')]),e._v(" 和 "),n("code",[e._v('"default"')]),e._v(" 条件分支通常比使用 "),n("code",[e._v('"node"')]),e._v(" 和 "),n("code",[e._v('"browser"')]),e._v(" 条件分支更可取。")]),e._v(" "),n("h4",{attrs:{id:"嵌套的条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#嵌套的条件"}},[e._v("#")]),e._v(" 嵌套的条件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#nested-conditions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/nested_conditions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("除了直接映射，Node.js 还支持嵌套条件对象。")]),e._v(" "),n("p",[e._v("例如，要定义一个包，它只有双模式入口点用于 Node.js 而不是浏览器：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "main": "./main.js",\n  "exports": {\n    "node": {\n      "import": "./feature-node.mjs",\n      "require": "./feature-node.cjs"\n    },\n    "default": "./feature.mjs",\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("条件继续按顺序与平面条件匹配。 如果嵌套条件没有任何映射，则将继续检查父条件的剩余条件。 通过这种方式，嵌套条件的行为类似于嵌套的 JavaScript "),n("code",[e._v("if")]),e._v(" 语句。")]),e._v(" "),n("h4",{attrs:{id:"处理用户条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#处理用户条件"}},[e._v("#")]),e._v(" 处理用户条件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#resolving-user-conditions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/resolving_user_conditions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("运行 Node.js 时，可以使用 "),n("code",[e._v("--conditions")]),e._v(" 标志添加自定义用户条件：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("node --conditions=development main.js\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("可以使用重复标志设置任意数量的自定义条件。")]),e._v(" "),n("h4",{attrs:{id:"使用名称来引用包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用名称来引用包"}},[e._v("#")]),e._v(" 使用名称来引用包"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#self-referencing-a-package-using-its-name",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/self_referencing_a_package_using_its_name.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("在一个包中，在包的 "),n("code",[e._v("package.json")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段中定义的值可以通过包的名称引用。 例如，假设 "),n("code",[e._v("package.json")]),e._v(" 是：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// package.json\n{\n  "name": "a-package",\n  "exports": {\n    ".": "./main.mjs",\n    "./foo": "./foo.js"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("然后该包中的任何模块都可以引用包本身中的导出：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// ./a-module.mjs\nimport { something } from 'a-package'; // 从 ./main.mjs 导入 \"something\"。\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("自引用仅在 "),n("code",[e._v("package.json")]),e._v(" 具有 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 时可用，并且只允许导入 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v("（在 "),n("code",[e._v("package.json")]),e._v(" 中）允许的内容。 所以下面的代码，给定前面的包，会产生运行时错误：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// ./another-module.mjs\n\n// 从 ./m.mjs 导入 "another"。\n// 失败，因为 "package.json" "exports" 字段 \n// 不提供名为 "./m.mjs" 的导出。\nimport { another } from \'a-package/m.mjs\';\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[e._v("在 ES 模块和 CommonJS 模块中使用 "),n("code",[e._v("require")]),e._v(" 时也可以使用自引用。 例如，这段代码也可以工作：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// ./a-module.js\nconst { something } = require('a-package/foo'); // 从 ./foo.js 加载。\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h3",{attrs:{id:"双-commonjs-es-模块包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双-commonjs-es-模块包"}},[e._v("#")]),e._v(" 双 CommonJS/ES 模块包"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#dual-commonjses-module-packages",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/dual_commonjs_es_module_packages.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("在 Node.js 中引入对 ES 模块的支持之前，包作者的一种常见模式是在他们的包中包含 CommonJS 和 ES 模块 JavaScript 源代码，其中 "),n("code",[e._v("package.json")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" 指定了 CommonJS 入口点，而 "),n("code",[e._v("package.json")]),e._v(" "),n("code",[e._v('"module"')]),e._v(" 指定了 ES模块入口点。 这使 Node.js 能够运行 CommonJS 入口点，而构建工具（例如捆绑器）使用 ES 模块入口点，因为 Node.js 忽略（并且仍然忽略）顶层 "),n("code",[e._v('"module"')]),e._v(" 字段。")]),e._v(" "),n("p",[e._v("Node.js 现在可以运行 ES 模块入口点，并且一个包可以同时包含 CommonJS 和 ES 模块入口点（通过单独的说明符，例如 "),n("code",[e._v("'pkg'")]),e._v(" 和 "),n("code",[e._v("'pkg/es-module'")]),e._v("，或者通过"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_conditional_exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("条件导出"),n("OutboundLink")],1),e._v("在同一个说明符中）。 与 "),n("code",[e._v('"module"')]),e._v(" 仅由打包程序使用的场景不同，或者在 Node.js 评估之前将 ES 模块文件动态转换为 CommonJS，ES 模块入口点引用的文件被评估为 ES 模块。")]),e._v(" "),n("h4",{attrs:{id:"双包的危害"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双包的危害"}},[e._v("#")]),e._v(" 双包的危害"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#dual-package-hazard",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/dual_package_hazard.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("当应用程序使用提供 CommonJS 和 ES 模块源的包时，如果包的两个版本都被加载，则存在某些错误的风险。 此潜力来自于 "),n("code",[e._v("const pkgInstance = require('pkg')")]),e._v(" 创建的 "),n("code",[e._v("pkgInstance")]),e._v(" 与 "),n("code",[e._v("import pkgInstance from 'pkg'")]),e._v(" 创建的 "),n("code",[e._v("pkgInstance")]),e._v("（或像 "),n("code",[e._v("'pkg/module'")]),e._v(" 这样的替代主路径）不同的事实。 这是“双包风险”，同一包的两个版本可以在同一个运行时环境中加载。 虽然应用程序或包不太可能有意直接加载两个版本，但应用程序加载一个版本而应用程序的依赖项加载另一个版本是很常见的。 这种危险可能发生，因为 Node.js 支持混合 CommonJS 和 ES 模块，并可能导致意外行为。")]),e._v(" "),n("p",[e._v("如果包主导出是一个构造函数，两个版本创建的实例的 "),n("code",[e._v("instanceof")]),e._v(" 比较返回 "),n("code",[e._v("false")]),e._v("，如果导出是一个对象，添加到一个的属性（如 "),n("code",[e._v("pkgInstance.foo = 3")]),e._v("）在另一个上不存在。 这与 "),n("code",[e._v("import")]),e._v(" 和 "),n("code",[e._v("require")]),e._v(" 语句分别在全 CommonJS 或全 ES 模块环境中的工作方式不同，因此令用户感到惊讶。 它也不同于用户在通过 "),n("a",{attrs:{href:"http://url.nodejs.cn/u3q1WH",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babel"),n("OutboundLink")],1),e._v(" 或 "),n("a",{attrs:{href:"http://url.nodejs.cn/6t74fP",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("esm")]),n("OutboundLink")],1),e._v(" 等工具使用转译时所熟悉的行为。")]),e._v(" "),n("h4",{attrs:{id:"在避免或最小化危害的同时编写双包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在避免或最小化危害的同时编写双包"}},[e._v("#")]),e._v(" 在避免或最小化危害的同时编写双包"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#writing-dual-packages-while-avoiding-or-minimizing-hazards",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/writing_dual_packages_while_avoiding_or_minimizing_hazards.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("首先，当一个包同时包含 CommonJS 和 ES 模块源并且这两个源都通过单独的主入口点或导出路径提供以在 Node.js 中使用时，就会发生上一节中描述的危险。 一个包可能被写成任何版本的 Node.js 只接收 CommonJS 源，并且包可能包含的任何单独的 ES 模块源仅用于其他环境，例如浏览器。 这样的包可以被任何版本的 Node.js 使用，因为 "),n("code",[e._v("import")]),e._v(" 可以引用 CommonJS 文件；但它不会提供使用 ES 模块语法的任何优点。")]),e._v(" "),n("p",[e._v("一个包也可能会在"),n("a",{attrs:{href:"http://url.nodejs.cn/ePJAtd",target:"_blank",rel:"noopener noreferrer"}},[e._v("重大更改"),n("OutboundLink")],1),e._v("版本碰撞中从 CommonJS 切换到 ES 模块语法。 这有一个缺点，即最新版本的包只能在支持 ES 模块的 Node.js 版本中使用。")]),e._v(" "),n("p",[e._v("每种模式都有权衡，但有两种广泛的方法可以满足以下条件：")]),e._v(" "),n("ol",[n("li",[e._v("该软件包可通过 "),n("code",[e._v("require")]),e._v(" 和 "),n("code",[e._v("import")]),e._v(" 使用。")]),e._v(" "),n("li",[e._v("该包在当前 Node.js 和不支持 ES 模块的旧版本 Node.js 中都可用。")]),e._v(" "),n("li",[e._v("包主入口点，例如 "),n("code",[e._v("'pkg'")]),e._v(" 可以被 "),n("code",[e._v("require")]),e._v(" 用来解析 CommonJS 文件，也可以被 "),n("code",[e._v("import")]),e._v(" 用来解析 ES 模块文件。 （对于导出的路径也是如此，例如 "),n("code",[e._v("'pkg/feature'")]),e._v("。）")]),e._v(" "),n("li",[e._v("该包提供命名导出，例如 "),n("code",[e._v("import { name } from 'pkg'")]),e._v(" 而不是 "),n("code",[e._v("import pkg from 'pkg'; pkg.name")]),e._v("。")]),e._v(" "),n("li",[e._v("该包可能在其他 ES 模块环境中可用，例如浏览器。")]),e._v(" "),n("li",[e._v("避免或最小化上一节中描述的危害。")])]),e._v(" "),n("h5",{attrs:{id:"方法1-使用-es-模块封装器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法1-使用-es-模块封装器"}},[e._v("#")]),e._v(" 方法1：使用 ES 模块封装器"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#approach-1-use-an-es-module-wrapper",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/approach_1_use_an_es_module_wrapper.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("在 CommonJS 中编写包或将 ES 模块源代码转换为 CommonJS，并创建定义命名导出的 ES 模块封装文件。 使用"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_conditional_exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("条件导出"),n("OutboundLink")],1),e._v(", "),n("code",[e._v("import")]),e._v(" 使用 ES 模块封装器，"),n("code",[e._v("require")]),e._v(" 使用 CommonJS 入口点。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// ./node_modules/pkg/package.json\n{\n  "type": "module",\n  "main": "./index.cjs",\n  "exports": {\n    "import": "./wrapper.mjs",\n    "require": "./index.cjs"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("前面的示例使用显式扩展 "),n("code",[e._v(".mjs")]),e._v(" 和 "),n("code",[e._v(".cjs")]),e._v("。 如果你的文件使用 "),n("code",[e._v(".js")]),e._v(" 扩展名，"),n("code",[e._v('"type": "module"')]),e._v(" 会导致这些文件被视为 ES 模块，就像 "),n("code",[e._v('"type": "commonjs"')]),e._v(" 会导致它们被视为 CommonJS。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// ./node_modules/pkg/index.cjs\nexports.name = 'value';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// ./node_modules/pkg/wrapper.mjs\nimport cjsModule from './index.cjs';\nexport const name = cjsModule.name;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("在这个例子中，"),n("code",[e._v("import { name } from 'pkg'")]),e._v(" 中的 "),n("code",[e._v("name")]),e._v(" 与 "),n("code",[e._v("const { name } = require('pkg')")]),e._v(" 中的 "),n("code",[e._v("name")]),e._v(" 是相同的单例。 因此，当比较两个 "),n("code",[e._v("name")]),e._v(" 时，"),n("code",[e._v("===")]),e._v(" 返回 "),n("code",[e._v("true")]),e._v("，避免了发散说明符的危险。")]),e._v(" "),n("p",[e._v("如果模块不是简单的命名导出列表，而是包含独特的函数或对象导出，如 "),n("code",[e._v("module.exports = function () { ... }")]),e._v("，或者如果需要封装器支持 "),n("code",[e._v("import pkg from 'pkg'")]),e._v(" 模式，则封装器将被编写为可选地导出默认值以及任何命名的导出：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import cjsModule from './index.cjs';\nexport const name = cjsModule.name;\nexport default cjsModule;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("此方法适用于以下任何用例：")]),e._v(" "),n("ul",[n("li",[e._v("该包目前是用 CommonJS 编写的，作者不希望将其重构为 ES 模块语法，而是希望为 ES 模块使用者提供命名导出。")]),e._v(" "),n("li",[e._v("该包还有其他依赖它的包，最终用户可能会同时安装这个包和那些其他包。 比如 "),n("code",[e._v("utilities")]),e._v(" 包直接在应用中使用，"),n("code",[e._v("utilities-plus")]),e._v(" 包给 "),n("code",[e._v("utilities")]),e._v(" 增加了一些功能。 因为封装器会导出底层的 CommonJS 文件，所以 "),n("code",[e._v("utilities-plus")]),e._v(" 是用 CommonJS 还是 ES 模块语法编写的并不重要；它会以任何一种方式工作。")]),e._v(" "),n("li",[e._v("包存储内部状态，包作者宁愿不重构包以隔离其状态管理。 请参阅下一章节。")])]),e._v(" "),n("p",[e._v("此方法的变体不需要消费者有条件导出，可以添加一个导出，例如 "),n("code",[e._v('"./module"')]),e._v("，指向包的全 ES 模块语法版本。 这可以通过 "),n("code",[e._v("import 'pkg/module'")]),e._v(" 由确定 CommonJS 版本不会在应用程序中的任何地方加载的用户使用，例如通过依赖项；或者如果 CommonJS 版本可以加载但不影响 ES 模块版本（例如, 因为包是无状态的）：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// ./node_modules/pkg/package.json\n{\n  "type": "module",\n  "main": "./index.cjs",\n  "exports": {\n    ".": "./index.cjs",\n    "./module": "./wrapper.mjs"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h5",{attrs:{id:"方法2-隔离状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法2-隔离状态"}},[e._v("#")]),e._v(" 方法2：隔离状态"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#approach-2-isolate-state",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/approach_2_isolate_state.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_node_js_package_json_field_definitions",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("package.json")]),n("OutboundLink")],1),e._v(" 文件可以直接定义单独的 CommonJS 和 ES 模块入口点：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// ./node_modules/pkg/package.json\n{\n  "type": "module",\n  "main": "./index.cjs",\n  "exports": {\n    "import": "./index.mjs",\n    "require": "./index.cjs"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("如果包的 CommonJS 和 ES 模块版本相同，则可以这样做，例如因为一个是另一个的转译输出；并且包的状态管理被仔细隔离（或包是无状态的）。")]),e._v(" "),n("p",[e._v("状态是一个问题的原因是因为包的 CommonJS 和 ES 模块版本都可能在应用程序中使用；例如，用户的应用程序代码可以 "),n("code",[e._v("import")]),e._v(" ES 模块版本，而依赖项 "),n("code",[e._v("require")]),e._v(" 是 CommonJS 版本。 如果发生这种情况，包的两个副本将被加载到内存中，因此将出现两个不同的状态。 这可能会导致难以解决的错误。")]),e._v(" "),n("p",[e._v("除了编写无状态的包（例如，如果 JavaScript 的 "),n("code",[e._v("Math")]),e._v(" 是一个包，它将是无状态的，因为它的所有方法都是静态的），还有一些方法可以隔离状态，以便在潜在加载的 CommonJS 和 ES 模块之间共享包的实例：")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("如果可能，在实例化对象中包含所有状态。 例如，JavaScript 的 "),n("code",[e._v("Date")]),e._v(" 需要实例化以包含状态；如果它是包，则它会像这样使用：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Date from 'date';\nconst someDate = new Date();\n// someDate 包含状态；Date 不包含\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[n("code",[e._v("new")]),e._v(" 关键字不是必需的；包的函数可以返回新的对象，或修改传入的对象，以保持包外部的状态。")])]),e._v(" "),n("li",[n("p",[e._v("在包的 CommonJS 和 ES 模块版本之间共享的一个或多个 CommonJS 文件中隔离状态。 比如 CommonJS 和 ES 模块入口点分别是 "),n("code",[e._v("index.cjs")]),e._v(" 和 "),n("code",[e._v("index.mjs")]),e._v("：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// ./node_modules/pkg/index.cjs\nconst state = require('./state.cjs');\nmodule.exports.state = state;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// ./node_modules/pkg/index.mjs\nimport state from './state.cjs';\nexport {\n  state\n};\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("即使 "),n("code",[e._v("pkg")]),e._v(" 在应用程序中通过 "),n("code",[e._v("require")]),e._v(" 和 "),n("code",[e._v("import")]),e._v(" 使用（例如，通过应用程序代码中的 "),n("code",[e._v("import")]),e._v(" 和依赖项通过 "),n("code",[e._v("require")]),e._v("）"),n("code",[e._v("pkg")]),e._v(" 的每个引用都将包含相同的状态；并且从任一模块系统修改该状态将适用二者皆是。")])])]),e._v(" "),n("p",[e._v("任何附加到包单例的插件都需要分别附加到 CommonJS 和 ES 模块单例。")]),e._v(" "),n("p",[e._v("此方法适用于以下任何用例：")]),e._v(" "),n("ul",[n("li",[e._v("该包目前是用 ES 模块语法编写的，包作者希望在支持此类语法的任何地方使用该版本。")]),e._v(" "),n("li",[e._v("包是无状态的，或者它的状态可以很容易地被隔离。")]),e._v(" "),n("li",[e._v("该包不太可能有其他依赖它的公共包，或者如果有，则该包是无状态的，或者具有不需要在依赖项之间或与整个应用程序共享的状态。")])]),e._v(" "),n("p",[e._v("即使处于隔离状态，在 CommonJS 和 ES 模块版本之间仍然存在可能执行额外代码的成本。")]),e._v(" "),n("p",[e._v("与之前的方法一样，这种方法的变体不需要消费者有条件的导出，可以添加一个导出，例如 "),n("code",[e._v('"./module"')]),e._v("，指向包的全 ES 模块语法版本：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// ./node_modules/pkg/package.json\n{\n  "type": "module",\n  "main": "./index.cjs",\n  "exports": {\n    ".": "./index.cjs",\n    "./module": "./index.mjs"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h3",{attrs:{id:"node-js-package-json-字段定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-js-package-json-字段定义"}},[e._v("#")]),e._v(" Node.js package.json 字段定义"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#nodejs-packagejson-field-definitions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/node_js_package_json_field_definitions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("本节描述了 Node.js 运行时使用的字段。 其他工具（例如 "),n("a",{attrs:{href:"https://docs.npmjs.com/creating-a-package-json-file",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm"),n("OutboundLink")],1),e._v("）使用 Node.js 忽略且未在此处记录的其他字段。")]),e._v(" "),n("p",[n("code",[e._v("package.json")]),e._v(" 文件中的以下字段在 Node.js 中使用：")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_name",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"name"')]),n("OutboundLink")],1),e._v(" - 当包中使用命名导入时相关。 也被包管理器用作包的名称。")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_type",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"type"')]),n("OutboundLink")],1),e._v(" - 决定是否将 "),n("code",[e._v(".js")]),e._v(" 文件加载为 CommonJS 或 ES 模块的包类型。")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" - 包导出和条件导出。 当存在时，限制可以从包中加载哪些子模块。")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" - 加载包时的默认模块，如果没有指定导出，并且在引入导出之前的 Node.js 版本中。")]),e._v(" "),n("li",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_imports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"imports"')]),n("OutboundLink")],1),e._v(" - 包导入，供包本身内的模块使用。")])]),e._v(" "),n("h4",{attrs:{id:"name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[e._v("#")]),e._v(" "),n("code",[e._v('"name"')]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#name",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/name.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("类型: "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1)])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "name": "package-name"\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[n("code",[e._v('"name"')]),e._v(" 字段定义了包的名称。 发布到 "),n("em",[e._v("npm")]),e._v(" 仓库需要满足"),n("a",{attrs:{href:"https://docs.npmjs.com/files/package.json#name",target:"_blank",rel:"noopener noreferrer"}},[e._v("特定要求"),n("OutboundLink")],1),e._v("的名称。")]),e._v(" "),n("p",[e._v("除了 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段外，"),n("code",[e._v('"name"')]),e._v(" 字段还可用于"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_self_referencing_a_package_using_its_name",target:"_blank",rel:"noopener noreferrer"}},[e._v("自引用"),n("OutboundLink")],1),e._v("使用其名称的包。")]),e._v(" "),n("h4",{attrs:{id:"type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" "),n("code",[e._v('"type"')]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#type",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/type.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("类型: "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[n("code",[e._v('"type"')]),e._v(" 字段定义了 Node.js 用于所有 "),n("code",[e._v(".js")]),e._v(" 文件的模块格式，这些 "),n("code",[e._v(".js")]),e._v(" 文件将该 "),n("code",[e._v("package.json")]),e._v(" 文件作为其最近的父文件。")]),e._v(" "),n("p",[e._v("当最近的父 "),n("code",[e._v("package.json")]),e._v(" 文件包含值为 "),n("code",[e._v('"module"')]),e._v(" 的顶级字段 "),n("code",[e._v('"type"')]),e._v(" 时，以 "),n("code",[e._v(".js")]),e._v(" 结尾的文件将作为 ES 模块加载。")]),e._v(" "),n("p",[e._v("最近的父 "),n("code",[e._v("package.json")]),e._v(" 被定义为在当前文件夹中搜索时找到的第一个 "),n("code",[e._v("package.json")]),e._v("，该文件夹的父文件夹，依此类推，直到到达 node_modules 文件夹或卷根。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// package.json\n{\n  "type": "module"\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("# 在与前面的 package.json 相同的文件夹中\nnode my-app.js # 作为 ES 模块运行\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("如果最近的父 "),n("code",[e._v("package.json")]),e._v(" 缺少 "),n("code",[e._v('"type"')]),e._v(" 字段，或包含 "),n("code",[e._v('"type": "commonjs"')]),e._v("，则 "),n("code",[e._v(".js")]),e._v(" 文件将被视为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/modules.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),n("OutboundLink")],1),e._v("。 如果到达卷根目录但未找到 "),n("code",[e._v("package.json")]),e._v("，则将 "),n("code",[e._v(".js")]),e._v(" 文件视为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/modules.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CommonJS"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("如果最近的父 "),n("code",[e._v("package.json")]),e._v(" 包含 "),n("code",[e._v('"type": "module"')]),e._v("，则 "),n("code",[e._v(".js")]),e._v(" 文件的 "),n("code",[e._v("import")]),e._v(" 语句被视为 ES 模块。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// my-app.js, 同上示例的一部分\nimport './startup.js'; // 由于 package.json 加载为 ES 模块\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("无论 "),n("code",[e._v('"type"')]),e._v(" 字段的值如何，"),n("code",[e._v(".mjs")]),e._v(" 文件始终被视为 ES 模块，而 "),n("code",[e._v(".cjs")]),e._v(" 文件始终被视为 CommonJS。")]),e._v(" "),n("h4",{attrs:{id:"exports"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exports"}},[e._v("#")]),e._v(" "),n("code",[e._v('"exports"')]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/exports.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("类型: "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1),e._v(" | "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1),e._v(" | "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[e._v("<string[]>"),n("OutboundLink")],1)])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "exports": "./index.js"\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[n("code",[e._v('"exports"')]),e._v(" 字段允许定义包的"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_package_entry_points",target:"_blank",rel:"noopener noreferrer"}},[e._v("入口点"),n("OutboundLink")],1),e._v("，当通过 "),n("code",[e._v("node_modules")]),e._v(" 查找或"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_self_referencing_a_package_using_its_name",target:"_blank",rel:"noopener noreferrer"}},[e._v("自引用"),n("OutboundLink")],1),e._v("加载到其自身的名称的名称导入时。 Node.js 12+ 支持它作为 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_main",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"main"')]),n("OutboundLink")],1),e._v(" 的替代方案，它可以支持定义"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_subpath_exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("子路径导出"),n("OutboundLink")],1),e._v("和"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_conditional_exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("条件导出"),n("OutboundLink")],1),e._v("，同时封装内部未导出的模块。")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_conditional_exports",target:"_blank",rel:"noopener noreferrer"}},[e._v("条件导出"),n("OutboundLink")],1),e._v("也可以在 "),n("code",[e._v('"exports"')]),e._v(" 中用于为每个环境定义不同的包入口点，包括包是通过 "),n("code",[e._v("require")]),e._v(" 还是通过 "),n("code",[e._v("import")]),e._v(" 引用。")]),e._v(" "),n("p",[n("code",[e._v('"exports"')]),e._v(" 中定义的所有路径必须是以 "),n("code",[e._v("./")]),e._v(" 开头的相对文件 URL。")]),e._v(" "),n("h4",{attrs:{id:"main"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#main"}},[e._v("#")]),e._v(" "),n("code",[e._v('"main"')]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#main",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/main.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.4.0")]),e._v(" "),n("ul",[n("li",[e._v("类型: "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1)])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('{\n  "main": "./main.js"\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("require('./path/to/directory'); // 这解析为 ./path/to/directory/main.js。\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("当包具有 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_exports",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v('"exports"')]),n("OutboundLink")],1),e._v(" 字段时，则在按名称导入包时，这将优先于 "),n("code",[e._v('"main"')]),e._v(" 字段。")]),e._v(" "),n("h4",{attrs:{id:"imports"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#imports"}},[e._v("#")]),e._v(" "),n("code",[e._v('"imports"')]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#imports",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages/imports.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v12.19.0")]),e._v(" "),n("ul",[n("li",[e._v("类型: "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// package.json\n{\n  "imports": {\n    "#dep": {\n      "node": "dep-node-native",\n      "default": "./dep-polyfill.js"\n    }\n  },\n  "dependencies": {\n    "dep-node-native": "^1.0.0"\n  }\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("导入字段中的条目必须是以 "),n("code",[e._v("#")]),e._v(" 开头的字符串。")]),e._v(" "),n("p",[e._v("导入映射允许映射到外部包。")]),e._v(" "),n("p",[e._v("此字段为当前包定义了"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/packages.html#packages_subpath_imports",target:"_blank",rel:"noopener noreferrer"}},[e._v("子路径导入"),n("OutboundLink")],1),e._v("。")])])}),[],!1,null,null,null);a.default=r.exports}}]);