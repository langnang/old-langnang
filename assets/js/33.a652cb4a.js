(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{502:function(e,s,t){"use strict";t.r(s);var v=t(18),_=Object(v.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"css-提高性能的方法有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-提高性能的方法有哪些"}},[e._v("#")]),e._v(" CSS 提高性能的方法有哪些")]),e._v(" "),t("h2",{attrs:{id:"实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现方式"}},[e._v("#")]),e._v(" 实现方式")]),e._v(" "),t("p",[e._v("实现方式有很多种，主要有如下：")]),e._v(" "),t("ul",[t("li",[e._v("内联首屏关键CSS")]),e._v(" "),t("li",[e._v("异步加载CSS")]),e._v(" "),t("li",[e._v("资源压缩")]),e._v(" "),t("li",[e._v("合理使用选择器")]),e._v(" "),t("li",[e._v("减少使用昂贵的属性")]),e._v(" "),t("li",[e._v("不要使用"),t("a",{attrs:{href:"https://github.com/import",target:"_blank",rel:"noopener noreferrer"}},[e._v("@import"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"内联首屏关键css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内联首屏关键css"}},[e._v("#")]),e._v(" 内联首屏关键CSS")]),e._v(" "),t("p",[e._v("在打开一个页面，页面首要内容出现在屏幕的时间影响着用户的体验，而通过内联"),t("code",[e._v("css")]),e._v("关键代码能够使浏览器在下载完"),t("code",[e._v("html")]),e._v("后就能立刻渲染")]),e._v(" "),t("p",[e._v("而如果外部引用"),t("code",[e._v("css")]),e._v("代码，在解析"),t("code",[e._v("html")]),e._v("结构过程中遇到外部"),t("code",[e._v("css")]),e._v("文件，才会开始下载"),t("code",[e._v("css")]),e._v("代码，再渲染")]),e._v(" "),t("p",[e._v("所以，"),t("code",[e._v("CSS")]),e._v("内联使用使渲染时间提前")]),e._v(" "),t("p",[e._v("注意：但是较大的"),t("code",[e._v("css")]),e._v("代码并不合适内联（初始拥塞窗口、没有缓存），而其余代码则采取外部引用方式")]),e._v(" "),t("h3",{attrs:{id:"异步加载css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步加载css"}},[e._v("#")]),e._v(" 异步加载CSS")]),e._v(" "),t("p",[e._v("在"),t("code",[e._v("CSS")]),e._v("文件请求、下载、解析完成之前，"),t("code",[e._v("CSS")]),e._v("会阻塞渲染，浏览器将不会渲染任何已处理的内容")]),e._v(" "),t("p",[e._v("前面加载内联代码后，后面的外部引用"),t("code",[e._v("css")]),e._v("则没必要阻塞浏览器渲染。这时候就可以采取异步加载的方案，主要有如下：")]),e._v(" "),t("ul",[t("li",[e._v("使用javascript将link标签插到head标签最后")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// 创建link标签\nconst myCSS = document.createElement( "link" );\nmyCSS.rel = "stylesheet";\nmyCSS.href = "mystyles.css";\n// 插入到header的最后位置\ndocument.head.insertBefore( myCSS, document.head.childNodes[ document.head.childNodes.length - 1 ].nextSibling );\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("ul",[t("li",[e._v("设置link标签media属性为noexis，浏览器会认为当前样式表不适用当前类型，会在不阻塞页面渲染的情况下再进行下载。加载完成后，将"),t("code",[e._v("media")]),e._v("的值设为"),t("code",[e._v("screen")]),e._v("或"),t("code",[e._v("all")]),e._v("，从而让浏览器开始解析CSS")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<link rel="stylesheet" href="mystyles.css" media="noexist" onload="this.media=\'all\'">\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("通过rel属性将link元素标记为alternate可选样式表，也能实现浏览器异步加载。同样别忘了加载完成之后，将rel设回stylesheet")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<link rel="alternate stylesheet" href="mystyles.css" onload="this.rel=\'stylesheet\'">\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h3",{attrs:{id:"资源压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#资源压缩"}},[e._v("#")]),e._v(" 资源压缩")]),e._v(" "),t("p",[e._v("利用"),t("code",[e._v("webpack")]),e._v("、"),t("code",[e._v("gulp/grunt")]),e._v("、"),t("code",[e._v("rollup")]),e._v("等模块化工具，将"),t("code",[e._v("css")]),e._v("代码进行压缩，使文件变小，大大降低了浏览器的加载时间")]),e._v(" "),t("h3",{attrs:{id:"合理使用选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合理使用选择器"}},[e._v("#")]),e._v(" 合理使用选择器")]),e._v(" "),t("p",[t("code",[e._v("css")]),e._v("匹配的规则是从右往左开始匹配，例如"),t("code",[e._v("#markdown .content h3")]),e._v("匹配规则如下：")]),e._v(" "),t("ul",[t("li",[e._v("先找到h3标签元素")]),e._v(" "),t("li",[e._v("然后去除祖先不是.content的元素")]),e._v(" "),t("li",[e._v("最后去除祖先不是#markdown的元素")])]),e._v(" "),t("p",[e._v("如果嵌套的层级更多，页面中的元素更多，那么匹配所要花费的时间代价自然更高")]),e._v(" "),t("p",[e._v("所以我们在编写选择器的时候，可以遵循以下规则：")]),e._v(" "),t("ul",[t("li",[e._v("不要嵌套使用过多复杂选择器，最好不要三层以上")]),e._v(" "),t("li",[e._v("使用id选择器就没必要再进行嵌套")]),e._v(" "),t("li",[e._v("通配符和属性选择器效率最低，避免使用")])]),e._v(" "),t("h3",{attrs:{id:"减少使用昂贵的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少使用昂贵的属性"}},[e._v("#")]),e._v(" 减少使用昂贵的属性")]),e._v(" "),t("p",[e._v("在页面发生重绘的时候，昂贵属性如"),t("code",[e._v("box-shadow")]),e._v("/"),t("code",[e._v("border-radius")]),e._v("/"),t("code",[e._v("filter")]),e._v("/透明度/"),t("code",[e._v(":nth-child")]),e._v("等，会降低浏览器的渲染性能")]),e._v(" "),t("h3",{attrs:{id:"不要使用-import"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不要使用-import"}},[e._v("#")]),e._v(" 不要使用"),t("a",{attrs:{href:"https://github.com/import",target:"_blank",rel:"noopener noreferrer"}},[e._v("@import"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("css样式文件有两种引入方式，一种是"),t("code",[e._v("link")]),e._v("元素，另一种是"),t("code",[e._v("@import")])]),e._v(" "),t("p",[t("code",[e._v("@import")]),e._v("会影响浏览器的并行下载，使得页面在加载时增加额外的延迟，增添了额外的往返耗时")]),e._v(" "),t("p",[e._v("而且多个"),t("code",[e._v("@import")]),e._v("可能会导致下载顺序紊乱")]),e._v(" "),t("p",[e._v("比如一个css文件"),t("code",[e._v("index.css")]),e._v("包含了以下内容："),t("code",[e._v('@import url("reset.css")')])]),e._v(" "),t("p",[e._v("那么浏览器就必须先把"),t("code",[e._v("index.css")]),e._v("下载、解析和执行后，才下载、解析和执行第二个文件"),t("code",[e._v("reset.css")])]),e._v(" "),t("h3",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[e._v("#")]),e._v(" 其他")]),e._v(" "),t("ul",[t("li",[e._v("减少重排操作，以及减少不必要的重绘")]),e._v(" "),t("li",[e._v("了解哪些属性可以继承而来，避免对这些属性重复编写")]),e._v(" "),t("li",[e._v("cssSprite，合成所有icon图片，用宽高加上backgroud-position的背景图方式显现出我们要的icon图，减少了http请求")]),e._v(" "),t("li",[e._v("把小的icon图片转成base64编码")]),e._v(" "),t("li",[e._v("CSS3动画或者过渡尽量使用transform和opacity来实现动画，不要使用left和top属性")])]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[t("code",[e._v("css")]),e._v("实现性能的方式可以从选择器嵌套、属性特性、减少"),t("code",[e._v("http")]),e._v("这三面考虑，同时还要注意"),t("code",[e._v("css")]),e._v("代码的加载顺序")]),e._v(" "),t("h2",{attrs:{id:"参考文献"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[e._v("#")]),e._v(" 参考文献")]),e._v(" "),t("ul",[t("li",[e._v("https://www.zhihu.com/question/19886806")]),e._v(" "),t("li",[e._v("https://juejin.cn/post/6844903649605320711#heading-1")]),e._v(" "),t("li",[e._v("https://vue3js.cn/interview/")])])])}),[],!1,null,null,null);s.default=_.exports}}]);