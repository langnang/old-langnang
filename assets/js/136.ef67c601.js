(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{603:function(e,r,t){"use strict";t.r(r);var n=t(18),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"dgram-数据报-node-js-api-文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dgram-数据报-node-js-api-文档"}},[e._v("#")]),e._v(" dgram 数据报 | Node.js API 文档")]),e._v(" "),t("blockquote",[t("h2",{attrs:{id:"excerpt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),t("p",[e._v("中英对照")])]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"dgram-socket-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dgram-socket-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("dgram.Socket")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#class-dgramsocket",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/class_dgram_socket.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.99")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("封装数据报功能。")]),e._v(" "),t("p",[t("code",[e._v("dgram.Socket")]),e._v(" 的新实例是使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#dgram_dgram_createsocket_options_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("dgram.createSocket()")]),t("OutboundLink")],1),e._v(" 创建的。 "),t("code",[e._v("new")]),e._v(" 关键字不能用于创建 "),t("code",[e._v("dgram.Socket")]),e._v(" 实例。")]),e._v(" "),t("h4",{attrs:{id:"close-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#close-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'close'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#event-close",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/event_close.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.99")]),e._v(" "),t("p",[e._v("在使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#dgram_socket_close_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("close()")]),t("OutboundLink")],1),e._v(" 关闭套接字后会触发 "),t("code",[e._v("'close'")]),e._v(" 事件。 一旦触发，则此套接字上将不会触发新的 "),t("code",[e._v("'message'")]),e._v(" 事件。")]),e._v(" "),t("h4",{attrs:{id:"connect-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connect-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'connect'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#event-connect",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/event_connect.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.0.0")]),e._v(" "),t("p",[t("code",[e._v("'connect'")]),e._v(" 事件在套接字关联到远程地址作为成功的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#dgram_socket_connect_port_address_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("connect()")]),t("OutboundLink")],1),e._v(" 调用的结果之后触发。")]),e._v(" "),t("h4",{attrs:{id:"error-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#error-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'error'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#event-error",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/event_error.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.99")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("exception")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("每当发生任何错误时都会触发 "),t("code",[e._v("'error'")]),e._v(" 事件。 事件句柄被传入单一的 "),t("code",[e._v("Error")]),e._v(" 对象。")]),e._v(" "),t("h4",{attrs:{id:"listening-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#listening-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'listening'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#event-listening",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/event_listening.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.99")]),e._v(" "),t("p",[e._v("一旦 "),t("code",[e._v("dgram.Socket")]),e._v(" 可寻址并且可以接收数据，则会触发 "),t("code",[e._v("'listening'")]),e._v(" 事件。 这会在 "),t("code",[e._v("socket.bind()")]),e._v(" 中显式地发生，或者在第一次使用 "),t("code",[e._v("socket.send()")]),e._v(" 发送数据时隐式地发生。 直到 "),t("code",[e._v("dgram.Socket")]),e._v(" 正在监听，底层系统资源不存在，则调用 "),t("code",[e._v("socket.address()")]),e._v(" 和 "),t("code",[e._v("socket.setTTL()")]),e._v(" 等将失败。")]),e._v(" "),t("h4",{attrs:{id:"message-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#message-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'message'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#event-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/event_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.99")]),e._v(" "),t("p",[e._v("当套接字上有新的数据报可用时，则会触发 "),t("code",[e._v("'message'")]),e._v(" 事件。 事件句柄传入了两个参数："),t("code",[e._v("msg")]),e._v(" 和 "),t("code",[e._v("rinfo")]),e._v("。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("msg")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 消息。")]),e._v(" "),t("li",[t("code",[e._v("rinfo")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 远程地址信息。\n"),t("ul",[t("li",[t("code",[e._v("address")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 发送者地址。")]),e._v(" "),t("li",[t("code",[e._v("family")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 地址族（"),t("code",[e._v("'IPv4'")]),e._v(" 或 "),t("code",[e._v("'IPv6'")]),e._v("）。")]),e._v(" "),t("li",[t("code",[e._v("port")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 发送者端口。")]),e._v(" "),t("li",[t("code",[e._v("size")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 消息大小。")])])])]),e._v(" "),t("p",[e._v("如果传入数据包的源地址是 IPv6 链路本地地址，则将接口名称添加到 "),t("code",[e._v("address")]),e._v("。 例如，在 "),t("code",[e._v("en0")]),e._v(" 接口上接收的数据包可能将地址字段设置为 "),t("code",[e._v("'fe80::2618:1234:ab11:3b9c%en0'")]),e._v("，其中 "),t("code",[e._v("'%en0'")]),e._v(" 是作为区域 ID 后缀的接口名称。")]),e._v(" "),t("h4",{attrs:{id:"socket-addmembership-multicastaddress-multicastinterface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-addmembership-multicastaddress-multicastinterface"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.addMembership(multicastAddress[, multicastInterface])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketaddmembershipmulticastaddress-multicastinterface",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_addmembership_multicastaddress_multicastinterface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.6.9")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("multicastAddress")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("multicastInterface")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("IP_ADD_MEMBERSHIP")]),e._v(" 套接字选项告诉内核在给定的 "),t("code",[e._v("multicastAddress")]),e._v(" 和 "),t("code",[e._v("multicastInterface")]),e._v(" 上加入多播组。 如果未指定 "),t("code",[e._v("multicastInterface")]),e._v(" 参数，则操作系统将选择一个接口并为其添加成员资格。 要为每个可用接口添加成员资格，则多次调用 "),t("code",[e._v("addMembership")]),e._v("，每个接口一次。")]),e._v(" "),t("p",[e._v("当在未绑定的套接字上调用时，则此方法将隐式地绑定到随机端口，监听所有接口。")]),e._v(" "),t("p",[e._v("当在多个 "),t("code",[e._v("cluster")]),e._v(" 工作进程共享 UDP 套接字时，则必须只调用一次 "),t("code",[e._v("socket.addMembership()")]),e._v(" 函数，否则会发生 "),t("code",[e._v("EADDRINUSE")]),e._v(" 错误：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const cluster = require('cluster');\nconst dgram = require('dgram');\nif (cluster.isMaster) {\n  cluster.fork(); // 工作正常。\n  cluster.fork(); // EADDRINUSE 失败。\n} else {\n  const s = dgram.createSocket('udp4');\n  s.bind(1234, () => {\n    s.addMembership('224.0.0.114');\n  });\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h4",{attrs:{id:"socket-addsourcespecificmembership-sourceaddress-groupaddress-multicastinterface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-addsourcespecificmembership-sourceaddress-groupaddress-multicastinterface"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.addSourceSpecificMembership(sourceAddress, groupAddress[, multicastInterface])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketaddsourcespecificmembershipsourceaddress-groupaddress-multicastinterface",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_addsourcespecificmembership_sourceaddress_groupaddress_multicastinterface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sourceAddress")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("groupAddress")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("multicastInterface")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("告诉内核在给定的 "),t("code",[e._v("sourceAddress")]),e._v(" 和 "),t("code",[e._v("groupAddress")]),e._v(" 上加入特定于源的多播频道，使用 "),t("code",[e._v("multicastInterface")]),e._v(" 和 "),t("code",[e._v("IP_ADD_SOURCE_MEMBERSHIP")]),e._v(" 套接字选项。 如果未指定 "),t("code",[e._v("multicastInterface")]),e._v(" 参数，则操作系统将选择一个接口并为其添加成员资格。 要为每个可用接口添加成员资格，则多次调用 "),t("code",[e._v("socket.addSourceSpecificMembership()")]),e._v("，每个接口一次。")]),e._v(" "),t("p",[e._v("当在未绑定的套接字上调用时，则此方法将隐式地绑定到随机端口，监听所有接口。")]),e._v(" "),t("h4",{attrs:{id:"socket-address"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-address"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.address()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketaddress",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_address.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.99")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回包含套接字地址信息的对象。 对于 UDP 套接字，此对象将包含 "),t("code",[e._v("address")]),e._v("、"),t("code",[e._v("family")]),e._v(" 和 "),t("code",[e._v("port")]),e._v(" 属性。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("code",[e._v("EBADF")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-bind-port-address-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-bind-port-address-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.bind([port][, address][, callback])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketbindport-address-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_bind_port_address_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("port")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("address")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 没有参数。 当绑定完成时调用。")])]),e._v(" "),t("p",[e._v("对于 UDP 套接字，使 "),t("code",[e._v("dgram.Socket")]),e._v(" 在命名的 "),t("code",[e._v("port")]),e._v(" 和可选的 "),t("code",[e._v("address")]),e._v(" 上监听数据报消息。 如果未指定 "),t("code",[e._v("port")]),e._v(" 或 "),t("code",[e._v("0")]),e._v("，则操作系统将尝试绑定到随机端口。 如果未指定 "),t("code",[e._v("address")]),e._v("，则操作系统将尝试监听所有地址。 一旦绑定完成，则会触发 "),t("code",[e._v("'listening'")]),e._v(" 事件并调用可选的 "),t("code",[e._v("callback")]),e._v(" 函数。")]),e._v(" "),t("p",[e._v("同时指定 "),t("code",[e._v("'listening'")]),e._v(" 事件监听器并将 "),t("code",[e._v("callback")]),e._v(" 传给 "),t("code",[e._v("socket.bind()")]),e._v(" 方法无害但不是很有用。")]),e._v(" "),t("p",[e._v("绑定的数据报套接字使 Node.js 进程保持运行以接收数据报消息。")]),e._v(" "),t("p",[e._v("如果绑定失败，则生成 "),t("code",[e._v("'error'")]),e._v(" 事件。 在极少数情况下（例如，尝试与关闭的套接字绑定），可能会抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Error")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("UDP 服务器监听端口 41234 的示例：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const dgram = require('dgram');\nconst server = dgram.createSocket('udp4');\n\nserver.on('error', (err) => {\n  console.log(`server error:\\n${err.stack}`);\n  server.close();\n});\n\nserver.on('message', (msg, rinfo) => {\n  console.log(`server got: ${msg} from ${rinfo.address}:${rinfo.port}`);\n});\n\nserver.on('listening', () => {\n  const address = server.address();\n  console.log(`server listening ${address.address}:${address.port}`);\n});\n\nserver.bind(41234);\n// 打印: server listening 0.0.0.0:41234\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br")])]),t("h4",{attrs:{id:"socket-bind-options-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-bind-options-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.bind(options[, callback])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketbindoptions-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_bind_options_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 必需的。 支持以下属性：\n"),t("ul",[t("li",[t("code",[e._v("port")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("address")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("exclusive")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("fd")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("对于 UDP 套接字，使 "),t("code",[e._v("dgram.Socket")]),e._v(" 监听命名 "),t("code",[e._v("port")]),e._v(" 和可选 "),t("code",[e._v("address")]),e._v(" 上的数据报消息，这些消息作为作为第一个参数传入的 "),t("code",[e._v("options")]),e._v(" 对象的属性传入。 如果未指定 "),t("code",[e._v("port")]),e._v(" 或 "),t("code",[e._v("0")]),e._v("，则操作系统将尝试绑定到随机端口。 如果未指定 "),t("code",[e._v("address")]),e._v("，则操作系统将尝试监听所有地址。 一旦绑定完成，则会触发 "),t("code",[e._v("'listening'")]),e._v(" 事件并调用可选的 "),t("code",[e._v("callback")]),e._v(" 函数。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 对象可能包含 "),t("code",[e._v("fd")]),e._v(" 属性。 当设置了大于 "),t("code",[e._v("0")]),e._v(" 的 "),t("code",[e._v("fd")]),e._v(" 时，则将使用给定的文件描述符环绕现有的套接字。 在这种情况下，"),t("code",[e._v("port")]),e._v(" 和 "),t("code",[e._v("address")]),e._v(" 的属性将被忽略。")]),e._v(" "),t("p",[e._v("同时指定 "),t("code",[e._v("'listening'")]),e._v(" 事件监听器并将 "),t("code",[e._v("callback")]),e._v(" 传给 "),t("code",[e._v("socket.bind()")]),e._v(" 方法无害但不是很有用。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 对象可能包含额外的 "),t("code",[e._v("exclusive")]),e._v(" 属性，当将 "),t("code",[e._v("dgram.Socket")]),e._v(" 对象与 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cluster")]),t("OutboundLink")],1),e._v(" 模块一起使用时会使用该属性。 当 "),t("code",[e._v("exclusive")]),e._v(" 设置为 "),t("code",[e._v("false")]),e._v("（默认）时，集群工作进程将使用相同的底层套接字句柄，允许共享连接处理职责。 但是，当 "),t("code",[e._v("exclusive")]),e._v(" 为 "),t("code",[e._v("true")]),e._v(" 时，则句柄未共享，尝试共享端口会导致错误。")]),e._v(" "),t("p",[e._v("绑定的数据报套接字使 Node.js 进程保持运行以接收数据报消息。")]),e._v(" "),t("p",[e._v("如果绑定失败，则生成 "),t("code",[e._v("'error'")]),e._v(" 事件。 在极少数情况下（例如，尝试与关闭的套接字绑定），可能会抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Error")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("监听独占端口的套接字示例如下所示。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("socket.bind({\n  address: 'localhost',\n  port: 8000,\n  exclusive: true\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h4",{attrs:{id:"socket-close-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-close-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.close([callback])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketclosecallback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_close_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.99")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 当套接字关闭时调用。")])]),e._v(" "),t("p",[e._v("关闭底层套接字并停止监听其上的数据。 如果提供回调，则将其添加为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#dgram_event_close",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'close'")]),t("OutboundLink")],1),e._v(" 事件的监听器。")]),e._v(" "),t("h4",{attrs:{id:"socket-connect-port-address-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-connect-port-address-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.connect(port[, address][, callback])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketconnectport-address-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_connect_port_address_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("port")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("address")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 当连接完成或出错时调用。")])]),e._v(" "),t("p",[e._v("将 "),t("code",[e._v("dgram.Socket")]),e._v(" 关联到远程地址和端口。 此句柄发送的每条消息都会自动发送到该目标。 此外，套接字将只接收来自该远程对等方的消息。 尝试在已连接的套接字上调用 "),t("code",[e._v("connect()")]),e._v(" 将导致 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_dgram_is_connected",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_DGRAM_IS_CONNECTED")]),t("OutboundLink")],1),e._v(" 异常。 如果未提供 "),t("code",[e._v("address")]),e._v("，则默认使用 "),t("code",[e._v("'127.0.0.1'")]),e._v("（适用于 "),t("code",[e._v("udp4")]),e._v(" 套接字）或 "),t("code",[e._v("'::1'")]),e._v("（适用于 "),t("code",[e._v("udp6")]),e._v(" 套接字）。 一旦连接完成，就会触发 "),t("code",[e._v("'connect'")]),e._v(" 事件并调用可选的 "),t("code",[e._v("callback")]),e._v(" 函数。 如果失败，则调用 "),t("code",[e._v("callback")]),e._v("，或者触发 "),t("code",[e._v("'error'")]),e._v(" 事件。")]),e._v(" "),t("h4",{attrs:{id:"socket-disconnect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-disconnect"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.disconnect()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketdisconnect",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_disconnect.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.0.0")]),e._v(" "),t("p",[e._v("将连接的 "),t("code",[e._v("dgram.Socket")]),e._v(" 与其远程地址分离的同步函数。 尝试在未绑定或已断开连接的套接字上调用 "),t("code",[e._v("disconnect()")]),e._v(" 将导致 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_dgram_not_connected",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_DGRAM_NOT_CONNECTED")]),t("OutboundLink")],1),e._v(" 异常。")]),e._v(" "),t("h4",{attrs:{id:"socket-dropmembership-multicastaddress-multicastinterface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-dropmembership-multicastaddress-multicastinterface"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.dropMembership(multicastAddress[, multicastInterface])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketdropmembershipmulticastaddress-multicastinterface",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_dropmembership_multicastaddress_multicastinterface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.6.9")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("multicastAddress")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("multicastInterface")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("指示内核使用 "),t("code",[e._v("IP_DROP_MEMBERSHIP")]),e._v(" 套接字选项离开 "),t("code",[e._v("multicastAddress")]),e._v(" 处的多播组。 当套接字关闭或进程终止时，内核会自动调用此方法，因此大多数应用程序永远没有理由调用此方法。")]),e._v(" "),t("p",[e._v("如果未指定 "),t("code",[e._v("multicastInterface")]),e._v("，则操作系统将尝试删除所有有效接口上的成员资格。")]),e._v(" "),t("h4",{attrs:{id:"socket-dropsourcespecificmembership-sourceaddress-groupaddress-multicastinterface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-dropsourcespecificmembership-sourceaddress-groupaddress-multicastinterface"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.dropSourceSpecificMembership(sourceAddress, groupAddress[, multicastInterface])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketdropsourcespecificmembershipsourceaddress-groupaddress-multicastinterface",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_dropsourcespecificmembership_sourceaddress_groupaddress_multicastinterface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sourceAddress")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("groupAddress")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("multicastInterface")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("指示内核使用 "),t("code",[e._v("IP_DROP_SOURCE_MEMBERSHIP")]),e._v(" 套接字选项在给定的 "),t("code",[e._v("sourceAddress")]),e._v(" 和 "),t("code",[e._v("groupAddress")]),e._v(" 处保留特定于源的多播通道。 当套接字关闭或进程终止时，内核会自动调用此方法，因此大多数应用程序永远没有理由调用此方法。")]),e._v(" "),t("p",[e._v("如果未指定 "),t("code",[e._v("multicastInterface")]),e._v("，则操作系统将尝试删除所有有效接口上的成员资格。")]),e._v(" "),t("h4",{attrs:{id:"socket-getrecvbuffersize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-getrecvbuffersize"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.getRecvBufferSize()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketgetrecvbuffersize",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_getrecvbuffersize.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v8.7.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("SO_RCVBUF")]),e._v(" 套接字接收缓冲区大小（以字节为单位）。")])]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_buffer_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_BUFFER_SIZE")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-getsendbuffersize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-getsendbuffersize"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.getSendBufferSize()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketgetsendbuffersize",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_getsendbuffersize.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v8.7.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("SO_SNDBUF")]),e._v(" 套接字发送缓冲区大小（以字节为单位）。")])]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_buffer_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_BUFFER_SIZE")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-ref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-ref"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.ref()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketref",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_ref.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.9.1")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/dgram.html#class-dgramsocket",target:"_blank",rel:"noopener noreferrer"}},[e._v("<dgram.Socket>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("默认情况下，只要套接字处于打开状态，则绑定套接字将导致它阻止 Node.js 进程退出。 "),t("code",[e._v("socket.unref()")]),e._v(" 方法可用于从保持 Node.js 进程处于活动状态的引用计数中排除套接字。 "),t("code",[e._v("socket.ref()")]),e._v(" 方法将套接字添加回引用计数并恢复默认行为。")]),e._v(" "),t("p",[e._v("多次调用 "),t("code",[e._v("socket.ref()")]),e._v(" 不会有额外的效果。")]),e._v(" "),t("p",[t("code",[e._v("socket.ref()")]),e._v(" 方法返回对套接字的引用，因此可以链接调用。")]),e._v(" "),t("h4",{attrs:{id:"socket-remoteaddress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-remoteaddress"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.remoteAddress()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketremoteaddress",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_remoteaddress.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.0.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回包含远程端点的 "),t("code",[e._v("address")]),e._v("、"),t("code",[e._v("family")]),e._v(" 和 "),t("code",[e._v("port")]),e._v(" 的对象。 如果套接字未连接，则此方法将抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_dgram_not_connected",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_DGRAM_NOT_CONNECTED")]),t("OutboundLink")],1),e._v(" 异常。")]),e._v(" "),t("h4",{attrs:{id:"socket-send-msg-offset-length-port-address-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-send-msg-offset-length-port-address-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.send(msg[, offset, length][, port][, address][, callback])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsendmsg-offset-length-port-address-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_send_msg_offset_length_port_address_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("msg")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/ZJSz23",target:"_blank",rel:"noopener noreferrer"}},[t("Array",[t("OutboundLink")],1)],1),e._v(" 要发送的消息。")]),e._v(" "),t("li",[t("code",[e._v("offset")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 消息开始的缓冲区中的偏移量。")]),e._v(" "),t("li",[t("code",[e._v("length")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 消息中的字节数。")]),e._v(" "),t("li",[t("code",[e._v("port")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 目标端口。")]),e._v(" "),t("li",[t("code",[e._v("address")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 目标主机名或 IP 地址。")]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" 当消息发送后调用。")])]),e._v(" "),t("p",[e._v("在套接字上广播数据报。 对于无连接套接字，则必须指定目标 "),t("code",[e._v("port")]),e._v(" 和 "),t("code",[e._v("address")]),e._v("。 另一方面，已连接的套接字将使用其关联的远程端点，因此不得设置 "),t("code",[e._v("port")]),e._v(" 和 "),t("code",[e._v("address")]),e._v(" 参数。")]),e._v(" "),t("p",[t("code",[e._v("msg")]),e._v(" 参数包含要发送的消息。 根据其类型，可以应用不同的行为。 如果 "),t("code",[e._v("msg")]),e._v(" 是 "),t("code",[e._v("Buffer")]),e._v("、任何 "),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("，则 "),t("code",[e._v("offset")]),e._v(" 和 "),t("code",[e._v("length")]),e._v(" 分别指定消息开始的 "),t("code",[e._v("Buffer")]),e._v(" 中的偏移量和消息中的字节数。 如果 "),t("code",[e._v("msg")]),e._v(" 是 "),t("code",[e._v("String")]),e._v("，则会自动转换为 "),t("code",[e._v("'utf8'")]),e._v(" 编码的 "),t("code",[e._v("Buffer")]),e._v("。 对于包含多字节字符的消息，"),t("code",[e._v("offset")]),e._v(" 和 "),t("code",[e._v("length")]),e._v(" 将根据"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_static_method_buffer_bytelength_string_encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("字节长度"),t("OutboundLink")],1),e._v("而不是字符位置进行计算。 如果 "),t("code",[e._v("msg")]),e._v(" 是数组，则不能指定 "),t("code",[e._v("offset")]),e._v(" 和 "),t("code",[e._v("length")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("address")]),e._v(" 参数是字符串。 如果 "),t("code",[e._v("address")]),e._v(" 的值是主机名，则会使用 DNS 解析主机地址。 如果未提供 "),t("code",[e._v("address")]),e._v(" 或其他错误，则默认情况下将使用 "),t("code",[e._v("'127.0.0.1'")]),e._v("（用于 "),t("code",[e._v("udp4")]),e._v(" 套接字）或 "),t("code",[e._v("'::1'")]),e._v("（用于 "),t("code",[e._v("udp6")]),e._v(" 套接字）。")]),e._v(" "),t("p",[e._v("如果套接字之前没有绑定过对 "),t("code",[e._v("bind")]),e._v(" 的调用，则该套接字会被分配随机端口号并绑定到“所有接口”地址（"),t("code",[e._v("'0.0.0.0'")]),e._v(" 用于 "),t("code",[e._v("udp4")]),e._v(" 套接字，"),t("code",[e._v("'::0'")]),e._v(" 用于 "),t("code",[e._v("udp6")]),e._v(" 套接字。）")]),e._v(" "),t("p",[e._v("可以指定可选的 "),t("code",[e._v("callback")]),e._v(" 函数作为报告 DNS 错误或确定何时可以安全地重用 "),t("code",[e._v("buf")]),e._v(" 对象的一种方式。 DNS 查找延迟了 Node.js 事件循环的至少一滴答的发送时间。")]),e._v(" "),t("p",[e._v("确定数据报已发送的唯一方法是使用 "),t("code",[e._v("callback")]),e._v("。 如果发生错误并给出 "),t("code",[e._v("callback")]),e._v("，则错误将作为第一个参数传给 "),t("code",[e._v("callback")]),e._v("。 如果未给出 "),t("code",[e._v("callback")]),e._v("，则错误将作为 "),t("code",[e._v("socket")]),e._v(" 对象上的 "),t("code",[e._v("'error'")]),e._v(" 事件触发。")]),e._v(" "),t("p",[e._v("偏移量和长度是可选的，但如果使用任何一个，则必须都设置。 仅当第一个参数是 "),t("code",[e._v("Buffer")]),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v(" 时才支持它们。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_bad_port",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_BAD_PORT")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("发送 UDP 包到 "),t("code",[e._v("localhost")]),e._v(" 端口的示例；")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const dgram = require('dgram');\nconst message = Buffer.from('Some bytes');\nconst client = dgram.createSocket('udp4');\nclient.send(message, 41234, 'localhost', (err) => {\n  client.close();\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("发送由多个缓冲区组成的 UDP 数据包到 "),t("code",[e._v("127.0.0.1")]),e._v(" 上的端口的示例；")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const dgram = require('dgram');\nconst buf1 = Buffer.from('Some ');\nconst buf2 = Buffer.from('bytes');\nconst client = dgram.createSocket('udp4');\nclient.send([buf1, buf2], 41234, (err) => {\n  client.close();\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("发送多个缓冲区可能更快或更慢，这取决于应用程序和操作系统。 运行基准测试以根据具体情况确定最佳策略。 但是，一般来说，发送多个缓冲区会更快。")]),e._v(" "),t("p",[e._v("使用连接到 "),t("code",[e._v("localhost")]),e._v(" 端口的套接字发送 UDP 数据包的示例：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const dgram = require('dgram');\nconst message = Buffer.from('Some bytes');\nconst client = dgram.createSocket('udp4');\nclient.connect(41234, 'localhost', (err) => {\n  client.send(message, (err) => {\n    client.close();\n  });\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h5",{attrs:{id:"关于-udp-数据报大小的说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于-udp-数据报大小的说明"}},[e._v("#")]),e._v(" 关于 UDP 数据报大小的说明"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#note-about-udp-datagram-size",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/note_about_udp_datagram_size.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("IPv4/v6 数据报的最大大小取决于 "),t("code",[e._v("MTU")]),e._v("（最大传输单元）和 "),t("code",[e._v("Payload Length")]),e._v(" 字段大小。")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("Payload Length")]),e._v(" 字段是 16 位宽，这意味着正常的有效载荷不能超过 64K 八位字节，包括互联网标头和数据（65,507 字节 = 65,535 − 8 字节 UDP 标头 − 20 字节 IP 标头）；这对于环回接口通常是正确的，但是如此长的数据报消息对于大多数主机和网络来说是不切实际的。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("MTU")]),e._v(" 是给定链路层技术可以支持数据报消息的最大尺寸。 对于任何链接，IPv4 要求至少 "),t("code",[e._v("MTU")]),e._v(" 为 68 个八位字节，而建议 IPv4 的 "),t("code",[e._v("MTU")]),e._v(" 为 576（通常建议为拨号类型应用程序的 "),t("code",[e._v("MTU")]),e._v("），无论它们是完整的还是分段的。")]),e._v(" "),t("p",[e._v("对于 IPv6，最小 "),t("code",[e._v("MTU")]),e._v(" 是 1280 个八位字节。 但是，强制的最小片段重组缓冲区大小是 1500 个八位字节。 68 个八位字节的值非常小，因为大多数当前的链路层技术，如以太网，最小 "),t("code",[e._v("MTU")]),e._v(" 为 1500。")])])]),e._v(" "),t("p",[e._v("不可能事先知道数据包可能通过的每个链路的 MTU。 发送大于接收方 "),t("code",[e._v("MTU")]),e._v(" 的数据报将不起作用，因为数据包将被悄悄丢弃，而不会通知源数据未到达其预期接收方。")]),e._v(" "),t("h4",{attrs:{id:"socket-setbroadcast-flag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-setbroadcast-flag"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.setBroadcast(flag)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsetbroadcastflag",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_setbroadcast_flag.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.6.9")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("flag")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("设置或清除 "),t("code",[e._v("SO_BROADCAST")]),e._v(" 套接字选项。 当设置为 "),t("code",[e._v("true")]),e._v(" 时，UDP 数据包可能会被发送到本地接口的广播地址。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("code",[e._v("EBADF")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-setmulticastinterface-multicastinterface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-setmulticastinterface-multicastinterface"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.setMulticastInterface(multicastInterface)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsetmulticastinterfacemulticastinterface",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_setmulticastinterface_multicastinterface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v8.6.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("multicastInterface")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[t("em",[e._v("本节中对范围的所有引用均指 "),t("a",{attrs:{href:"http://url.nodejs.cn/8e3ofa",target:"_blank",rel:"noopener noreferrer"}},[e._v("IPv6 区域索引"),t("OutboundLink")],1),e._v("，由 "),t("a",{attrs:{href:"http://url.nodejs.cn/NoPgna",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4007"),t("OutboundLink")],1),e._v(" 定义。 以字符串形式，具有作用域索引的 IP 写成 "),t("code",[e._v("'IP%scope'")]),e._v("，其中作用域是接口名称或接口编号。")])]),e._v(" "),t("p",[e._v("将套接字的默认传出多播接口设置为选定接口或返回系统接口选择。 "),t("code",[e._v("multicastInterface")]),e._v(" 必须是来自套接字家族的 IP 的有效字符串表示形式。")]),e._v(" "),t("p",[e._v("对于 IPv4 套接字，这应该是为所需物理接口配置的 IP。 在套接字上发送到多播的所有数据包都将在最近成功使用此调用确定的接口上发送。")]),e._v(" "),t("p",[e._v("对于 IPv6 套接字，"),t("code",[e._v("multicastInterface")]),e._v(" 应包括范围来指示接口，如以下示例中所示。 在 IPv6 中，单个 "),t("code",[e._v("send")]),e._v(" 调用也可以在地址中使用显式范围，因此只有发送到多播地址而未指定显式范围的数据包才会受到最近成功使用此调用的影响。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("code",[e._v("EBADF")]),e._v("。")]),e._v(" "),t("h5",{attrs:{id:"ipv6-发送多播数据包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipv6-发送多播数据包"}},[e._v("#")]),e._v(" IPv6 发送多播数据包"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#example-ipv6-outgoing-multicast-interface",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/example_ipv6_outgoing_multicast_interface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("在大多数系统上，范围格式使用接口名称：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const socket = dgram.createSocket('udp6');\n\nsocket.bind(1234, () => {\n  socket.setMulticastInterface('::%eth1');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("在 Windows 上，范围格式使用接口编号：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const socket = dgram.createSocket('udp6');\n\nsocket.bind(1234, () => {\n  socket.setMulticastInterface('::%2');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h5",{attrs:{id:"ipv4-发送多播数据包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipv4-发送多播数据包"}},[e._v("#")]),e._v(" IPv4 发送多播数据包"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#example-ipv4-outgoing-multicast-interface",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/example_ipv4_outgoing_multicast_interface.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("所有系统都在所需的物理接口上使用主机的 IP：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const socket = dgram.createSocket('udp4');\n\nsocket.bind(1234, () => {\n  socket.setMulticastInterface('10.0.0.2');\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h5",{attrs:{id:"调用的结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调用的结果"}},[e._v("#")]),e._v(" 调用的结果"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#call-results",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/call_results.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("对未准备好发送或不再打开的套接字的调用可能会抛出 "),t("em",[e._v("Not running")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Error")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("如果无法将 "),t("code",[e._v("multicastInterface")]),e._v(" 解析为 IP，则抛出 "),t("em",[e._v("EINVAL")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_systemerror",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("System Error")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("在 IPv4 上，如果 "),t("code",[e._v("multicastInterface")]),e._v(" 是有效地址但与任何接口都不匹配，或者如果地址与系列不匹配，则抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_systemerror",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("System Error")]),t("OutboundLink")],1),e._v("，例如 "),t("code",[e._v("EADDRNOTAVAIL")]),e._v(" 或 "),t("code",[e._v("EPROTONOSUP")]),e._v("。")]),e._v(" "),t("p",[e._v("在 IPv6 上，大多数指定或省略范围的错误将导致套接字继续使用（或返回）系统的默认接口选择。")]),e._v(" "),t("p",[e._v("套接字地址族的任何地址（IPv4 "),t("code",[e._v("'0.0.0.0'")]),e._v(" 或 IPv6 "),t("code",[e._v("'::'")]),e._v("）可用于将套接字默认传出接口的控制权返回给系统，以便将来使用多播数据包。")]),e._v(" "),t("h4",{attrs:{id:"socket-setmulticastloopback-flag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-setmulticastloopback-flag"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.setMulticastLoopback(flag)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsetmulticastloopbackflag",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_setmulticastloopback_flag.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.3.8")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("flag")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("设置或清除 "),t("code",[e._v("IP_MULTICAST_LOOP")]),e._v(" 套接字选项。 当设置为 "),t("code",[e._v("true")]),e._v(" 时，本地接口也会收到多播数据包。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("code",[e._v("EBADF")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-setmulticastttl-ttl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-setmulticastttl-ttl"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.setMulticastTTL(ttl)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsetmulticastttlttl",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_setmulticastttl_ttl.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.3.8")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ttl")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("设置 "),t("code",[e._v("IP_MULTICAST_TTL")]),e._v(' 套接字选项。 虽然 TTL 通常代表 "生存时间"，但在此上下文中，它指定了允许数据包通过的 IP 跃点数，特别是对于多播流量。 转发数据包的每个路由器或网关都会递减 TTL。 如果 TTL 被路由器递减为 0，则不会转发。')]),e._v(" "),t("p",[t("code",[e._v("ttl")]),e._v(" 参数可以是 0 到 255 之间。 大多数系统上的默认值为 "),t("code",[e._v("1")]),e._v("。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("code",[e._v("EBADF")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-setrecvbuffersize-size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-setrecvbuffersize-size"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.setRecvBufferSize(size)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsetrecvbuffersizesize",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_setrecvbuffersize_size.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v8.7.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("size")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("设置 "),t("code",[e._v("SO_RCVBUF")]),e._v(" 套接字选项。 设置最大套接字接收缓冲区（以字节为单位）。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_buffer_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_BUFFER_SIZE")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-setsendbuffersize-size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-setsendbuffersize-size"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.setSendBufferSize(size)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsetsendbuffersizesize",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_setsendbuffersize_size.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v8.7.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("size")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("设置 "),t("code",[e._v("SO_SNDBUF")]),e._v(" 套接字选项。 设置最大套接字发送缓冲区（以字节为单位）。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_socket_buffer_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_SOCKET_BUFFER_SIZE")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-setttl-ttl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-setttl-ttl"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.setTTL(ttl)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketsetttlttl",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_setttl_ttl.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.101")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ttl")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("设置 "),t("code",[e._v("IP_TTL")]),e._v(' 套接字选项。 虽然 TTL 通常代表"生存时间"，但在此上下文中，它指定了允许数据包通过的 IP 跃点数。 转发数据包的每个路由器或网关都会递减 TTL。 如果 TTL 被路由器递减为 0，则不会转发。 更改 TTL 值通常用于网络探测或多播。')]),e._v(" "),t("p",[t("code",[e._v("ttl")]),e._v(" 参数可以是 1 到 255 之间。 大多数系统的默认值为 64。")]),e._v(" "),t("p",[e._v("如果在未绑定的套接字上调用此方法将抛出 "),t("code",[e._v("EBADF")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"socket-unref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-unref"}},[e._v("#")]),e._v(" "),t("code",[e._v("socket.unref()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram.html#socketunref",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/dgram/socket_unref.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.9.1")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/dgram.html#class-dgramsocket",target:"_blank",rel:"noopener noreferrer"}},[e._v("<dgram.Socket>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("默认情况下，只要套接字处于打开状态，则绑定套接字将导致它阻止 Node.js 进程退出。 "),t("code",[e._v("socket.unref()")]),e._v(" 方法可用于将套接字从保持 Node.js 进程处于活动状态的引用计数中排除，即使套接字仍在监听，也允许进程退出。")]),e._v(" "),t("p",[e._v("多次调用 "),t("code",[e._v("socket.unref()")]),e._v(" 没有附加效果。")]),e._v(" "),t("p",[t("code",[e._v("socket.unref()")]),e._v(" 方法返回对套接字的引用，因此可以链接调用。")])])}),[],!1,null,null,null);r.default=a.exports}}]);