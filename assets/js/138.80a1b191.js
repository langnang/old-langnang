(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{605:function(n,e,r){"use strict";r.r(e);var a=r(18),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"domain-域-node-js-api-文档"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-域-node-js-api-文档"}},[n._v("#")]),n._v(" domain 域 | Node.js API 文档")]),n._v(" "),r("blockquote",[r("h2",{attrs:{id:"excerpt"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[n._v("#")]),n._v(" Excerpt")]),n._v(" "),r("p",[n._v("中英对照")])]),n._v(" "),r("hr"),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("strong",[n._v("源代码:")]),n._v(" "),r("a",{attrs:{href:"https://github.com/nodejs/node/blob/v12.22.12/lib/domain.js",target:"_blank",rel:"noopener noreferrer"}},[n._v("lib/domain.js"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("strong",[n._v("此模块正在等待弃用")]),n._v("。 一旦替代 API 完成，则该模块将被完全弃用。 大多数开发者应该"),r("strong",[n._v("没有")]),n._v("理由使用此模块。 绝对必须拥有域提供的功能的用户可能暂时依赖它，但预计将来必须迁移到不同的解决方案。")]),n._v(" "),r("p",[n._v("域提供了一种将多个不同的 IO 操作作为一组来处理的方法。 如果任何注册到域的事件触发器或回调触发 "),r("code",[n._v("'error'")]),n._v(" 事件，或抛出错误，则将通知域对象，而不是丢失 "),r("code",[n._v("process.on('uncaughtException')")]),n._v(" 句柄中的错误上下文，或导致程序立即使用错误码退出。")]),n._v(" "),r("h3",{attrs:{id:"注意-不要无视错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注意-不要无视错误"}},[n._v("#")]),n._v(" 注意：不要无视错误"),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#warning-dont-ignore-errors",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/warning_don_t_ignore_errors.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[n._v("发生错误时，域错误句柄不能替代关闭进程。")]),n._v(" "),r("p",[n._v("由于 "),r("a",{attrs:{href:"http://url.nodejs.cn/qrRqBn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("throw")]),r("OutboundLink")],1),n._v(" 在 JavaScript 中的工作方式，几乎没有任何方法可以安全地“从中断的地方重新开始”，而不会泄漏引用或创建其他类型的未定义脆弱状态。")]),n._v(" "),r("p",[n._v("响应抛出的错误最安全的方法是关闭进程。 但是，在正常的 web 服务器中，可能有很多打开的连接，因为别人触发了错误而突然关闭这些连接是不合理的。")]),n._v(" "),r("p",[n._v("更好的方法是向触发错误的请求发送错误响应，同时让其他人在正常时间完成，并停止在该工作进程中监听新的请求。")]),n._v(" "),r("p",[n._v("通过这种方式，"),r("code",[n._v("domain")]),n._v(" 的使用与集群模块齐头并进，因为当工作进程遇到错误时，主进程可以衍生新的工作进程。 对于扩展到多台机器的 Node.js 程序，终止的代理或服务仓库可以记录故障，并做出相应的反应。")]),n._v(" "),r("p",[n._v("例如，这不是一个好主意：")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("// XXX 警告！坏主意！\n\nconst d = require('domain').create();\nd.on('error', (er) => {\n  // 该错误不会使进程崩溃，但它所做的更糟！\n  // \n  // 这并不比 process.on('uncaughtException') 好！\n  console.log(`error, but oh well ${er.message}`);\n});\nd.run(() => {\n  require('http').createServer((req, res) => {\n    handleRequest(req, res);\n  }).listen(PORT);\n});\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br"),r("span",{staticClass:"line-number"},[n._v("14")]),r("br")])]),r("p",[n._v("通过使用域的上下文，以及将我们的程序分成多个工作进程的弹性，我们可以做出更适当的反应，并以更高的安全性处理错误。")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("// 好多了！\n\nconst cluster = require('cluster');\nconst PORT = +process.env.PORT || 1337;\n\nif (cluster.isMaster) {\n  // 更现实的情况是有 2 个以上的工作进程，\n  // 并且可能不会将主进程和工作进程放在同一个文件中。\n  //\n  // 还可以对日志记录更感兴趣，\n  // 并实现任何需要的自定义逻辑，\n  // 来防止 DoS 攻击和其他不良行为。\n  //\n  // 请参阅集群文档中的选项。\n  //\n  // 重要的是主进程做的很少，\n  // 增加了我们对意外错误的适应能力。\n\n  cluster.fork();\n  cluster.fork();\n\n  cluster.on('disconnect', (worker) => {\n    console.error('disconnect!');\n    cluster.fork();\n  });\n\n} else {\n  // 工作进程\n  //\n  // 这是我们放置缺陷的地方！\n\n  const domain = require('domain');\n\n  // 有关使用工作进程处理请求的更多详细信息，请参阅集群文档。\n  // 它的工作原理、注意事项等。\n\n  const server = require('http').createServer((req, res) => {\n    const d = domain.create();\n    d.on('error', (er) => {\n      console.error(`error ${er.stack}`);\n\n      // 我们处于危险境地！\n      // 根据定义，发生了一些意想不到的事情，\n      // 这可能是我们不想要的。\n      // 现在什么都可能发生！小心点！\n\n      try {\n        // 确保我们在 30 秒内关闭\n        const killtimer = setTimeout(() => {\n          process.exit(1);\n        }, 30000);\n        // 但不要仅仅为此而保持进程开放！\n        killtimer.unref();\n\n        // 停止接受新的请求。\n        server.close();\n\n        // 让主进程知道我们已经死了。\n        // 这将触发集群主进程的‘断开连接’，\n        // 然后它会衍生新的工作进程。\n        cluster.worker.disconnect();\n\n        // 尝试向触发问题的请求发送错误\n        res.statusCode = 500;\n        res.setHeader('content-type', 'text/plain');\n        res.end('Oops, there was a problem!\\n');\n      } catch (er2) {\n        // 哦，好吧，目前我们无能为力。\n        console.error(`Error sending 500! ${er2.stack}`);\n      }\n    });\n\n    // 因为 req 和 res 是在此域存在之前创建的，\n    // 所以我们需要显式地添加它们。\n    // 请参阅下面对隐式与显式绑定的解释。\n    d.add(req);\n    d.add(res);\n\n    // 现在在域中运行处理函数。\n    d.run(() => {\n      handleRequest(req, res);\n    });\n  });\n  server.listen(PORT);\n}\n\n// 这部分并不重要。只是一个示例路由。\n// 把花哨的应用程序逻辑放在这里。\nfunction handleRequest(req, res) {\n  switch (req.url) {\n    case '/error':\n      // 我们做一些异步的事情，然后...\n      setTimeout(() => {\n        // 哎呀！\n        flerb.bark();\n      }, timeout);\n      break;\n    default:\n      res.end('ok');\n  }\n}\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br"),r("span",{staticClass:"line-number"},[n._v("14")]),r("br"),r("span",{staticClass:"line-number"},[n._v("15")]),r("br"),r("span",{staticClass:"line-number"},[n._v("16")]),r("br"),r("span",{staticClass:"line-number"},[n._v("17")]),r("br"),r("span",{staticClass:"line-number"},[n._v("18")]),r("br"),r("span",{staticClass:"line-number"},[n._v("19")]),r("br"),r("span",{staticClass:"line-number"},[n._v("20")]),r("br"),r("span",{staticClass:"line-number"},[n._v("21")]),r("br"),r("span",{staticClass:"line-number"},[n._v("22")]),r("br"),r("span",{staticClass:"line-number"},[n._v("23")]),r("br"),r("span",{staticClass:"line-number"},[n._v("24")]),r("br"),r("span",{staticClass:"line-number"},[n._v("25")]),r("br"),r("span",{staticClass:"line-number"},[n._v("26")]),r("br"),r("span",{staticClass:"line-number"},[n._v("27")]),r("br"),r("span",{staticClass:"line-number"},[n._v("28")]),r("br"),r("span",{staticClass:"line-number"},[n._v("29")]),r("br"),r("span",{staticClass:"line-number"},[n._v("30")]),r("br"),r("span",{staticClass:"line-number"},[n._v("31")]),r("br"),r("span",{staticClass:"line-number"},[n._v("32")]),r("br"),r("span",{staticClass:"line-number"},[n._v("33")]),r("br"),r("span",{staticClass:"line-number"},[n._v("34")]),r("br"),r("span",{staticClass:"line-number"},[n._v("35")]),r("br"),r("span",{staticClass:"line-number"},[n._v("36")]),r("br"),r("span",{staticClass:"line-number"},[n._v("37")]),r("br"),r("span",{staticClass:"line-number"},[n._v("38")]),r("br"),r("span",{staticClass:"line-number"},[n._v("39")]),r("br"),r("span",{staticClass:"line-number"},[n._v("40")]),r("br"),r("span",{staticClass:"line-number"},[n._v("41")]),r("br"),r("span",{staticClass:"line-number"},[n._v("42")]),r("br"),r("span",{staticClass:"line-number"},[n._v("43")]),r("br"),r("span",{staticClass:"line-number"},[n._v("44")]),r("br"),r("span",{staticClass:"line-number"},[n._v("45")]),r("br"),r("span",{staticClass:"line-number"},[n._v("46")]),r("br"),r("span",{staticClass:"line-number"},[n._v("47")]),r("br"),r("span",{staticClass:"line-number"},[n._v("48")]),r("br"),r("span",{staticClass:"line-number"},[n._v("49")]),r("br"),r("span",{staticClass:"line-number"},[n._v("50")]),r("br"),r("span",{staticClass:"line-number"},[n._v("51")]),r("br"),r("span",{staticClass:"line-number"},[n._v("52")]),r("br"),r("span",{staticClass:"line-number"},[n._v("53")]),r("br"),r("span",{staticClass:"line-number"},[n._v("54")]),r("br"),r("span",{staticClass:"line-number"},[n._v("55")]),r("br"),r("span",{staticClass:"line-number"},[n._v("56")]),r("br"),r("span",{staticClass:"line-number"},[n._v("57")]),r("br"),r("span",{staticClass:"line-number"},[n._v("58")]),r("br"),r("span",{staticClass:"line-number"},[n._v("59")]),r("br"),r("span",{staticClass:"line-number"},[n._v("60")]),r("br"),r("span",{staticClass:"line-number"},[n._v("61")]),r("br"),r("span",{staticClass:"line-number"},[n._v("62")]),r("br"),r("span",{staticClass:"line-number"},[n._v("63")]),r("br"),r("span",{staticClass:"line-number"},[n._v("64")]),r("br"),r("span",{staticClass:"line-number"},[n._v("65")]),r("br"),r("span",{staticClass:"line-number"},[n._v("66")]),r("br"),r("span",{staticClass:"line-number"},[n._v("67")]),r("br"),r("span",{staticClass:"line-number"},[n._v("68")]),r("br"),r("span",{staticClass:"line-number"},[n._v("69")]),r("br"),r("span",{staticClass:"line-number"},[n._v("70")]),r("br"),r("span",{staticClass:"line-number"},[n._v("71")]),r("br"),r("span",{staticClass:"line-number"},[n._v("72")]),r("br"),r("span",{staticClass:"line-number"},[n._v("73")]),r("br"),r("span",{staticClass:"line-number"},[n._v("74")]),r("br"),r("span",{staticClass:"line-number"},[n._v("75")]),r("br"),r("span",{staticClass:"line-number"},[n._v("76")]),r("br"),r("span",{staticClass:"line-number"},[n._v("77")]),r("br"),r("span",{staticClass:"line-number"},[n._v("78")]),r("br"),r("span",{staticClass:"line-number"},[n._v("79")]),r("br"),r("span",{staticClass:"line-number"},[n._v("80")]),r("br"),r("span",{staticClass:"line-number"},[n._v("81")]),r("br"),r("span",{staticClass:"line-number"},[n._v("82")]),r("br"),r("span",{staticClass:"line-number"},[n._v("83")]),r("br"),r("span",{staticClass:"line-number"},[n._v("84")]),r("br"),r("span",{staticClass:"line-number"},[n._v("85")]),r("br"),r("span",{staticClass:"line-number"},[n._v("86")]),r("br"),r("span",{staticClass:"line-number"},[n._v("87")]),r("br"),r("span",{staticClass:"line-number"},[n._v("88")]),r("br"),r("span",{staticClass:"line-number"},[n._v("89")]),r("br"),r("span",{staticClass:"line-number"},[n._v("90")]),r("br"),r("span",{staticClass:"line-number"},[n._v("91")]),r("br"),r("span",{staticClass:"line-number"},[n._v("92")]),r("br"),r("span",{staticClass:"line-number"},[n._v("93")]),r("br"),r("span",{staticClass:"line-number"},[n._v("94")]),r("br"),r("span",{staticClass:"line-number"},[n._v("95")]),r("br"),r("span",{staticClass:"line-number"},[n._v("96")]),r("br"),r("span",{staticClass:"line-number"},[n._v("97")]),r("br"),r("span",{staticClass:"line-number"},[n._v("98")]),r("br"),r("span",{staticClass:"line-number"},[n._v("99")]),r("br"),r("span",{staticClass:"line-number"},[n._v("100")]),r("br"),r("span",{staticClass:"line-number"},[n._v("101")]),r("br")])]),r("h3",{attrs:{id:"错误对象的补充"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误对象的补充"}},[n._v("#")]),n._v(" 错误对象的补充"),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#additions-to-error-objects",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/additions_to_error_objects.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[n._v("每当 "),r("code",[n._v("Error")]),n._v(" 对象通过域路由时，都会向其中添加一些额外的字段。")]),n._v(" "),r("ul",[r("li",[r("code",[n._v("error.domain")]),n._v(" 最先处理错误的域。")]),n._v(" "),r("li",[r("code",[n._v("error.domainEmitter")]),n._v(" 触发带有错误对象的 "),r("code",[n._v("'error'")]),n._v(" 事件的事件触发器。")]),n._v(" "),r("li",[r("code",[n._v("error.domainBound")]),n._v(" 绑定到域的回调函数，并且传入一个错误作为其第一个参数。")]),n._v(" "),r("li",[r("code",[n._v("error.domainThrown")]),n._v(" 布尔值，指示错误是被抛出、触发、还是传给绑定的回调函数。")])]),n._v(" "),r("h3",{attrs:{id:"隐式的绑定"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#隐式的绑定"}},[n._v("#")]),n._v(" 隐式的绑定"),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#implicit-binding",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/implicit_binding.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[n._v("如果域正在使用中，则所有"),r("strong",[n._v("新的")]),n._v(" "),r("code",[n._v("EventEmitter")]),n._v(" 对象（包括流对象、请求、响应等）将在创建时隐式地绑定到活动域。")]),n._v(" "),r("p",[n._v("此外，传给低层事件循环请求的回调（例如 "),r("code",[n._v("fs.open()")]),n._v("、或其他回调接受的方法）将自动绑定到活动域。 如果它们抛出，则域将捕获错误。")]),n._v(" "),r("p",[n._v("为了防止过多的内存使用，"),r("code",[n._v("Domain")]),n._v(" 对象本身没有被隐式地添加为活动域的子域。 如果是这样，则阻止请求和响应对象被正确地垃圾收集就太容易了。")]),n._v(" "),r("p",[n._v("要将 "),r("code",[n._v("Domain")]),n._v(" 对象嵌套为父 "),r("code",[n._v("Domain")]),n._v(" 的子对象，则必须显式地添加它们。")]),n._v(" "),r("p",[n._v("隐式的绑定路由向 "),r("code",[n._v("Domain")]),n._v(" 的 "),r("code",[n._v("'error'")]),n._v(" 事件抛出错误和 "),r("code",[n._v("'error'")]),n._v(" 事件，但没有在 "),r("code",[n._v("Domain")]),n._v(" 上注册 "),r("code",[n._v("EventEmitter")]),n._v("。 隐式的绑定只处理抛出的错误和 "),r("code",[n._v("'error'")]),n._v(" 事件。")]),n._v(" "),r("h3",{attrs:{id:"显式的绑定"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显式的绑定"}},[n._v("#")]),n._v(" 显式的绑定"),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#explicit-binding",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/explicit_binding.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[n._v("有时，使用的域不是应该用于特定事件触发器的域。 或者，事件触发器可以在域的上下文中创建，但可以绑定到其他域。")]),n._v(" "),r("p",[n._v("例如，可能有一个域用于 HTTP 服务器，但也许我们希望为每个请求使用单独的域。")]),n._v(" "),r("p",[n._v("这可以通过显式绑定来实现。")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("// 为服务器创建顶层的域\nconst domain = require('domain');\nconst http = require('http');\nconst serverDomain = domain.create();\n\nserverDomain.run(() => {\n  // 服务器是在 serverDomain 的作用域中创建\n  http.createServer((req, res) => {\n    // req 和 res 也在 serverDomain 的作用域中创建，\n    // 但是，我们希望每个请求都有单独的域。\n    // 首先创建它，然后添加 req 和 res。\n    const reqd = domain.create();\n    reqd.add(req);\n    reqd.add(res);\n    reqd.on('error', (er) => {\n      console.error('Error', er, req.url);\n      try {\n        res.writeHead(500);\n        res.end('Error occurred, sorry.');\n      } catch (er2) {\n        console.error('Error sending 500', er2, req.url);\n      }\n    });\n  }).listen(1337);\n});\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br"),r("span",{staticClass:"line-number"},[n._v("14")]),r("br"),r("span",{staticClass:"line-number"},[n._v("15")]),r("br"),r("span",{staticClass:"line-number"},[n._v("16")]),r("br"),r("span",{staticClass:"line-number"},[n._v("17")]),r("br"),r("span",{staticClass:"line-number"},[n._v("18")]),r("br"),r("span",{staticClass:"line-number"},[n._v("19")]),r("br"),r("span",{staticClass:"line-number"},[n._v("20")]),r("br"),r("span",{staticClass:"line-number"},[n._v("21")]),r("br"),r("span",{staticClass:"line-number"},[n._v("22")]),r("br"),r("span",{staticClass:"line-number"},[n._v("23")]),r("br"),r("span",{staticClass:"line-number"},[n._v("24")]),r("br"),r("span",{staticClass:"line-number"},[n._v("25")]),r("br")])]),r("h3",{attrs:{id:"domain-create"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-create"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.create()")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domaincreate",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[n._v("返回: "),r("a",{attrs:{href:"http://nodejs.cn/api/domain.html#class-domain",target:"_blank",rel:"noopener noreferrer"}},[r("Domain",[r("OutboundLink")],1)],1)])]),n._v(" "),r("h3",{attrs:{id:"domain-类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-类"}},[n._v("#")]),n._v(" "),r("code",[n._v("Domain")]),n._v(" 类"),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#class-domain",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/class_domain.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[n._v("继承自: "),r("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[r("EventEmitter",[r("OutboundLink")],1)],1)])]),n._v(" "),r("p",[r("code",[n._v("Domain")]),n._v(" 类封装了路由错误和未捕获异常到活动 "),r("code",[n._v("Domain")]),n._v(" 对象的功能。")]),n._v(" "),r("p",[n._v("要处理其捕获的错误，则监听其 "),r("code",[n._v("'error'")]),n._v(" 事件。")]),n._v(" "),r("h4",{attrs:{id:"domain-members"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-members"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.members")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domainmembers",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_members.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://url.nodejs.cn/ZJSz23",target:"_blank",rel:"noopener noreferrer"}},[r("Array",[r("OutboundLink")],1)],1)])]),n._v(" "),r("p",[n._v("已显式地添加到域的定时器和事件触发器数组。")]),n._v(" "),r("h4",{attrs:{id:"domain-add-emitter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-add-emitter"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.add(emitter)")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domainaddemitter",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_add_emitter.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[r("code",[n._v("emitter")]),n._v(" "),r("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[r("EventEmitter",[r("OutboundLink")],1)],1),n._v(" | "),r("a",{attrs:{href:"http://nodejs.cn/api/timers.html#timers",target:"_blank",rel:"noopener noreferrer"}},[r("Timer",[r("OutboundLink")],1)],1),n._v(" 要添加到域中的触发器或定时器")])]),n._v(" "),r("p",[n._v("显式地添加触发器到域中。 如果触发器调用的任何事件句柄抛出错误，或者触发器触发 "),r("code",[n._v("'error'")]),n._v(" 事件，则它将被路由到域的 "),r("code",[n._v("'error'")]),n._v(" 事件，就像隐式绑定一样。")]),n._v(" "),r("p",[n._v("这也适用于从 "),r("a",{attrs:{href:"http://nodejs.cn/api-v12/timers.html#timers_setinterval_callback_delay_args",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("setInterval()")]),r("OutboundLink")],1),n._v(" 和 "),r("a",{attrs:{href:"http://nodejs.cn/api-v12/timers.html#timers_settimeout_callback_delay_args",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("setTimeout()")]),r("OutboundLink")],1),n._v(" 返回的定时器。 如果其回调函数抛出异常，则其将被域 "),r("code",[n._v("'error'")]),n._v(" 句柄捕获。")]),n._v(" "),r("p",[n._v("如果定时器或 "),r("code",[n._v("EventEmitter")]),n._v(" 已绑定到某个域，则将其从该域中删除，并改为绑定到该域。")]),n._v(" "),r("h4",{attrs:{id:"domain-bind-callback"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-bind-callback"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.bind(callback)")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domainbindcallback",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_bind_callback.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[r("code",[n._v("callback")]),n._v(" "),r("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[r("Function",[r("OutboundLink")],1)],1),n._v(" 回调函数")]),n._v(" "),r("li",[n._v("返回: "),r("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[r("Function",[r("OutboundLink")],1)],1),n._v(" 绑定的函数")])]),n._v(" "),r("p",[n._v("返回的函数将是提供的回调函数的封装器。 当调用返回的函数时，抛出的任何错误都会被路由到域的 "),r("code",[n._v("'error'")]),n._v(" 事件。")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("const d = domain.create();\n\nfunction readSomeFile(filename, cb) {\n  fs.readFile(filename, 'utf8', d.bind((er, data) => {\n    // 如果这个抛出，则它也会被传给域。\n    return cb(er, data ? JSON.parse(data) : null);\n  }));\n}\n\nd.on('error', (er) => {\n  // 某处发生了错误。如果我们现在抛出，\n  // 则其会以正常的行号和堆栈消息使程序崩溃。\n});\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br")])]),r("h4",{attrs:{id:"domain-enter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-enter"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.enter()")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domainenter",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_enter.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("code",[n._v("enter()")]),n._v(" 方法是 "),r("code",[n._v("run()")]),n._v("、"),r("code",[n._v("bind()")]),n._v(" 和 "),r("code",[n._v("intercept()")]),n._v(" 方法用来设置活动域的管道。 它将 "),r("code",[n._v("domain.active")]),n._v(" 和 "),r("code",[n._v("process.domain")]),n._v(" 设置为域，并将域隐式推送到域模块管理的域堆栈上（有关域堆栈的详细信息，请参见 "),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domain_domain_exit",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("domain.exit()")]),r("OutboundLink")],1),n._v("）。 对 "),r("code",[n._v("enter()")]),n._v(" 的调用界定了一系列异步调用和绑定到域的 I/O 操作的开始。")]),n._v(" "),r("p",[n._v("调用 "),r("code",[n._v("enter()")]),n._v(" 只改变活动域，不改变域本身。 "),r("code",[n._v("enter()")]),n._v(" 和 "),r("code",[n._v("exit()")]),n._v(" 可以在单个域上调用任意次数。")]),n._v(" "),r("h4",{attrs:{id:"domain-exit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-exit"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.exit()")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domainexit",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_exit.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("code",[n._v("exit()")]),n._v(" 方法退出当前域，将其从域堆栈中弹出。 任何时候执行将切换到不同异步调用链的上下文，确保退出当前域很重要。 对 "),r("code",[n._v("exit()")]),n._v(" 的调用界定了异步调用链和绑定到域的 I/O 操作链的结束或中断。")]),n._v(" "),r("p",[n._v("如果有多个嵌套域绑定到当前执行上下文，则 "),r("code",[n._v("exit()")]),n._v(" 将退出任何嵌套在该域中的域。")]),n._v(" "),r("p",[n._v("调用 "),r("code",[n._v("exit()")]),n._v(" 只改变活动域，不改变域本身。 "),r("code",[n._v("enter()")]),n._v(" 和 "),r("code",[n._v("exit()")]),n._v(" 可以在单个域上调用任意次数。")]),n._v(" "),r("h4",{attrs:{id:"domain-intercept-callback"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-intercept-callback"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.intercept(callback)")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domaininterceptcallback",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_intercept_callback.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[r("code",[n._v("callback")]),n._v(" "),r("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[r("Function",[r("OutboundLink")],1)],1),n._v(" 回调函数")]),n._v(" "),r("li",[n._v("返回: "),r("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[r("Function",[r("OutboundLink")],1)],1),n._v(" 截获的函数")])]),n._v(" "),r("p",[n._v("此方法和 "),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domain_domain_bind_callback",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("domain.bind(callback)")]),r("OutboundLink")],1),n._v(" 差不多。 但是，除了捕获抛出的错误外，它还会拦截作为第一个参数发送给函数的 "),r("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("Error")]),r("OutboundLink")],1),n._v(" 对象。")]),n._v(" "),r("p",[n._v("这样，常见的 "),r("code",[n._v("if (err) return callback(err);")]),n._v(" 模式可以在一个地方用单个错误句柄替换。")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("const d = domain.create();\n\nfunction readSomeFile(filename, cb) {\n  fs.readFile(filename, 'utf8', d.intercept((data) => {\n    // 注意，第一个参数永远不会传给回调，\n    // 因为它被假定为 'Error' 参数，\n    // 因此被域拦截。\n\n    // 如果这抛出，\n    // 则它也将被传到域，\n    // 因此错误处理逻辑可以移动到域上的 'error' 事件，\n    // 而不是在整个程序中重复。\n    return cb(null, JSON.parse(data));\n  }));\n}\n\nd.on('error', (er) => {\n  // 某处发生了错误。如果我们现在抛出，\n  // 则其会以正常的行号和堆栈消息使程序崩溃。\n});\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br"),r("span",{staticClass:"line-number"},[n._v("14")]),r("br"),r("span",{staticClass:"line-number"},[n._v("15")]),r("br"),r("span",{staticClass:"line-number"},[n._v("16")]),r("br"),r("span",{staticClass:"line-number"},[n._v("17")]),r("br"),r("span",{staticClass:"line-number"},[n._v("18")]),r("br"),r("span",{staticClass:"line-number"},[n._v("19")]),r("br"),r("span",{staticClass:"line-number"},[n._v("20")]),r("br")])]),r("h4",{attrs:{id:"domain-remove-emitter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-remove-emitter"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.remove(emitter)")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domainremoveemitter",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_remove_emitter.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[r("code",[n._v("emitter")]),n._v(" "),r("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[r("EventEmitter",[r("OutboundLink")],1)],1),n._v(" | "),r("a",{attrs:{href:"http://nodejs.cn/api/timers.html#timers",target:"_blank",rel:"noopener noreferrer"}},[r("Timer",[r("OutboundLink")],1)],1),n._v(" 要从域中删除的触发器或定时器")])]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domain_domain_add_emitter",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("domain.add(emitter)")]),r("OutboundLink")],1),n._v(" 的反义词。 从指定的触发器中删除域处理。")]),n._v(" "),r("h4",{attrs:{id:"domain-run-fn-args"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-run-fn-args"}},[n._v("#")]),n._v(" "),r("code",[n._v("domain.run(fn[, ...args])")]),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domainrunfn-args",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domain_run_fn_args.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("ul",[r("li",[r("code",[n._v("fn")]),n._v(" "),r("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[r("Function",[r("OutboundLink")],1)],1)]),n._v(" "),r("li",[r("code",[n._v("...args")]),n._v(" "),r("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[r("any",[r("OutboundLink")],1)],1)])]),n._v(" "),r("p",[n._v("在域的上下文中运行提供的函数，隐式地绑定在该上下文中创建的所有事件触发器、定时器和低层请求。 可选地，参数可以传给函数。")]),n._v(" "),r("p",[n._v("这是使用域的最基本方式。")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("const domain = require('domain');\nconst fs = require('fs');\nconst d = domain.create();\nd.on('error', (er) => {\n  console.error('Caught error!', er);\n});\nd.run(() => {\n  process.nextTick(() => {\n    setTimeout(() => { // 模拟各种异步的东西\n      fs.open('non-existent file', 'r', (er, fd) => {\n        if (er) throw er;\n        // 继续...\n      });\n    }, 100);\n  });\n});\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br"),r("span",{staticClass:"line-number"},[n._v("14")]),r("br"),r("span",{staticClass:"line-number"},[n._v("15")]),r("br"),r("span",{staticClass:"line-number"},[n._v("16")]),r("br")])]),r("p",[n._v("在本例中，将触发 "),r("code",[n._v("d.on('error')")]),n._v(" 句柄，而不是使程序崩溃。")]),n._v(" "),r("h3",{attrs:{id:"domain-与-promise"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#domain-与-promise"}},[n._v("#")]),n._v(" domain 与 Promise"),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domains-and-promises",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain/domains_and_promises.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("中英对照"),r("OutboundLink")],1)]),n._v(" "),r("p",[n._v("从 Node.js 8.0.0 开始，promise 的句柄在调用 "),r("code",[n._v(".then()")]),n._v(" 或 "),r("code",[n._v(".catch()")]),n._v(" 本身的域内运行：")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("const d1 = domain.create();\nconst d2 = domain.create();\n\nlet p;\nd1.run(() => {\n  p = Promise.resolve(42);\n});\n\nd2.run(() => {\n  p.then((v) => {\n    // 在 d2 中运行\n  });\n});\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br")])]),r("p",[n._v("可以使用 "),r("a",{attrs:{href:"http://nodejs.cn/api-v12/domain.html#domain_domain_bind_callback",target:"_blank",rel:"noopener noreferrer"}},[r("code",[n._v("domain.bind(callback)")]),r("OutboundLink")],1),n._v(" 将回调绑定到特定域：")]),n._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("const d1 = domain.create();\nconst d2 = domain.create();\n\nlet p;\nd1.run(() => {\n  p = Promise.resolve(42);\n});\n\nd2.run(() => {\n  p.then(p.domain.bind((v) => {\n    // 在 d1 中运行\n  }));\n});\n")])]),n._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[n._v("1")]),r("br"),r("span",{staticClass:"line-number"},[n._v("2")]),r("br"),r("span",{staticClass:"line-number"},[n._v("3")]),r("br"),r("span",{staticClass:"line-number"},[n._v("4")]),r("br"),r("span",{staticClass:"line-number"},[n._v("5")]),r("br"),r("span",{staticClass:"line-number"},[n._v("6")]),r("br"),r("span",{staticClass:"line-number"},[n._v("7")]),r("br"),r("span",{staticClass:"line-number"},[n._v("8")]),r("br"),r("span",{staticClass:"line-number"},[n._v("9")]),r("br"),r("span",{staticClass:"line-number"},[n._v("10")]),r("br"),r("span",{staticClass:"line-number"},[n._v("11")]),r("br"),r("span",{staticClass:"line-number"},[n._v("12")]),r("br"),r("span",{staticClass:"line-number"},[n._v("13")]),r("br")])]),r("p",[n._v("域不会干扰 promise 的错误处理机制。 换句话说，对于未处理的 "),r("code",[n._v("Promise")]),n._v(" 拒绝，不会触发 "),r("code",[n._v("'error'")]),n._v(" 事件。")])])}),[],!1,null,null,null);e.default=s.exports}}]);