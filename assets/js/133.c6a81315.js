(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{599:function(e,r,t){"use strict";t.r(r);var n=t(18),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"crypto-加密-node-js-api-文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-加密-node-js-api-文档"}},[e._v("#")]),e._v(" crypto 加密 | Node.js API 文档")]),e._v(" "),t("blockquote",[t("h2",{attrs:{id:"excerpt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),t("p",[e._v("中英对照")])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("源代码:")]),e._v(" "),t("a",{attrs:{href:"https://github.com/nodejs/node/blob/v12.22.12/lib/crypto.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/crypto.js"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("crypto")]),e._v(" 模块提供了加密功能，其中包括了用于 OpenSSL 散列、HMAC、加密、解密、签名、以及验证的函数的一整套封装。")]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("require('crypto')")]),e._v(" 访问此模块。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst secret = 'abcdefg';\nconst hash = crypto.createHmac('sha256', secret)\n                   .update('I love cupcakes')\n                   .digest('hex');\nconsole.log(hash);\n// 打印:\n//   c0fa1bc00531bd78ef38c628449c5102aeabd49b5dc3a2a516ea6ea959d6658e\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("h3",{attrs:{id:"确定加密支持是否不可用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#确定加密支持是否不可用"}},[e._v("#")]),e._v(" 确定加密支持是否不可用"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#determining-if-crypto-support-is-unavailable",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/determining_if_crypto_support_is_unavailable.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("可以在不支持 "),t("code",[e._v("crypto")]),e._v(" 模块的情况下构建 Node.js。 在这种情况下，调用 "),t("code",[e._v("require('crypto')")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("let crypto;\ntry {\n  crypto = require('crypto');\n} catch (err) {\n  console.log('crypto support is disabled!');\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h3",{attrs:{id:"certificate-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#certificate-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Certificate")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-certificate",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_certificate.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.8")]),e._v(" "),t("p",[e._v("SPKAC 是最初由 Netscape 实现的证书签名请求机制，并被正式指定为 "),t("a",{attrs:{href:"http://url.nodejs.cn/2T24oh",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML5 的 "),t("code",[e._v("keygen")]),e._v(" 元素"),t("OutboundLink")],1),e._v("的一部分。")]),e._v(" "),t("p",[t("code",[e._v("<keygen>")]),e._v(" 已弃用，因为 "),t("a",{attrs:{href:"http://url.nodejs.cn/WMZ1Ef",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML 5.2"),t("OutboundLink")],1),e._v(" 和新项目不应再使用此元素。")]),e._v(" "),t("p",[t("code",[e._v("crypto")]),e._v(" 模块提供了用于处理 SPKAC 数据的 "),t("code",[e._v("Certificate")]),e._v(" 类。 最常见的用法是处理由 HTML5 "),t("code",[e._v("<keygen>")]),e._v(" 元素生成的输出。 Node.js 在内部使用 "),t("a",{attrs:{href:"http://url.nodejs.cn/qh2GSY",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenSSL 的 SPKAC 实现"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"certificate-exportchallenge-spkac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#certificate-exportchallenge-spkac"}},[e._v("#")]),e._v(" "),t("code",[e._v("Certificate.exportChallenge(spkac)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#certificateexportchallengespkac",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/certificate_exportchallenge_spkac.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v9.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("spkac")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("spkac")]),e._v(" 数据结构的挑战组件，包括公钥和挑战。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Certificate } = require('crypto');\nconst spkac = getSpkacSomehow();\nconst challenge = Certificate.exportChallenge(spkac);\nconsole.log(challenge.toString('utf8'));\n// 打印: the challenge as a UTF8 string\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h4",{attrs:{id:"certificate-exportpublickey-spkac-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#certificate-exportpublickey-spkac-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("Certificate.exportPublicKey(spkac[, encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#certificateexportpublickeyspkac-encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/certificate_exportpublickey_spkac_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v9.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("spkac")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("spkac")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("spkac")]),e._v(" 数据结构的公钥组件，包括公钥和挑战。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Certificate } = require('crypto');\nconst spkac = getSpkacSomehow();\nconst publicKey = Certificate.exportPublicKey(spkac);\nconsole.log(publicKey);\n// 打印: the public key as <Buffer ...>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h4",{attrs:{id:"certificate-verifyspkac-spkac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#certificate-verifyspkac-spkac"}},[e._v("#")]),e._v(" "),t("code",[e._v("Certificate.verifySpkac(spkac)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#certificateverifyspkacspkac",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/certificate_verifyspkac_spkac.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v9.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("spkac")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 如果给定的 "),t("code",[e._v("spkac")]),e._v(" 数据结构有效，则为 "),t("code",[e._v("true")]),e._v("，否则为 "),t("code",[e._v("false")]),e._v("。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Certificate } = require('crypto');\nconst spkac = getSpkacSomehow();\nconsole.log(Certificate.verifySpkac(Buffer.from(spkac)));\n// 打印: true 或 false\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h4",{attrs:{id:"旧版的-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#旧版的-api"}},[e._v("#")]),e._v(" 旧版的 API"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#legacy-api",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("As a still supported legacy interface, it is possible to create new instances of the "),t("code",[e._v("crypto.Certificate")]),e._v(" class as illustrated in the examples below.")]),e._v(" "),t("h5",{attrs:{id:"new-crypto-certificate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-crypto-certificate"}},[e._v("#")]),e._v(" "),t("code",[e._v("new crypto.Certificate()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#new-cryptocertificate",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/new_crypto_certificate.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("可以使用 "),t("code",[e._v("new")]),e._v(" 关键字或通过调用 "),t("code",[e._v("crypto.Certificate()")]),e._v(" 作为函数来创建 "),t("code",[e._v("Certificate")]),e._v(" 类的实例：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst cert1 = new crypto.Certificate();\nconst cert2 = crypto.Certificate();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h5",{attrs:{id:"certificate-exportchallenge-spkac-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#certificate-exportchallenge-spkac-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("certificate.exportChallenge(spkac)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#certificateexportchallengespkac_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/certificate_exportchallenge_spkac_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.8")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("spkac")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("spkac")]),e._v(" 数据结构的挑战组件，包括公钥和挑战。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const cert = require('crypto').Certificate();\nconst spkac = getSpkacSomehow();\nconst challenge = cert.exportChallenge(spkac);\nconsole.log(challenge.toString('utf8'));\n// 打印: the challenge as a UTF8 string\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h5",{attrs:{id:"certificate-exportpublickey-spkac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#certificate-exportpublickey-spkac"}},[e._v("#")]),e._v(" "),t("code",[e._v("certificate.exportPublicKey(spkac)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#certificateexportpublickeyspkac",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/certificate_exportpublickey_spkac.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.8")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("spkac")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("spkac")]),e._v(" 数据结构的公钥组件，包括公钥和挑战。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const cert = require('crypto').Certificate();\nconst spkac = getSpkacSomehow();\nconst publicKey = cert.exportPublicKey(spkac);\nconsole.log(publicKey);\n// 打印: the public key as <Buffer ...>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h5",{attrs:{id:"certificate-verifyspkac-spkac-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#certificate-verifyspkac-spkac-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("certificate.verifySpkac(spkac)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#certificateverifyspkacspkac_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/certificate_verifyspkac_spkac_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.8")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("spkac")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 如果给定的 "),t("code",[e._v("spkac")]),e._v(" 数据结构有效，则为 "),t("code",[e._v("true")]),e._v("，否则为 "),t("code",[e._v("false")]),e._v("。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const cert = require('crypto').Certificate();\nconst spkac = getSpkacSomehow();\nconsole.log(cert.verifySpkac(Buffer.from(spkac)));\n// 打印: true 或 false\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h3",{attrs:{id:"cipher-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cipher-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Cipher")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-cipher",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_cipher.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.94")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamtransform",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Transform>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("Cipher")]),e._v(" 类的实例用于加密数据。 可以通过以下两种方式之一使用该类：")]),e._v(" "),t("ul",[t("li",[e._v("作为既可读又可写的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v("，其中写入未加密的纯数据以在可读端生成加密的数据，或")]),e._v(" "),t("li",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_update_data_inputencoding_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.final()")]),t("OutboundLink")],1),e._v(" 方法生成加密的数据。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createcipher_algorithm_password_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createCipher()")]),t("OutboundLink")],1),e._v(" 或 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createcipheriv_algorithm_key_iv_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createCipheriv()")]),t("OutboundLink")],1),e._v(" 方法用于创建 "),t("code",[e._v("Cipher")]),e._v(" 实例。 "),t("code",[e._v("Cipher")]),e._v(" 对象不能直接使用 "),t("code",[e._v("new")]),e._v(" 关键字创建。")]),e._v(" "),t("p",[e._v("示例：使用 "),t("code",[e._v("Cipher")]),e._v(" 对象作为流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst algorithm = 'aes-192-cbc';\nconst password = 'Password used to generate key';\n// 密钥长度取决于算法。\n// 在这种情况下，对于 aes192，它是 24 字节（192 位）。\n// 请改用异步的 `crypto.scrypt()`。\nconst key = crypto.scryptSync(password, 'salt', 24);\n// 使用 `crypto.randomBytes()` 生成随机的 iv，\n// 而不是此处显示的静态的 iv。\nconst iv = Buffer.alloc(16, 0); // 初始化向量。\n\nconst cipher = crypto.createCipheriv(algorithm, key, iv);\n\nlet encrypted = '';\ncipher.on('readable', () => {\n  let chunk;\n  while (null !== (chunk = cipher.read())) {\n    encrypted += chunk.toString('hex');\n  }\n});\ncipher.on('end', () => {\n  console.log(encrypted);\n  // 打印: e5f79c5915c02171eec6b212d5520d44480993d7d622a7c4c2da32f6efda0ffa\n});\n\ncipher.write('some clear text data');\ncipher.end();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br")])]),t("p",[e._v("示例：使用 "),t("code",[e._v("Cipher")]),e._v(" 和管道流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst fs = require('fs');\n\nconst algorithm = 'aes-192-cbc';\nconst password = 'Password used to generate key';\n// 请改用异步的 `crypto.scrypt()`。\nconst key = crypto.scryptSync(password, 'salt', 24);\n// 使用 `crypto.randomBytes()` 生成随机的 iv，\n// 而不是此处显示的静态的 iv。\nconst iv = Buffer.alloc(16, 0); // 初始化向量。\n\nconst cipher = crypto.createCipheriv(algorithm, key, iv);\n\nconst input = fs.createReadStream('test.js');\nconst output = fs.createWriteStream('test.enc');\n\ninput.pipe(cipher).pipe(output);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("p",[e._v("示例：使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_update_data_inputencoding_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.final()")]),t("OutboundLink")],1),e._v(" 方法：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst algorithm = 'aes-192-cbc';\nconst password = 'Password used to generate key';\n// 请改用异步的 `crypto.scrypt()`。\nconst key = crypto.scryptSync(password, 'salt', 24);\n// 使用 `crypto.randomBytes` 生成随机的 iv，\n// 而不是此处显示的静态的 iv。\nconst iv = Buffer.alloc(16, 0); // 初始化向量。\n\nconst cipher = crypto.createCipheriv(algorithm, key, iv);\n\nlet encrypted = cipher.update('some clear text data', 'utf8', 'hex');\nencrypted += cipher.final('hex');\nconsole.log(encrypted);\n// 打印: e5f79c5915c02171eec6b212d5520d44480993d7d622a7c4c2da32f6efda0ffa\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("h4",{attrs:{id:"cipher-final-outputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cipher-final-outputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("cipher.final([outputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cipherfinaloutputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/cipher_final_outputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.94")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 任何剩余的加密内容。 如果指定了 "),t("code",[e._v("outputEncoding")]),e._v("，则返回字符串。 如果未提供 "),t("code",[e._v("outputEncoding")]),e._v("，则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("一旦调用了 "),t("code",[e._v("cipher.final()")]),e._v(" 方法，则 "),t("code",[e._v("Cipher")]),e._v(" 对象就不能再用于加密数据。 多次尝试调用 "),t("code",[e._v("cipher.final()")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("h4",{attrs:{id:"cipher-setaad-buffer-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cipher-setaad-buffer-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("cipher.setAAD(buffer[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ciphersetaadbuffer-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/cipher_setaad_buffer_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v1.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("plaintextLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-cipher",target:"_blank",rel:"noopener noreferrer"}},[t("Cipher",[t("OutboundLink")],1)],1),e._v(" 用于方法链。")])]),e._v(" "),t("p",[e._v("当使用认证的加密模式时（当前支持 "),t("code",[e._v("GCM")]),e._v("、"),t("code",[e._v("CCM")]),e._v(" 和 "),t("code",[e._v("OCB")]),e._v("），则 "),t("code",[e._v("cipher.setAAD()")]),e._v(" 方法设置用于额外的认证数据 (AAD) 输入参数的值。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 选项对于 "),t("code",[e._v("GCM")]),e._v(" 和 "),t("code",[e._v("OCB")]),e._v(" 是可选的。 使用 "),t("code",[e._v("CCM")]),e._v(" 时，必须指定 "),t("code",[e._v("plaintextLength")]),e._v(" 选项，其值必须与明文的字节长度匹配。 请参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ccm_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("CCM 模式"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("cipher.setAAD()")]),e._v(" 方法必须在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_update_data_inputencoding_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.update()")]),t("OutboundLink")],1),e._v(" 之前调用。")]),e._v(" "),t("h4",{attrs:{id:"cipher-getauthtag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cipher-getauthtag"}},[e._v("#")]),e._v(" "),t("code",[e._v("cipher.getAuthTag()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ciphergetauthtag",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/cipher_getauthtag.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v1.0.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 当使用认证的加密模式时（当前支持 "),t("code",[e._v("GCM")]),e._v("、"),t("code",[e._v("CCM")]),e._v(" 和 "),t("code",[e._v("OCB")]),e._v("），则 "),t("code",[e._v("cipher.getAuthTag()")]),e._v(" 方法返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("，其中包含根据给定数据计算出的认证标签。")])]),e._v(" "),t("p",[e._v("只有在使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.final()")]),t("OutboundLink")],1),e._v(" 方法完成加密后才应调用 "),t("code",[e._v("cipher.getAuthTag()")]),e._v(" 方法。")]),e._v(" "),t("h4",{attrs:{id:"cipher-setautopadding-autopadding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cipher-setautopadding-autopadding"}},[e._v("#")]),e._v(" "),t("code",[e._v("cipher.setAutoPadding([autoPadding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ciphersetautopaddingautopadding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/cipher_setautopadding_autopadding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.7.1")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("autoPadding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("true")])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-cipher",target:"_blank",rel:"noopener noreferrer"}},[t("Cipher",[t("OutboundLink")],1)],1),e._v(" 用于方法链。")])]),e._v(" "),t("p",[e._v("当使用块加密算法时，"),t("code",[e._v("Cipher")]),e._v(" 类会自动向输入数据添加填充到适当的块大小。 要禁用默认填充调用 "),t("code",[e._v("cipher.setAutoPadding(false)")]),e._v("。")]),e._v(" "),t("p",[e._v("当 "),t("code",[e._v("autoPadding")]),e._v(" 为 "),t("code",[e._v("false")]),e._v(" 时，整个输入数据的长度必须是密码块大小的倍数，否则 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.final()")]),t("OutboundLink")],1),e._v(" 将抛出错误。 禁用自动填充对于非标准填充很有用，例如使用 "),t("code",[e._v("0x0")]),e._v(" 而不是 PKCS 填充。")]),e._v(" "),t("p",[t("code",[e._v("cipher.setAutoPadding()")]),e._v(" 方法必须在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.final()")]),t("OutboundLink")],1),e._v(" 之前调用。")]),e._v(" "),t("h4",{attrs:{id:"cipher-update-data-inputencoding-outputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cipher-update-data-inputencoding-outputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("cipher.update(data[, inputEncoding][, outputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cipherupdatedata-inputencoding-outputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/cipher_update_data_inputencoding_outputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 数据的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("data")]),e._v(" 更新密码。 如果给定了 "),t("code",[e._v("inputEncoding")]),e._v(" 参数，则 "),t("code",[e._v("data")]),e._v(" 参数是使用指定编码的字符串。 如果未给定 "),t("code",[e._v("inputEncoding")]),e._v(" 参数，则 "),t("code",[e._v("data")]),e._v(" 必须是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。 如果 "),t("code",[e._v("data")]),e._v(" 是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("，则忽略 "),t("code",[e._v("inputEncoding")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("outputEncoding")]),e._v(" 指定加密数据的输出格式。 如果指定了 "),t("code",[e._v("outputEncoding")]),e._v("，则返回使用指定编码的字符串。 如果未提供 "),t("code",[e._v("outputEncoding")]),e._v("，则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("可以使用新数据多次调用 "),t("code",[e._v("cipher.update()")]),e._v(" 方法，直到调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.final()")]),t("OutboundLink")],1),e._v("。 在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_cipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cipher.final()")]),t("OutboundLink")],1),e._v(" 之后调用 "),t("code",[e._v("cipher.update()")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("h3",{attrs:{id:"decipher-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#decipher-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Decipher")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-decipher",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_decipher.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.94")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamtransform",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Transform>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("Decipher")]),e._v(" 类的实例用于解密数据。 可以通过以下两种方式之一使用该类：")]),e._v(" "),t("ul",[t("li",[e._v("作为既可读又可写的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v("，其中写入纯加密数据以在可读端生成未加密数据，或")]),e._v(" "),t("li",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_update_data_inputencoding_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v(" 方法生成未加密的数据。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createdecipher_algorithm_password_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createDecipher()")]),t("OutboundLink")],1),e._v(" 或 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createdecipheriv_algorithm_key_iv_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createDecipheriv()")]),t("OutboundLink")],1),e._v(" 方法用于创建 "),t("code",[e._v("Decipher")]),e._v(" 实例。 "),t("code",[e._v("Decipher")]),e._v(" 对象不能直接使用 "),t("code",[e._v("new")]),e._v(" 关键字创建。")]),e._v(" "),t("p",[e._v("示例：使用 "),t("code",[e._v("Decipher")]),e._v(" 对象作为流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst algorithm = 'aes-192-cbc';\nconst password = 'Password used to generate key';\n// 密钥长度取决于算法。\n// 在这种情况下，对于 aes192，它是 24 字节（192 位）。\n// 请改用异步的 `crypto.scrypt()`。\nconst key = crypto.scryptSync(password, 'salt', 24);\n// IV 通常与密文一起传入。\nconst iv = Buffer.alloc(16, 0); // 初始化向量。\n\nconst decipher = crypto.createDecipheriv(algorithm, key, iv);\n\nlet decrypted = '';\ndecipher.on('readable', () => {\n  while (null !== (chunk = decipher.read())) {\n    decrypted += chunk.toString('utf8');\n  }\n});\ndecipher.on('end', () => {\n  console.log(decrypted);\n  // 打印: some clear text data\n});\n\n// 使用相同的算法、密钥和 iv 加密。\nconst encrypted =\n  'e5f79c5915c02171eec6b212d5520d44480993d7d622a7c4c2da32f6efda0ffa';\ndecipher.write(encrypted, 'hex');\ndecipher.end();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br")])]),t("p",[e._v("示例：使用 "),t("code",[e._v("Decipher")]),e._v(" 和管道流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst fs = require('fs');\n\nconst algorithm = 'aes-192-cbc';\nconst password = 'Password used to generate key';\n// 请改用异步的 `crypto.scrypt()`。\nconst key = crypto.scryptSync(password, 'salt', 24);\n// IV 通常与密文一起传入。\nconst iv = Buffer.alloc(16, 0); // 初始化向量。\n\nconst decipher = crypto.createDecipheriv(algorithm, key, iv);\n\nconst input = fs.createReadStream('test.enc');\nconst output = fs.createWriteStream('test.js');\n\ninput.pipe(decipher).pipe(output);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("p",[e._v("示例：使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_update_data_inputencoding_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v(" 方法：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst algorithm = 'aes-192-cbc';\nconst password = 'Password used to generate key';\n// 请改用异步的 `crypto.scrypt()`。\nconst key = crypto.scryptSync(password, 'salt', 24);\n// IV 通常与密文一起传入。\nconst iv = Buffer.alloc(16, 0); // 初始化向量。\n\nconst decipher = crypto.createDecipheriv(algorithm, key, iv);\n\n// 使用相同的算法、密钥和 iv 加密。\nconst encrypted =\n  'e5f79c5915c02171eec6b212d5520d44480993d7d622a7c4c2da32f6efda0ffa';\nlet decrypted = decipher.update(encrypted, 'hex', 'utf8');\ndecrypted += decipher.final('utf8');\nconsole.log(decrypted);\n// 打印: some clear text data\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br")])]),t("h4",{attrs:{id:"decipher-final-outputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#decipher-final-outputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("decipher.final([outputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#decipherfinaloutputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/decipher_final_outputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.94")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 任何剩余的解密内容。 如果指定了 "),t("code",[e._v("outputEncoding")]),e._v("，则返回字符串。 如果未提供 "),t("code",[e._v("outputEncoding")]),e._v("，则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("一旦调用了 "),t("code",[e._v("decipher.final()")]),e._v(" 方法，就不能再使用 "),t("code",[e._v("Decipher")]),e._v(" 对象来解密数据。 多次尝试调用 "),t("code",[e._v("decipher.final()")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("h4",{attrs:{id:"decipher-setaad-buffer-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#decipher-setaad-buffer-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("decipher.setAAD(buffer[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#deciphersetaadbuffer-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/decipher_setaad_buffer_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("plaintextLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-decipher",target:"_blank",rel:"noopener noreferrer"}},[t("Decipher",[t("OutboundLink")],1)],1),e._v(" 用于方法链。")])]),e._v(" "),t("p",[e._v("当使用认证的加密模式时（当前支持 "),t("code",[e._v("GCM")]),e._v("、"),t("code",[e._v("CCM")]),e._v(" 和 "),t("code",[e._v("OCB")]),e._v("），则 "),t("code",[e._v("decipher.setAAD()")]),e._v(" 方法设置用于额外的认证数据 (AAD) 输入参数的值。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 参数对于 "),t("code",[e._v("GCM")]),e._v(" 是可选的。 使用 "),t("code",[e._v("CCM")]),e._v(" 时，必须指定 "),t("code",[e._v("plaintextLength")]),e._v(" 选项，其值必须与密文的字节长度匹配。 请参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ccm_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("CCM 模式"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("decipher.setAAD()")]),e._v(" 方法必须在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_update_data_inputencoding_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.update()")]),t("OutboundLink")],1),e._v(" 之前调用。")]),e._v(" "),t("h4",{attrs:{id:"decipher-setauthtag-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#decipher-setauthtag-buffer"}},[e._v("#")]),e._v(" "),t("code",[e._v("decipher.setAuthTag(buffer)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#deciphersetauthtagbuffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/decipher_setauthtag_buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-decipher",target:"_blank",rel:"noopener noreferrer"}},[t("Decipher",[t("OutboundLink")],1)],1),e._v(" 用于方法链。")])]),e._v(" "),t("p",[e._v("当使用认证的加密方式时（目前支持 "),t("code",[e._v("GCM")]),e._v("、"),t("code",[e._v("CCM")]),e._v("、"),t("code",[e._v("OCB")]),e._v("），则使用 "),t("code",[e._v("decipher.setAuthTag()")]),e._v(" 方法传入接收到的认证标签。 如果没有提供标签，或者密文被篡改，则抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v("，表示由于认证失败，密文应该被丢弃。 如果标签长度根据 "),t("a",{attrs:{href:"http://url.nodejs.cn/G26eau",target:"_blank",rel:"noopener noreferrer"}},[e._v("NIST SP 800-38D"),t("OutboundLink")],1),e._v(" 无效或与 "),t("code",[e._v("authTagLength")]),e._v(" 选项的值不匹配，则 "),t("code",[e._v("decipher.setAuthTag()")]),e._v(" 将抛出错误。")]),e._v(" "),t("p",[e._v("对于 "),t("code",[e._v("CCM")]),e._v(" 模式，必须在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_update_data_inputencoding_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.update()")]),t("OutboundLink")],1),e._v(" 之前调用 "),t("code",[e._v("decipher.setAuthTag()")]),e._v(" 方法，对于 "),t("code",[e._v("GCM")]),e._v(" 和 "),t("code",[e._v("OCB")]),e._v(" 模式，必须在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v(" 之前调用。 "),t("code",[e._v("decipher.setAuthTag()")]),e._v(" 只能被调用一次。")]),e._v(" "),t("h4",{attrs:{id:"decipher-setautopadding-autopadding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#decipher-setautopadding-autopadding"}},[e._v("#")]),e._v(" "),t("code",[e._v("decipher.setAutoPadding([autoPadding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#deciphersetautopaddingautopadding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/decipher_setautopadding_autopadding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.7.1")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("autoPadding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("true")])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-decipher",target:"_blank",rel:"noopener noreferrer"}},[t("Decipher",[t("OutboundLink")],1)],1),e._v(" 用于方法链。")])]),e._v(" "),t("p",[e._v("当数据在没有标准块填充的情况下加密时，调用 "),t("code",[e._v("decipher.setAutoPadding(false)")]),e._v(" 将禁用自动填充以防止 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v(" 检查和删除填充。")]),e._v(" "),t("p",[e._v("仅当输入数据的长度是密码块大小的倍数时，关闭自动填充才会起作用。")]),e._v(" "),t("p",[t("code",[e._v("decipher.setAutoPadding()")]),e._v(" 方法必须在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v(" 之前调用。")]),e._v(" "),t("h4",{attrs:{id:"decipher-update-data-inputencoding-outputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#decipher-update-data-inputencoding-outputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("decipher.update(data[, inputEncoding][, outputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#decipherupdatedata-inputencoding-outputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/decipher_update_data_inputencoding_outputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("data")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("用 "),t("code",[e._v("data")]),e._v(" 更新解密。 如果给定了 "),t("code",[e._v("inputEncoding")]),e._v(" 参数，则 "),t("code",[e._v("data")]),e._v(" 参数是使用指定编码的字符串。 如果未给定 "),t("code",[e._v("inputEncoding")]),e._v(" 参数，则 "),t("code",[e._v("data")]),e._v(" 必须是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。 如果 "),t("code",[e._v("data")]),e._v(" 是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("，则忽略 "),t("code",[e._v("inputEncoding")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("outputEncoding")]),e._v(" 指定加密数据的输出格式。 如果指定了 "),t("code",[e._v("outputEncoding")]),e._v("，则返回使用指定编码的字符串。 如果未提供 "),t("code",[e._v("outputEncoding")]),e._v("，则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("可以使用新数据多次调用 "),t("code",[e._v("decipher.update()")]),e._v(" 方法，直到调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v("。 在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_decipher_final_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("decipher.final()")]),t("OutboundLink")],1),e._v(" 之后调用 "),t("code",[e._v("decipher.update()")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("h3",{attrs:{id:"diffiehellman-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("DiffieHellman")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-diffiehellman",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_diffiehellman.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("p",[t("code",[e._v("DiffieHellman")]),e._v(" 类是用于创建 Diffie-Hellman 密钥交换的实用工具。")]),e._v(" "),t("p",[e._v("可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createDiffieHellman()")]),t("OutboundLink")],1),e._v(" 函数创建 "),t("code",[e._v("DiffieHellman")]),e._v(" 类的实例。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst assert = require('assert');\n\n// 生成 Alice 的密钥...\nconst alice = crypto.createDiffieHellman(2048);\nconst aliceKey = alice.generateKeys();\n\n// 生成 Bob 的密钥...\nconst bob = crypto.createDiffieHellman(alice.getPrime(), alice.getGenerator());\nconst bobKey = bob.generateKeys();\n\n// 交换并生成密钥...\nconst aliceSecret = alice.computeSecret(bobKey);\nconst bobSecret = bob.computeSecret(aliceKey);\n\n// OK\nassert.strictEqual(aliceSecret.toString('hex'), bobSecret.toString('hex'));\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("h4",{attrs:{id:"diffiehellman-computesecret-otherpublickey-inputencoding-outputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-computesecret-otherpublickey-inputencoding-outputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.computeSecret(otherPublicKey[, inputEncoding][, outputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmancomputesecretotherpublickey-inputencoding-outputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_computesecret_otherpublickey_inputencoding_outputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("otherPublicKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("otherPublicKey")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("otherPublicKey")]),e._v(" 作为对方的公钥计算共享密钥，并返回计算出的共享密钥。 使用指定的 "),t("code",[e._v("inputEncoding")]),e._v(" 解释提供的密钥，使用指定的 "),t("code",[e._v("outputEncoding")]),e._v(" 对密钥进行编码。 如果未提供 "),t("code",[e._v("inputEncoding")]),e._v("，则 "),t("code",[e._v("otherPublicKey")]),e._v(" 应为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[e._v("如果给定 "),t("code",[e._v("outputEncoding")]),e._v("，则返回字符串； 否则，返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-generatekeys-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-generatekeys-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.generateKeys([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmangeneratekeysencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_generatekeys_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("生成私钥和公钥 Diffie-Hellman 密钥值，并返回指定 "),t("code",[e._v("encoding")]),e._v(" 中的公钥。 此密钥应转让给另一方。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-getgenerator-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-getgenerator-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.getGenerator([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmangetgeneratorencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_getgenerator_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回指定 "),t("code",[e._v("encoding")]),e._v(" 中的 Diffie-Hellman 生成器。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-getprime-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-getprime-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.getPrime([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmangetprimeencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_getprime_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回指定 "),t("code",[e._v("encoding")]),e._v(" 中的 Diffie-Hellman 素数。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-getprivatekey-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-getprivatekey-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.getPrivateKey([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmangetprivatekeyencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_getprivatekey_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回指定 "),t("code",[e._v("encoding")]),e._v(" 中的 Diffie-Hellman 私钥。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-getpublickey-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-getpublickey-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.getPublicKey([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmangetpublickeyencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_getpublickey_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("返回指定 "),t("code",[e._v("encoding")]),e._v(" 中的 Diffie-Hellman 公钥。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-setprivatekey-privatekey-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-setprivatekey-privatekey-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.setPrivateKey(privateKey[, encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmansetprivatekeyprivatekey-encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_setprivatekey_privatekey_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("privateKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("privateKey")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("设置 Diffie-Hellman 私钥。 如果提供了 "),t("code",[e._v("encoding")]),e._v(" 参数，则 "),t("code",[e._v("privateKey")]),e._v(" 应该是字符串。 如果未提供 "),t("code",[e._v("encoding")]),e._v("，则 "),t("code",[e._v("privateKey")]),e._v(" 应为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-setpublickey-publickey-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-setpublickey-publickey-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.setPublicKey(publicKey[, encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmansetpublickeypublickey-encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_setpublickey_publickey_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("publicKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("publicKey")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("设置 Diffie-Hellman 公钥。 如果提供了 "),t("code",[e._v("encoding")]),e._v(" 参数，则 "),t("code",[e._v("publicKey")]),e._v(" 应该是字符串。 如果未提供 "),t("code",[e._v("encoding")]),e._v("，则 "),t("code",[e._v("publicKey")]),e._v(" 应为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"diffiehellman-verifyerror"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellman-verifyerror"}},[e._v("#")]),e._v(" "),t("code",[e._v("diffieHellman.verifyError")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#diffiehellmanverifyerror",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/diffiehellman_verifyerror.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.12")]),e._v(" "),t("p",[e._v("包含在 "),t("code",[e._v("DiffieHellman")]),e._v(" 对象初始化期间执行的检查所产生的任何警告和/或错误的位字段。")]),e._v(" "),t("p",[e._v("以下值对此属性有效（如 "),t("code",[e._v("constants")]),e._v(" 模块中所定义）：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("DH_CHECK_P_NOT_SAFE_PRIME")])]),e._v(" "),t("li",[t("code",[e._v("DH_CHECK_P_NOT_PRIME")])]),e._v(" "),t("li",[t("code",[e._v("DH_UNABLE_TO_CHECK_GENERATOR")])]),e._v(" "),t("li",[t("code",[e._v("DH_NOT_SUITABLE_GENERATOR")])])]),e._v(" "),t("h3",{attrs:{id:"diffiehellmangroup-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diffiehellmangroup-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("DiffieHellmanGroup")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-diffiehellmangroup",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_diffiehellmangroup.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.7.5")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const name = 'modp1';\nconst dh = crypto.createDiffieHellmanGroup(name);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("code",[e._v("name")]),e._v(" 取自 "),t("a",{attrs:{href:"http://url.nodejs.cn/6ouCbA",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 2412"),t("OutboundLink")],1),e._v("（modp1 和 2）和 "),t("a",{attrs:{href:"http://url.nodejs.cn/m8pGEe",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 3526"),t("OutboundLink")],1),e._v("：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ perl -ne \'print "$1\\n" if /"(modp\\d+)"/\' src/node_crypto_groups.h\nmodp1  #  768 位\nmodp2  # 1024 位\nmodp5  # 1536 位\nmodp14 # 2048 位\nmodp15 # 等等。\nmodp16\nmodp17\nmodp18\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("h3",{attrs:{id:"ecdh-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("ECDH")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-ecdh",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_ecdh.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14")]),e._v(" "),t("p",[t("code",[e._v("ECDH")]),e._v(" 类是用于创建椭圆曲线 Diffie-Hellman (ECDH) 密钥交换的实用工具。")]),e._v(" "),t("p",[e._v("可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createecdh_curvename",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createECDH()")]),t("OutboundLink")],1),e._v(" 函数创建 "),t("code",[e._v("ECDH")]),e._v(" 类的实例。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst assert = require('assert');\n\n// 生成 Alice 的密钥...\nconst alice = crypto.createECDH('secp521r1');\nconst aliceKey = alice.generateKeys();\n\n// 生成 Bob 的密钥...\nconst bob = crypto.createECDH('secp521r1');\nconst bobKey = bob.generateKeys();\n\n// 交换并生成密钥...\nconst aliceSecret = alice.computeSecret(bobKey);\nconst bobSecret = bob.computeSecret(aliceKey);\n\nassert.strictEqual(aliceSecret.toString('hex'), bobSecret.toString('hex'));\n// OK\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("h4",{attrs:{id:"ecdh-convertkey-key-curve-inputencoding-outputencoding-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-convertkey-key-curve-inputencoding-outputencoding-format"}},[e._v("#")]),e._v(" "),t("code",[e._v("ECDH.convertKey(key, curve[, inputEncoding[, outputEncoding[, format]]])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#static-method-ecdhconvertkeykey-curve-inputencoding-outputencoding-format",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/static_method_ecdh_convertkey_key_curve_inputencoding_outputencoding_format.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("curve")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("key")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("format")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("'uncompressed'")])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("将 "),t("code",[e._v("key")]),e._v(" 和 "),t("code",[e._v("curve")]),e._v(" 指定的 EC Diffie-Hellman 公钥转换为 "),t("code",[e._v("format")]),e._v(" 指定的格式。 "),t("code",[e._v("format")]),e._v(" 参数指定点编码，可以是 "),t("code",[e._v("'compressed'")]),e._v("、"),t("code",[e._v("'uncompressed'")]),e._v(" 或 "),t("code",[e._v("'hybrid'")]),e._v("。 提供的密钥使用指定的 "),t("code",[e._v("inputEncoding")]),e._v(" 进行解释，返回的密钥使用指定的 "),t("code",[e._v("outputEncoding")]),e._v(" 进行编码。")]),e._v(" "),t("p",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_getcurves",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getCurves()")]),t("OutboundLink")],1),e._v(" 获取可用曲线名称的列表。 在最近的 OpenSSL 版本中，"),t("code",[e._v("openssl ecparam -list_curves")]),e._v(" 还将显示每个可用椭圆曲线的名称和描述。")]),e._v(" "),t("p",[e._v("如果未指定 "),t("code",[e._v("format")]),e._v("，该点将以 "),t("code",[e._v("'uncompressed'")]),e._v(" 格式返回。")]),e._v(" "),t("p",[e._v("如果未提供 "),t("code",[e._v("inputEncoding")]),e._v("，则 "),t("code",[e._v("key")]),e._v(" 应为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[e._v("示例（解压缩密钥）：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { createECDH, ECDH } = require('crypto');\n\nconst ecdh = createECDH('secp256k1');\necdh.generateKeys();\n\nconst compressedKey = ecdh.getPublicKey('hex', 'compressed');\n\nconst uncompressedKey = ECDH.convertKey(compressedKey,\n                                        'secp256k1',\n                                        'hex',\n                                        'hex',\n                                        'uncompressed');\n\n// 转换后的密钥和未压缩的公钥应该是一样的\nconsole.log(uncompressedKey === ecdh.getPublicKey('hex'));\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br")])]),t("h4",{attrs:{id:"ecdh-computesecret-otherpublickey-inputencoding-outputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-computesecret-otherpublickey-inputencoding-outputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("ecdh.computeSecret(otherPublicKey[, inputEncoding][, outputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ecdhcomputesecretotherpublickey-inputencoding-outputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/ecdh_computesecret_otherpublickey_inputencoding_outputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("otherPublicKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("otherPublicKey")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("otherPublicKey")]),e._v(" 作为对方的公钥计算共享密钥，并返回计算出的共享密钥。 提供的密钥使用指定的 "),t("code",[e._v("inputEncoding")]),e._v(" 进行解释，返回的密钥使用指定的 "),t("code",[e._v("outputEncoding")]),e._v(" 进行编码。 如果未提供 "),t("code",[e._v("inputEncoding")]),e._v("，则 "),t("code",[e._v("otherPublicKey")]),e._v(" 应为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[e._v("如果给定 "),t("code",[e._v("outputEncoding")]),e._v("，将返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("当 "),t("code",[e._v("otherPublicKey")]),e._v(" 位于椭圆曲线之外时，"),t("code",[e._v("ecdh.computeSecret")]),e._v(" 将抛出 "),t("code",[e._v("ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY")]),e._v(" 错误。 由于 "),t("code",[e._v("otherPublicKey")]),e._v(" 通常由远程用户通过不安全的网络提供，因此请务必相应地处理此异常。")]),e._v(" "),t("h4",{attrs:{id:"ecdh-generatekeys-encoding-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-generatekeys-encoding-format"}},[e._v("#")]),e._v(" "),t("code",[e._v("ecdh.generateKeys([encoding[, format]])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ecdhgeneratekeysencoding-format",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/ecdh_generatekeys_encoding_format.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("format")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("'uncompressed'")])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("生成私有和公共 EC Diffie-Hellman 密钥值，并返回指定 "),t("code",[e._v("format")]),e._v(" 和 "),t("code",[e._v("encoding")]),e._v(" 中的公钥。 此密钥应转让给另一方。")]),e._v(" "),t("p",[t("code",[e._v("format")]),e._v(" 参数指定点编码，可以是 "),t("code",[e._v("'compressed'")]),e._v(" 或 "),t("code",[e._v("'uncompressed'")]),e._v("。 如果未指定 "),t("code",[e._v("format")]),e._v("，则该点将以 "),t("code",[e._v("'uncompressed'")]),e._v(" 格式返回。")]),e._v(" "),t("p",[e._v("如果提供了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"ecdh-getprivatekey-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-getprivatekey-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("ecdh.getPrivateKey([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ecdhgetprivatekeyencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/ecdh_getprivatekey_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 指定 "),t("code",[e._v("encoding")]),e._v(" 中的 EC Diffie-Hellman。")])]),e._v(" "),t("p",[e._v("如果指定了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"ecdh-getpublickey-encoding-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-getpublickey-encoding-format"}},[e._v("#")]),e._v(" "),t("code",[e._v("ecdh.getPublicKey([encoding][, format])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ecdhgetpublickeyencoding-format",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/ecdh_getpublickey_encoding_format.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("format")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("'uncompressed'")])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 指定 "),t("code",[e._v("encoding")]),e._v(" 和 "),t("code",[e._v("format")]),e._v(" 中的 EC Diffie-Hellman 公钥。")])]),e._v(" "),t("p",[t("code",[e._v("format")]),e._v(" 参数指定点编码，可以是 "),t("code",[e._v("'compressed'")]),e._v(" 或 "),t("code",[e._v("'uncompressed'")]),e._v("。 如果未指定 "),t("code",[e._v("format")]),e._v("，该点将以 "),t("code",[e._v("'uncompressed'")]),e._v(" 格式返回。")]),e._v(" "),t("p",[e._v("如果指定了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"ecdh-setprivatekey-privatekey-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-setprivatekey-privatekey-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("ecdh.setPrivateKey(privateKey[, encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ecdhsetprivatekeyprivatekey-encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/ecdh_setprivatekey_privatekey_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("privateKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("privateKey")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("设置 EC Diffie-Hellman 私钥。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则 "),t("code",[e._v("privateKey")]),e._v(" 应该是字符串；否则 "),t("code",[e._v("privateKey")]),e._v(" 应该是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("privateKey")]),e._v(" 对于创建 "),t("code",[e._v("ECDH")]),e._v(" 对象时指定的曲线无效，则会引发错误。 在设置私钥时，相关的公共点（密钥）也会生成并设置在 "),t("code",[e._v("ECDH")]),e._v(" 对象中。")]),e._v(" "),t("h4",{attrs:{id:"ecdh-setpublickey-publickey-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-setpublickey-publickey-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("ecdh.setPublicKey(publicKey[, encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ecdhsetpublickeypublickey-encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/ecdh_setpublickey_publickey_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14弃用于: v5.2.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("publicKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("publicKey")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("设置 EC Diffie-Hellman 公钥。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则 "),t("code",[e._v("publicKey")]),e._v(" 应该是字符串；否则应为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[e._v("通常没有理由调用这个方法，因为 "),t("code",[e._v("ECDH")]),e._v(" 只需要一个私钥和对方的公钥来计算共享秘密。 通常会调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_generatekeys_encoding_format",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.generateKeys()")]),t("OutboundLink")],1),e._v(" 或 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_setprivatekey_privatekey_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.setPrivateKey()")]),t("OutboundLink")],1),e._v("。 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_setprivatekey_privatekey_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.setPrivateKey()")]),t("OutboundLink")],1),e._v(" 方法尝试生成与正在设置的私钥相关联的公共点/密钥。")]),e._v(" "),t("p",[e._v("示例（获取共享密钥）：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst alice = crypto.createECDH('secp256k1');\nconst bob = crypto.createECDH('secp256k1');\n\n// 这是指定 Alice 以前的私钥之一的快捷方式。\n// 在实际应用中使用这种可预测的私钥是不明智的。\nalice.setPrivateKey(\n  crypto.createHash('sha256').update('alice', 'utf8').digest()\n);\n\n// Bob 使用新生成的加密强伪随机密钥对\nbob.generateKeys();\n\nconst aliceSecret = alice.computeSecret(bob.getPublicKey(), null, 'hex');\nconst bobSecret = bob.computeSecret(alice.getPublicKey(), null, 'hex');\n\n// aliceSecret 和 bobSecret 应该是相同的共享秘密值\nconsole.log(aliceSecret === bobSecret);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br")])]),t("h3",{attrs:{id:"hash-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Hash")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-hash",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_hash.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.92")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamtransform",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Transform>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("Hash")]),e._v(" 类是用于创建数据的哈希摘要的实用工具。 它可以通过以下两种方式之一使用：")]),e._v(" "),t("ul",[t("li",[e._v("作为既可读又可写的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v("，其中写入数据以在可读端生成计算的哈希摘要，或者")]),e._v(" "),t("li",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hash_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hash.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hash_digest_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hash.digest()")]),t("OutboundLink")],1),e._v(" 方法生成计算的哈希。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createhash_algorithm_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createHash()")]),t("OutboundLink")],1),e._v(" 方法用于创建 "),t("code",[e._v("Hash")]),e._v(" 实例。 "),t("code",[e._v("Hash")]),e._v(" 对象不能直接使用 "),t("code",[e._v("new")]),e._v(" 关键字创建。")]),e._v(" "),t("p",[e._v("示例：使用 "),t("code",[e._v("Hash")]),e._v(" 对象作为流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst hash = crypto.createHash('sha256');\n\nhash.on('readable', () => {\n  // 哈希流只生成\n  // 一个元素。\n  const data = hash.read();\n  if (data) {\n    console.log(data.toString('hex'));\n    // 打印:\n    //   6a2da20943931e9834fc12cfe5bb47bbd9ae43489a30726962b576f4e3993e50\n  }\n});\n\nhash.write('some data to hash');\nhash.end();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("p",[e._v("示例：使用 "),t("code",[e._v("Hash")]),e._v(" 和管道流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst fs = require('fs');\nconst hash = crypto.createHash('sha256');\n\nconst input = fs.createReadStream('test.js');\ninput.pipe(hash).pipe(process.stdout);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("示例：使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hash_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hash.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hash_digest_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hash.digest()")]),t("OutboundLink")],1),e._v(" 方法：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst hash = crypto.createHash('sha256');\n\nhash.update('some data to hash');\nconsole.log(hash.digest('hex'));\n// 打印:\n//   6a2da20943931e9834fc12cfe5bb47bbd9ae43489a30726962b576f4e3993e50\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h4",{attrs:{id:"hash-copy-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-copy-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("hash.copy([options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#hashcopyoptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/hash_copy_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-hash",target:"_blank",rel:"noopener noreferrer"}},[t("Hash",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建新的 "),t("code",[e._v("Hash")]),e._v(" 对象，其中包含当前 "),t("code",[e._v("Hash")]),e._v(" 对象的内部状态的深层副本。")]),e._v(" "),t("p",[e._v("可选的 "),t("code",[e._v("options")]),e._v(" 参数控制流的行为。 对于 XOF 哈希函数（例如 "),t("code",[e._v("'shake256'")]),e._v("），可以使用 "),t("code",[e._v("outputLength")]),e._v(" 选项指定所需的输出长度（以字节为单位）。")]),e._v(" "),t("p",[e._v("在调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hash_digest_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hash.digest()")]),t("OutboundLink")],1),e._v(" 方法后尝试复制 "),t("code",[e._v("Hash")]),e._v(" 对象时会引发错误。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 计算滚动哈希。\nconst crypto = require('crypto');\nconst hash = crypto.createHash('sha256');\n\nhash.update('one');\nconsole.log(hash.copy().digest('hex'));\n\nhash.update('two');\nconsole.log(hash.copy().digest('hex'));\n\nhash.update('three');\nconsole.log(hash.copy().digest('hex'));\n\n// 等等。\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("h4",{attrs:{id:"hash-digest-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-digest-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("hash.digest([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#hashdigestencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/hash_digest_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.92")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("计算传给被哈希的所有数据的摘要（使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hash_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hash.update()")]),t("OutboundLink")],1),e._v(" 方法）。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则将返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("Hash")]),e._v(" 对象在调用 "),t("code",[e._v("hash.digest()")]),e._v(" 方法后不能再次使用。 多次调用将导致抛出错误。")]),e._v(" "),t("h4",{attrs:{id:"hash-update-data-inputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-update-data-inputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("hash.update(data[, inputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#hashupdatedata-inputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/hash_update_data_inputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("data")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("使用给定的 "),t("code",[e._v("data")]),e._v(" 更新哈希内容，其编码在 "),t("code",[e._v("inputEncoding")]),e._v(" 中给出。 如果未提供 "),t("code",[e._v("encoding")]),e._v("，且 "),t("code",[e._v("data")]),e._v(" 是字符串，则强制为 "),t("code",[e._v("'utf8'")]),e._v(" 编码。 如果 "),t("code",[e._v("data")]),e._v(" 是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("，则忽略 "),t("code",[e._v("inputEncoding")]),e._v("。")]),e._v(" "),t("p",[e._v("这可以在流式传输时使用新数据多次调用。")]),e._v(" "),t("h3",{attrs:{id:"hmac-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmac-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Hmac")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-hmac",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_hmac.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.94")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamtransform",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Transform>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("Hmac")]),e._v(" 类是用于创建加密 HMAC 摘要的实用工具。 它可以通过以下两种方式之一使用：")]),e._v(" "),t("ul",[t("li",[e._v("作为既可读又可写的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v("，其中写入数据以在可读端生成计算的 HMAC 摘要，或")]),e._v(" "),t("li",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hmac_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hmac.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hmac_digest_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hmac.digest()")]),t("OutboundLink")],1),e._v(" 方法生成计算出的 HMAC 摘要。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createhmac_algorithm_key_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createHmac()")]),t("OutboundLink")],1),e._v(" 方法用于创建 "),t("code",[e._v("Hmac")]),e._v(" 实例。 "),t("code",[e._v("Hmac")]),e._v(" 对象不能直接使用 "),t("code",[e._v("new")]),e._v(" 关键字创建。")]),e._v(" "),t("p",[e._v("示例：使用 "),t("code",[e._v("Hmac")]),e._v(" 对象作为流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst hmac = crypto.createHmac('sha256', 'a secret');\n\nhmac.on('readable', () => {\n  // 哈希流只生成\n  // 一个元素。\n  const data = hmac.read();\n  if (data) {\n    console.log(data.toString('hex'));\n    // 打印:\n    //   7fd04df92f636fd450bc841c9418e5825c17f33ad9c87c518115a45971f7f77e\n  }\n});\n\nhmac.write('some data to hash');\nhmac.end();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("p",[e._v("示例：使用 "),t("code",[e._v("Hmac")]),e._v(" 和管道流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst fs = require('fs');\nconst hmac = crypto.createHmac('sha256', 'a secret');\n\nconst input = fs.createReadStream('test.js');\ninput.pipe(hmac).pipe(process.stdout);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("示例：使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hmac_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hmac.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hmac_digest_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hmac.digest()")]),t("OutboundLink")],1),e._v(" 方法：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst hmac = crypto.createHmac('sha256', 'a secret');\n\nhmac.update('some data to hash');\nconsole.log(hmac.digest('hex'));\n// 打印:\n//   7fd04df92f636fd450bc841c9418e5825c17f33ad9c87c518115a45971f7f77e\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h4",{attrs:{id:"hmac-digest-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmac-digest-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("hmac.digest([encoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#hmacdigestencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/hmac_digest_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.94")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("encoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("计算使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_hmac_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("hmac.update()")]),t("OutboundLink")],1),e._v(" 传入的所有数据的 HMAC 摘要。 如果提供了 "),t("code",[e._v("encoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("；")]),e._v(" "),t("p",[t("code",[e._v("Hmac")]),e._v(" 对象在 "),t("code",[e._v("hmac.digest()")]),e._v(" 被调用后不能再次使用。 多次调用 "),t("code",[e._v("hmac.digest()")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("h4",{attrs:{id:"hmac-update-data-inputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmac-update-data-inputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("hmac.update(data[, inputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#hmacupdatedata-inputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/hmac_update_data_inputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("data")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("使用给定的 "),t("code",[e._v("data")]),e._v(" 更新 "),t("code",[e._v("Hmac")]),e._v(" 内容，其编码在 "),t("code",[e._v("inputEncoding")]),e._v(" 中给出。 如果未提供 "),t("code",[e._v("encoding")]),e._v("，且 "),t("code",[e._v("data")]),e._v(" 是字符串，则强制为 "),t("code",[e._v("'utf8'")]),e._v(" 编码。 如果 "),t("code",[e._v("data")]),e._v(" 是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("，则忽略 "),t("code",[e._v("inputEncoding")]),e._v("。")]),e._v(" "),t("p",[e._v("这可以在流式传输时使用新数据多次调用。")]),e._v(" "),t("h3",{attrs:{id:"keyobject-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keyobject-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("KeyObject")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_keyobject.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Node.js 使用 "),t("code",[e._v("KeyObject")]),e._v(" 类来表示对称或非对称密钥，每种密钥暴露不同的功能。 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createsecretkey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createSecretKey()")]),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createpublickey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPublicKey()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createprivatekey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPrivateKey()")]),t("OutboundLink")],1),e._v(" 方法用于创建 "),t("code",[e._v("KeyObject")]),e._v(" 实例。 "),t("code",[e._v("KeyObject")]),e._v(" 对象不能直接使用 "),t("code",[e._v("new")]),e._v(" 关键字创建。")]),e._v(" "),t("p",[e._v("由于改进的安全功能，大多数应用程序应该考虑使用新的 "),t("code",[e._v("KeyObject")]),e._v(" API 而不是将密钥作为字符串或 "),t("code",[e._v("Buffer")]),e._v(" 传入。")]),e._v(" "),t("p",[t("code",[e._v("KeyObject")]),e._v(" 实例可以通过 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_port_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("postMessage()")]),t("OutboundLink")],1),e._v(" 传给其他线程。 接收者获得克隆的 "),t("code",[e._v("KeyObject")]),e._v("，"),t("code",[e._v("KeyObject")]),e._v(" 不需要在 "),t("code",[e._v("transferList")]),e._v(" 参数中列出。")]),e._v(" "),t("h4",{attrs:{id:"keyobject-asymmetrickeytype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keyobject-asymmetrickeytype"}},[e._v("#")]),e._v(" "),t("code",[e._v("keyObject.asymmetricKeyType")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#keyobjectasymmetrickeytype",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/keyobject_asymmetrickeytype.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("对于非对称密钥，此属性表示密钥的类型。 支持的密钥类型有：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("'rsa'")]),e._v(" (OID 1.2.840.113549.1.1.1)")]),e._v(" "),t("li",[t("code",[e._v("'rsa-pss'")]),e._v(" (OID 1.2.840.113549.1.1.10)")]),e._v(" "),t("li",[t("code",[e._v("'dsa'")]),e._v(" (OID 1.2.840.10040.4.1)")]),e._v(" "),t("li",[t("code",[e._v("'ec'")]),e._v(" (OID 1.2.840.10045.2.1)")]),e._v(" "),t("li",[t("code",[e._v("'x25519'")]),e._v(" (OID 1.3.101.110)")]),e._v(" "),t("li",[t("code",[e._v("'x448'")]),e._v(" (OID 1.3.101.111)")]),e._v(" "),t("li",[t("code",[e._v("'ed25519'")]),e._v(" (OID 1.3.101.112)")]),e._v(" "),t("li",[t("code",[e._v("'ed448'")]),e._v(" (OID 1.3.101.113)")]),e._v(" "),t("li",[t("code",[e._v("'dh'")]),e._v(" (OID 1.2.840.113549.1.3.1)")])]),e._v(" "),t("p",[e._v("对于无法识别的 "),t("code",[e._v("KeyObject")]),e._v(" 类型和对称密钥，此属性为 "),t("code",[e._v("undefined")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"keyobject-export-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keyobject-export-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("keyObject.export([options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#keyobjectexportoptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/keyobject_export_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.6.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("options")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("对于对称密钥，此函数分配一个包含密钥材料的 "),t("code",[e._v("Buffer")]),e._v(" 并忽略任何选项。")]),e._v(" "),t("p",[e._v("对于非对称密钥，"),t("code",[e._v("options")]),e._v(" 参数用于确定导出格式。")]),e._v(" "),t("p",[e._v("对于公钥，可以使用以下编码选项：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("type")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pkcs1'")]),e._v("（仅限 RSA）或 "),t("code",[e._v("'spki'")]),e._v(" 之一。")]),e._v(" "),t("li",[t("code",[e._v("format")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pem'")]),e._v(" 或 "),t("code",[e._v("'der'")]),e._v("。")])]),e._v(" "),t("p",[e._v("对于私钥，可以使用以下编码选项：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("type")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pkcs1'")]),e._v("（仅限 RSA）、"),t("code",[e._v("'pkcs8'")]),e._v(" 或 "),t("code",[e._v("'sec1'")]),e._v("（仅限 EC）之一。")]),e._v(" "),t("li",[t("code",[e._v("format")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pem'")]),e._v(" 或 "),t("code",[e._v("'der'")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("cipher")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 如果指定，则私钥将使用给定的 "),t("code",[e._v("cipher")]),e._v(" 和 "),t("code",[e._v("passphrase")]),e._v(" 使用基于 PKCS#5 v2.0 密码的加密进行加密。")]),e._v(" "),t("li",[t("code",[e._v("passphrase")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 用于加密的密码，参见 "),t("code",[e._v("cipher")]),e._v("。")])]),e._v(" "),t("p",[e._v("选择 PEM 编码时，结果将是字符串，否则它将是包含编码为 DER 的数据的缓冲区。")]),e._v(" "),t("p",[e._v("PKCS#1、SEC1 和 PKCS#8 类型的密钥可以通过使用 "),t("code",[e._v("cipher")]),e._v(" 和 "),t("code",[e._v("format")]),e._v(" 选项的组合进行加密。 PKCS#8 "),t("code",[e._v("type")]),e._v(" 可以与任何 "),t("code",[e._v("format")]),e._v(" 一起使用，通过指定 "),t("code",[e._v("cipher")]),e._v(" 来加密任何密钥算法（RSA、EC 或 DH）。 当使用 PEM "),t("code",[e._v("format")]),e._v(" 时，PKCS#1 和 SEC1 只能通过指定 "),t("code",[e._v("cipher")]),e._v(" 来加密。 为了获得最大的兼容性，对加密的私钥使用 PKCS#8。 由于 PKCS#8 定义了自己的加密机制，因此在加密 PKCS#8 密钥时不支持 PEM 级加密。 PKCS#8 加密参见 "),t("a",{attrs:{href:"http://url.nodejs.cn/2NHVsz",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 5208"),t("OutboundLink")],1),e._v("，PKCS#1 和 SEC1 加密参见 "),t("a",{attrs:{href:"http://url.nodejs.cn/DreNtw",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 1421"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"keyobject-symmetrickeysize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keyobject-symmetrickeysize"}},[e._v("#")]),e._v(" "),t("code",[e._v("keyObject.symmetricKeySize")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#keyobjectsymmetrickeysize",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/keyobject_symmetrickeysize.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.6.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("对于秘密密钥，此属性表示密钥的大小（以字节为单位）。 对于非对称密钥，此属性为 "),t("code",[e._v("undefined")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"keyobject-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keyobject-type"}},[e._v("#")]),e._v(" "),t("code",[e._v("keyObject.type")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#keyobjecttype",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/keyobject_type.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.6.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("根据此 "),t("code",[e._v("KeyObject")]),e._v(" 的类型，此属性是 "),t("code",[e._v("'secret'")]),e._v(" 表示秘密（对称）密钥，"),t("code",[e._v("'public'")]),e._v(" 表示公共（非对称）密钥或 "),t("code",[e._v("'private'")]),e._v(" 表示私有（非对称）密钥。")]),e._v(" "),t("h3",{attrs:{id:"sign-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sign-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Sign")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-sign",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_sign.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.92")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamwritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Writable>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("Sign")]),e._v(" 类是用于生成签名的实用工具。 它可以通过以下两种方式之一使用：")]),e._v(" "),t("ul",[t("li",[e._v("作为可写"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v("，写入要签名的数据，使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_sign_sign_privatekey_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("sign.sign()")]),t("OutboundLink")],1),e._v(" 方法生成并返回签名，或者")]),e._v(" "),t("li",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_sign_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("sign.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_sign_sign_privatekey_outputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("sign.sign()")]),t("OutboundLink")],1),e._v(" 方法生成签名。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createsign_algorithm_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createSign()")]),t("OutboundLink")],1),e._v(" 方法用于创建 "),t("code",[e._v("Sign")]),e._v(" 实例。 参数是要使用的哈希函数的字符串名称。 "),t("code",[e._v("Sign")]),e._v(" 对象不能直接使用 "),t("code",[e._v("new")]),e._v(" 关键字创建。")]),e._v(" "),t("p",[e._v("示例：使用 "),t("code",[e._v("Sign")]),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_verify",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Verify")]),t("OutboundLink")],1),e._v(" 对象作为流：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst { privateKey, publicKey } = crypto.generateKeyPairSync('ec', {\n  namedCurve: 'sect239k1'\n});\n\nconst sign = crypto.createSign('SHA256');\nsign.write('some data to sign');\nsign.end();\nconst signature = sign.sign(privateKey, 'hex');\n\nconst verify = crypto.createVerify('SHA256');\nverify.write('some data to sign');\nverify.end();\nconsole.log(verify.verify(publicKey, signature, 'hex'));\n// 打印: true\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("p",[e._v("示例：使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_sign_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("sign.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_verify_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("verify.update()")]),t("OutboundLink")],1),e._v(" 方法：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst { privateKey, publicKey } = crypto.generateKeyPairSync('rsa', {\n  modulusLength: 2048,\n});\n\nconst sign = crypto.createSign('SHA256');\nsign.update('some data to sign');\nsign.end();\nconst signature = sign.sign(privateKey);\n\nconst verify = crypto.createVerify('SHA256');\nverify.update('some data to sign');\nverify.end();\nconsole.log(verify.verify(publicKey, signature));\n// 打印: true\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("h4",{attrs:{id:"sign-sign-privatekey-outputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sign-sign-privatekey-outputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("sign.sign(privateKey[, outputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#signsignprivatekey-outputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/sign_sign_privatekey_outputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("privateKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("dsaEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("saltLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("li",[t("code",[e._v("outputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 返回值的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_sign_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("sign.update()")]),t("OutboundLink")],1),e._v(" 或 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("sign.write()")]),t("OutboundLink")],1),e._v(" 计算通过的所有数据的签名。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("privateKey")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("privateKey")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createprivatekey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPrivateKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入以下额外属性：")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("dsaEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 对于 DSA 和 ECDSA，此选项指定生成签名的格式。 它可以是以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("'der'")]),e._v("（默认）：DER 编码的 ASN.1 签名结构编码 "),t("code",[e._v("(r, s)")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("'ieee-p1363'")]),e._v(": IEEE-P1363 中提议的签名格式 "),t("code",[e._v("r || s")]),e._v("。")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" RSA 的可选填充值，以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v("（默认）")]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PSS_PADDING")])])]),e._v(" "),t("p",[t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 将使用具有与 "),t("a",{attrs:{href:"http://url.nodejs.cn/o3Gr5v",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4055"),t("OutboundLink")],1),e._v(" 的第 3.1 章节中指定的消息签名相同的散列函数的 MGF1，除非 MGF1 散列函数已被指定为符合 "),t("a",{attrs:{href:"http://url.nodejs.cn/o3Gr5v",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4055"),t("OutboundLink")],1),e._v(" 的第 3.3 章节的密钥的一部分。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("saltLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 填充为 "),t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 时的盐长度。 特殊值 "),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_DIGEST")]),e._v(" 将盐长度设置为摘要大小，"),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_MAX_SIGN")]),e._v("（默认值）将其设置为最大允许值。")])])]),e._v(" "),t("p",[e._v("如果提供了 "),t("code",[e._v("outputEncoding")]),e._v("，则返回字符串；否则返回 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("Sign")]),e._v(" 对象在调用 "),t("code",[e._v("sign.sign()")]),e._v(" 方法后不能再次使用。 多次调用 "),t("code",[e._v("sign.sign()")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("h4",{attrs:{id:"sign-update-data-inputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sign-update-data-inputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("sign.update(data[, inputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#signupdatedata-inputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/sign_update_data_inputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("data")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("使用给定的 "),t("code",[e._v("data")]),e._v(" 更新 "),t("code",[e._v("Sign")]),e._v(" 内容，其编码在 "),t("code",[e._v("inputEncoding")]),e._v(" 中给出。 如果未提供 "),t("code",[e._v("encoding")]),e._v("，且 "),t("code",[e._v("data")]),e._v(" 是字符串，则强制为 "),t("code",[e._v("'utf8'")]),e._v(" 编码。 如果 "),t("code",[e._v("data")]),e._v(" 是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("，则忽略 "),t("code",[e._v("inputEncoding")]),e._v("。")]),e._v(" "),t("p",[e._v("这可以在流式传输时使用新数据多次调用。")]),e._v(" "),t("h3",{attrs:{id:"verify-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#verify-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Verify")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#class-verify",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/class_verify.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.92")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamwritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Writable>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("Verify")]),e._v(" 类是用于验证签名的实用工具。 它可以通过以下两种方式之一使用：")]),e._v(" "),t("ul",[t("li",[e._v("作为可写"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v("，其中写入的数据用于根据提供的签名进行验证，或者")]),e._v(" "),t("li",[e._v("使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_verify_update_data_inputencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("verify.update()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_verify_verify_object_signature_signatureencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("verify.verify()")]),t("OutboundLink")],1),e._v(" 方法来验证签名。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createverify_algorithm_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createVerify()")]),t("OutboundLink")],1),e._v(" 方法用于创建 "),t("code",[e._v("Verify")]),e._v(" 实例。 "),t("code",[e._v("Verify")]),e._v(" 对象不能直接使用 "),t("code",[e._v("new")]),e._v(" 关键字创建。")]),e._v(" "),t("p",[e._v("有关示例，请参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_sign",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Sign")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"verify-update-data-inputencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#verify-update-data-inputencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("verify.update(data[, inputEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#verifyupdatedata-inputencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/verify_update_data_inputencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("inputEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("data")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("p",[e._v("使用给定的 "),t("code",[e._v("data")]),e._v(" 更新 "),t("code",[e._v("Verify")]),e._v(" 内容，其编码在 "),t("code",[e._v("inputEncoding")]),e._v(" 中给出。 如果未提供 "),t("code",[e._v("inputEncoding")]),e._v("，且 "),t("code",[e._v("data")]),e._v(" 是字符串，则强制为 "),t("code",[e._v("'utf8'")]),e._v(" 编码。 如果 "),t("code",[e._v("data")]),e._v(" 是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("，则忽略 "),t("code",[e._v("inputEncoding")]),e._v("。")]),e._v(" "),t("p",[e._v("这可以在流式传输时使用新数据多次调用。")]),e._v(" "),t("h4",{attrs:{id:"verify-verify-object-signature-signatureencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#verify-verify-object-signature-signatureencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("verify.verify(object, signature[, signatureEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#verifyverifyobject-signature-signatureencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/verify_verify_object_signature_signatureencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("object")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("dsaEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("saltLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("li",[t("code",[e._v("signature")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("signatureEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("signature")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("true")]),e._v(" 或 "),t("code",[e._v("false")]),e._v(" 取决于数据和公钥签名的有效性。")])]),e._v(" "),t("p",[e._v("使用给定的 "),t("code",[e._v("object")]),e._v(" 和 "),t("code",[e._v("signature")]),e._v(" 验证提供的数据。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("object")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("object")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createpublickey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPublicKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入以下额外属性：")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("dsaEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 对于 DSA 和 ECDSA，此选项指定生成签名的格式。 它可以是以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("'der'")]),e._v("（默认）：DER 编码的 ASN.1 签名结构编码 "),t("code",[e._v("(r, s)")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("'ieee-p1363'")]),e._v(": IEEE-P1363 中提议的签名格式 "),t("code",[e._v("r || s")]),e._v("。")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" RSA 的可选填充值，以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v("（默认）")]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PSS_PADDING")])])]),e._v(" "),t("p",[t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 将使用具有相同散列函数的 MGF1，用于验证 "),t("a",{attrs:{href:"http://url.nodejs.cn/o3Gr5v",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4055"),t("OutboundLink")],1),e._v(" 的第 3.1 章节中指定的消息，除非 MGF1 散列函数已被指定为符合 "),t("a",{attrs:{href:"http://url.nodejs.cn/o3Gr5v",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4055"),t("OutboundLink")],1),e._v(" 的第 3.3 章节的密钥的一部分。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("saltLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 填充为 "),t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 时的盐长度。 特殊值 "),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_DIGEST")]),e._v(" 将盐长度设置为摘要大小，"),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_AUTO")]),e._v("（默认值）使其自动确定。")])])]),e._v(" "),t("p",[t("code",[e._v("signature")]),e._v(" 参数是先前计算的数据签名，在 "),t("code",[e._v("signatureEncoding")]),e._v(" 中。 如果指定了 "),t("code",[e._v("signatureEncoding")]),e._v("，则 "),t("code",[e._v("signature")]),e._v(" 应该是字符串； 否则 "),t("code",[e._v("signature")]),e._v(" 应该是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("verify")]),e._v(" 对象在 "),t("code",[e._v("verify.verify()")]),e._v(" 被调用后不能再次使用。 多次调用 "),t("code",[e._v("verify.verify()")]),e._v(" 将导致抛出错误。")]),e._v(" "),t("p",[e._v("因为公钥可以从私钥导出，所以可以传递私钥而不是公钥。")]),e._v(" "),t("h3",{attrs:{id:"加密模块的方法和属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加密模块的方法和属性"}},[e._v("#")]),e._v(" 加密模块的方法和属性"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto-module-methods-and-properties",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"crypto-constants"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-constants"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.constants")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptoconstants",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_constants.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v6.3.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 包含用于加密和安全相关操作的常用常量的对象。 当前定义的特定常量在"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_constants_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("加密常量"),t("OutboundLink")],1),e._v("中进行了描述。")])]),e._v(" "),t("h4",{attrs:{id:"crypto-default-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-default-encoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.DEFAULT_ENCODING")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptodefault_encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_default_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.9.3弃用于: v10.0.0")]),e._v(" "),t("p",[e._v("用于可以采用字符串或"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("缓冲区"),t("OutboundLink")],1),e._v("的函数的默认编码。 默认值为 "),t("code",[e._v("'buffer'")]),e._v("，这使得方法默认为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 对象。")]),e._v(" "),t("p",[e._v("提供 "),t("code",[e._v("crypto.DEFAULT_ENCODING")]),e._v(" 机制是为了与期望 "),t("code",[e._v("'latin1'")]),e._v(" 作为默认编码的遗留程序向后兼容。")]),e._v(" "),t("p",[e._v("新应用程序应该期望默认值为 "),t("code",[e._v("'buffer'")]),e._v("。")]),e._v(" "),t("p",[e._v("此属性已弃用。")]),e._v(" "),t("h4",{attrs:{id:"crypto-fips"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-fips"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.fips")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptofips",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_fips.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v6.0.0弃用于: v10.0.0")]),e._v(" "),t("p",[e._v("用于检查和控制当前是否正在使用符合 FIPS 的加密提供程序的属性。 设置为 true 需要 Node.js 的 FIPS 构建。")]),e._v(" "),t("p",[e._v("此属性已弃用。 请改用 "),t("code",[e._v("crypto.setFips()")]),e._v(" 和 "),t("code",[e._v("crypto.getFips()")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createcipher-algorithm-password-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createcipher-algorithm-password-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createCipher(algorithm, password[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatecipheralgorithm-password-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createcipher_algorithm_password_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("password")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-cipher",target:"_blank",rel:"noopener noreferrer"}},[t("Cipher",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回使用给定 "),t("code",[e._v("algorithm")]),e._v(" 和 "),t("code",[e._v("password")]),e._v(" 的 "),t("code",[e._v("Cipher")]),e._v(" 对象。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 参数控制流的行为，并且是可选的，除非使用 CCM 或 OCB 模式的加密（例如 "),t("code",[e._v("'aes-128-ccm'")]),e._v("）。 在这种情况下，需要 "),t("code",[e._v("authTagLength")]),e._v(" 选项并指定身份验证标签的长度（以字节为单位），请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ccm_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("CCM 模式"),t("OutboundLink")],1),e._v("。 在 GCM 模式下，"),t("code",[e._v("authTagLength")]),e._v(" 选项不是必需的，但可用于设置 "),t("code",[e._v("getAuthTag()")]),e._v(" 将返回的身份验证标签的长度，默认为 16 字节。")]),e._v(" "),t("p",[t("code",[e._v("algorithm")]),e._v(" 依赖于 OpenSSL，例如 "),t("code",[e._v("'aes192'")]),e._v(" 等。 在 OpenSSL 的最新版本中，"),t("code",[e._v("openssl list -cipher-algorithms")]),e._v("（在 OpenSSL 的旧版本中为 "),t("code",[e._v("openssl list-cipher-algorithms")]),e._v("）将显示可用的加密算法。")]),e._v(" "),t("p",[t("code",[e._v("password")]),e._v(" 用于派生密钥和初始化向量 (IV)。 该值必须是 "),t("code",[e._v("'latin1'")]),e._v(" 编码的字符串、"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("crypto.createCipher()")]),e._v(" 的实现使用 OpenSSL 函数 "),t("a",{attrs:{href:"http://url.nodejs.cn/d3vRBX",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("EVP_BytesToKey")]),t("OutboundLink")],1),e._v(" 派生密钥，摘要算法设置为 MD5，一次迭代，不加盐。 缺少盐允许字典攻击，因为相同的密码总是创建相同的密钥。 低迭代次数和非加密安全散列算法允许非常快速地测试密码。")]),e._v(" "),t("p",[e._v("根据 OpenSSL 建议使用更现代的算法而不是 "),t("a",{attrs:{href:"http://url.nodejs.cn/d3vRBX",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("EVP_BytesToKey")]),t("OutboundLink")],1),e._v("，建议开发人员使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_scrypt_password_salt_keylen_options_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.scrypt()")]),t("OutboundLink")],1),e._v(" 自行派生密钥和 IV，并使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createcipheriv_algorithm_key_iv_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createCipheriv()")]),t("OutboundLink")],1),e._v(" 创建 "),t("code",[e._v("Cipher")]),e._v(" 对象。 用户不应在 "),t("code",[e._v("crypto.createCipher()")]),e._v(" 中使用计数器模式（例如 CTR、GCM 或 CCM）的密码。 使用它们时会发出警告，以避免导致漏洞的 IV 重用风险。 对于在 GCM 中重用 IV 的情况，请参阅 "),t("a",{attrs:{href:"http://url.nodejs.cn/i26CfC",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nonce-Disrespecting Adversaries"),t("OutboundLink")],1),e._v(" 以获取详细信息。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createcipheriv-algorithm-key-iv-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createcipheriv-algorithm-key-iv-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createCipheriv(algorithm, key, iv[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatecipherivalgorithm-key-iv-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createcipheriv_algorithm_key_iv_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("iv")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[t("null",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-cipher",target:"_blank",rel:"noopener noreferrer"}},[t("Cipher",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用给定的 "),t("code",[e._v("algorithm")]),e._v("、"),t("code",[e._v("key")]),e._v(" 和初始化向量（"),t("code",[e._v("iv")]),e._v("）创建并返回 "),t("code",[e._v("Cipher")]),e._v(" 对象。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 参数控制流的行为，并且是可选的，除非使用 CCM 或 OCB 模式的加密（例如 "),t("code",[e._v("'aes-128-ccm'")]),e._v("）。 在这种情况下，需要 "),t("code",[e._v("authTagLength")]),e._v(" 选项并指定身份验证标签的长度（以字节为单位），请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ccm_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("CCM 模式"),t("OutboundLink")],1),e._v("。 在 GCM 模式下，"),t("code",[e._v("authTagLength")]),e._v(" 选项不是必需的，但可用于设置 "),t("code",[e._v("getAuthTag()")]),e._v(" 将返回的身份验证标签的长度，默认为 16 字节。")]),e._v(" "),t("p",[t("code",[e._v("algorithm")]),e._v(" 依赖于 OpenSSL，例如 "),t("code",[e._v("'aes192'")]),e._v(" 等。 在 OpenSSL 的最新版本中，"),t("code",[e._v("openssl list -cipher-algorithms")]),e._v("（在 OpenSSL 的旧版本中为 "),t("code",[e._v("openssl list-cipher-algorithms")]),e._v("）将显示可用的加密算法。")]),e._v(" "),t("p",[t("code",[e._v("key")]),e._v(" 是 "),t("code",[e._v("algorithm")]),e._v(" 使用的原始密钥，"),t("code",[e._v("iv")]),e._v(" 是"),t("a",{attrs:{href:"http://url.nodejs.cn/mMnDDL",target:"_blank",rel:"noopener noreferrer"}},[e._v("初始化向量"),t("OutboundLink")],1),e._v("。 两个参数都必须是 "),t("code",[e._v("'utf8'")]),e._v(" 编码的字符串、"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("缓冲区"),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。 "),t("code",[e._v("key")]),e._v(" 可以是 "),t("code",[e._v("secret")]),e._v(" 类型的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("。 如果加密不需要初始化向量，则 "),t("code",[e._v("iv")]),e._v(" 可以是 "),t("code",[e._v("null")]),e._v("。")]),e._v(" "),t("p",[e._v("初始化向量应该是不可预测的和独特的；理想情况下，它们将是加密随机的。 它们不必是机密的：IV 通常不加密就添加到密文消息中。 必须是不可预测的和独特的，但不必是机密的，这听起来可能有些矛盾。请记住，一定不能让攻击者提前预测到给定的 IV。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createdecipher-algorithm-password-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createdecipher-algorithm-password-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createDecipher(algorithm, password[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatedecipheralgorithm-password-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createdecipher_algorithm_password_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("password")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-decipher",target:"_blank",rel:"noopener noreferrer"}},[t("Decipher",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回使用给定的 "),t("code",[e._v("algorithm")]),e._v(" 和 "),t("code",[e._v("password")]),e._v("（键）的 "),t("code",[e._v("Decipher")]),e._v(" 对象。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 参数控制流的行为，并且是可选的，除非使用 CCM 或 OCB 模式的加密（例如 "),t("code",[e._v("'aes-128-ccm'")]),e._v("）。 在这种情况下，需要 "),t("code",[e._v("authTagLength")]),e._v(" 选项并指定身份验证标签的长度（以字节为单位），请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ccm_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("CCM 模式"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("crypto.createDecipher()")]),e._v(" 的实现使用 OpenSSL 函数 "),t("a",{attrs:{href:"http://url.nodejs.cn/d3vRBX",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("EVP_BytesToKey")]),t("OutboundLink")],1),e._v(" 派生密钥，摘要算法设置为 MD5，一次迭代，不加盐。 缺少盐允许字典攻击，因为相同的密码总是创建相同的密钥。 低迭代次数和非加密安全散列算法允许非常快速地测试密码。")]),e._v(" "),t("p",[e._v("根据 OpenSSL 建议使用更现代的算法而不是 "),t("a",{attrs:{href:"http://url.nodejs.cn/d3vRBX",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("EVP_BytesToKey")]),t("OutboundLink")],1),e._v("，建议开发人员使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_scrypt_password_salt_keylen_options_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.scrypt()")]),t("OutboundLink")],1),e._v(" 自行派生密钥和 IV，并使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createdecipheriv_algorithm_key_iv_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createDecipheriv()")]),t("OutboundLink")],1),e._v(" 创建 "),t("code",[e._v("Decipher")]),e._v(" 对象。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createdecipheriv-algorithm-key-iv-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createdecipheriv-algorithm-key-iv-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createDecipheriv(algorithm, key, iv[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatedecipherivalgorithm-key-iv-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createdecipheriv_algorithm_key_iv_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("iv")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[t("null",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-decipher",target:"_blank",rel:"noopener noreferrer"}},[t("Decipher",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回使用给定的 "),t("code",[e._v("algorithm")]),e._v("、"),t("code",[e._v("key")]),e._v(" 和初始化向量（"),t("code",[e._v("iv")]),e._v("）的 "),t("code",[e._v("Decipher")]),e._v(" 对象。")]),e._v(" "),t("p",[t("code",[e._v("options")]),e._v(" 参数控制流的行为，并且是可选的，除非使用 CCM 或 OCB 模式的加密（例如 "),t("code",[e._v("'aes-128-ccm'")]),e._v("）。 在这种情况下，需要 "),t("code",[e._v("authTagLength")]),e._v(" 选项并指定身份验证标签的长度（以字节为单位），请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ccm_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("CCM 模式"),t("OutboundLink")],1),e._v("。 在 GCM 模式下，"),t("code",[e._v("authTagLength")]),e._v(" 选项不是必需的，但可用于将接受的身份验证标签限制为指定的长度。")]),e._v(" "),t("p",[t("code",[e._v("algorithm")]),e._v(" 依赖于 OpenSSL，例如 "),t("code",[e._v("'aes192'")]),e._v(" 等。 在 OpenSSL 的最新版本中，"),t("code",[e._v("openssl list -cipher-algorithms")]),e._v("（在 OpenSSL 的旧版本中为 "),t("code",[e._v("openssl list-cipher-algorithms")]),e._v("）将显示可用的加密算法。")]),e._v(" "),t("p",[t("code",[e._v("key")]),e._v(" 是 "),t("code",[e._v("algorithm")]),e._v(" 使用的原始密钥，"),t("code",[e._v("iv")]),e._v(" 是"),t("a",{attrs:{href:"http://url.nodejs.cn/mMnDDL",target:"_blank",rel:"noopener noreferrer"}},[e._v("初始化向量"),t("OutboundLink")],1),e._v("。 两个参数都必须是 "),t("code",[e._v("'utf8'")]),e._v(" 编码的字符串、"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("缓冲区"),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。 "),t("code",[e._v("key")]),e._v(" 可以是 "),t("code",[e._v("secret")]),e._v(" 类型的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("。 如果加密不需要初始化向量，则 "),t("code",[e._v("iv")]),e._v(" 可以是 "),t("code",[e._v("null")]),e._v("。")]),e._v(" "),t("p",[e._v("初始化向量应该是不可预测的和独特的；理想情况下，它们将是加密随机的。 它们不必是机密的：IV 通常不加密就添加到密文消息中。 必须是不可预测的和独特的，但不必是机密的，这听起来可能有些矛盾。请记住，一定不能让攻击者提前预测到给定的 IV。")]),e._v(" "),t("h4",{attrs:{id:"crypto-creatediffiehellman-prime-primeencoding-generator-generatorencoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-creatediffiehellman-prime-primeencoding-generator-generatorencoding"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createDiffieHellman(prime[, primeEncoding][, generator][, generatorEncoding])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatediffiehellmanprime-primeencoding-generator-generatorencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("prime")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("primeEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("prime")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("generator")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("2")])]),e._v(" "),t("li",[t("code",[e._v("generatorEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("generator")]),e._v(" 字符串的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_buffers_and_character_encodings",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-diffiehellman",target:"_blank",rel:"noopener noreferrer"}},[t("DiffieHellman",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用提供的 "),t("code",[e._v("prime")]),e._v(" 和可选的特定 "),t("code",[e._v("generator")]),e._v(" 创建 "),t("code",[e._v("DiffieHellman")]),e._v(" 密钥交换对象。")]),e._v(" "),t("p",[t("code",[e._v("generator")]),e._v(" 参数可以是数字、字符串或 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。 如果未指定 "),t("code",[e._v("generator")]),e._v("，则使用值 "),t("code",[e._v("2")]),e._v("。")]),e._v(" "),t("p",[e._v("如果指定了 "),t("code",[e._v("primeEncoding")]),e._v("，则 "),t("code",[e._v("prime")]),e._v(" 应该是字符串；否则应为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("p",[e._v("如果指定了 "),t("code",[e._v("generatorEncoding")]),e._v("，则 "),t("code",[e._v("generator")]),e._v(" 应该是字符串；否则应为数字 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("、"),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"crypto-creatediffiehellman-primelength-generator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-creatediffiehellman-primelength-generator"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createDiffieHellman(primeLength[, generator])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatediffiehellmanprimelength-generator",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_creatediffiehellman_primelength_generator.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("primeLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("generator")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("2")])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-diffiehellman",target:"_blank",rel:"noopener noreferrer"}},[t("DiffieHellman",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建 "),t("code",[e._v("DiffieHellman")]),e._v(" 密钥交换对象并使用可选的特定数字 "),t("code",[e._v("generator")]),e._v(" 生成 "),t("code",[e._v("primeLength")]),e._v(" 位的质数。 如果未指定 "),t("code",[e._v("generator")]),e._v("，则使用值 "),t("code",[e._v("2")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"crypto-creatediffiehellmangroup-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-creatediffiehellmangroup-name"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createDiffieHellmanGroup(name)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatediffiehellmangroupname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_creatediffiehellmangroup_name.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.9.3")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("name")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-diffiehellmangroup",target:"_blank",rel:"noopener noreferrer"}},[t("DiffieHellmanGroup",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_getdiffiehellman_groupname",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getDiffieHellman()")]),t("OutboundLink")],1),e._v(" 的别名")]),e._v(" "),t("h4",{attrs:{id:"crypto-createecdh-curvename"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createecdh-curvename"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createECDH(curveName)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreateecdhcurvename",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createecdh_curvename.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.14")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("curveName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-ecdh",target:"_blank",rel:"noopener noreferrer"}},[t("ECDH",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("curveName")]),e._v(" 字符串指定的预定义曲线创建椭圆曲线 Diffie-Hellman ("),t("code",[e._v("ECDH")]),e._v(") 密钥交换对象。 使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_getcurves",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getCurves()")]),t("OutboundLink")],1),e._v(" 获取可用曲线名称的列表。 在最近的 OpenSSL 版本中，"),t("code",[e._v("openssl ecparam -list_curves")]),e._v(" 还将显示每个可用椭圆曲线的名称和描述。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createhash-algorithm-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createhash-algorithm-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createHash(algorithm[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatehashalgorithm-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createhash_algorithm_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-hash",target:"_blank",rel:"noopener noreferrer"}},[t("Hash",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回 "),t("code",[e._v("Hash")]),e._v(" 对象，该对象可用于使用给定的 "),t("code",[e._v("algorithm")]),e._v(" 生成哈希摘要。 可选的 "),t("code",[e._v("options")]),e._v(" 参数控制流的行为。 对于 XOF 哈希函数（例如 "),t("code",[e._v("'shake256'")]),e._v("），可以使用 "),t("code",[e._v("outputLength")]),e._v(" 选项指定所需的输出长度（以字节为单位）。")]),e._v(" "),t("p",[t("code",[e._v("algorithm")]),e._v(" 取决于平台上 OpenSSL 版本支持的可用算法。 例如 "),t("code",[e._v("'sha256'")]),e._v("、"),t("code",[e._v("'sha512'")]),e._v(" 等。 在 OpenSSL 的最新版本中，"),t("code",[e._v("openssl list -digest-algorithms")]),e._v("（在 OpenSSL 的旧版本中为 "),t("code",[e._v("openssl list-message-digest-algorithms")]),e._v("）将显示可用的摘要算法。")]),e._v(" "),t("p",[e._v("示例：生成文件的 sha256 总和")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const filename = process.argv[2];\nconst crypto = require('crypto');\nconst fs = require('fs');\n\nconst hash = crypto.createHash('sha256');\n\nconst input = fs.createReadStream(filename);\ninput.on('readable', () => {\n  // 哈希流只生成\n  // 一个元素。\n  const data = input.read();\n  if (data)\n    hash.update(data);\n  else {\n    console.log(`${hash.digest('hex')} ${filename}`);\n  }\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("h4",{attrs:{id:"crypto-createhmac-algorithm-key-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createhmac-algorithm-key-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createHmac(algorithm, key[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatehmacalgorithm-key-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createhmac_algorithm_key_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_transform_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.transform")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-hmac",target:"_blank",rel:"noopener noreferrer"}},[t("Hmac",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回使用给定的 "),t("code",[e._v("algorithm")]),e._v(" 和 "),t("code",[e._v("key")]),e._v(" 的 "),t("code",[e._v("Hmac")]),e._v(" 对象。 可选的 "),t("code",[e._v("options")]),e._v(" 参数控制流的行为。")]),e._v(" "),t("p",[t("code",[e._v("algorithm")]),e._v(" 取决于平台上 OpenSSL 版本支持的可用算法。 例如 "),t("code",[e._v("'sha256'")]),e._v("、"),t("code",[e._v("'sha512'")]),e._v(" 等。 在 OpenSSL 的最新版本中，"),t("code",[e._v("openssl list -digest-algorithms")]),e._v("（在 OpenSSL 的旧版本中为 "),t("code",[e._v("openssl list-message-digest-algorithms")]),e._v("）将显示可用的摘要算法。")]),e._v(" "),t("p",[t("code",[e._v("key")]),e._v(" 是用于生成加密 HMAC 哈希的 HMAC 密钥。 如果是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则其类型必须是 "),t("code",[e._v("secret")]),e._v("。")]),e._v(" "),t("p",[e._v("示例：生成文件的 sha256 HMAC")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const filename = process.argv[2];\nconst crypto = require('crypto');\nconst fs = require('fs');\n\nconst hmac = crypto.createHmac('sha256', 'a secret');\n\nconst input = fs.createReadStream(filename);\ninput.on('readable', () => {\n  // 哈希流只生成\n  // 一个元素。\n  const data = input.read();\n  if (data)\n    hmac.update(data);\n  else {\n    console.log(`${hmac.digest('hex')} ${filename}`);\n  }\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("h4",{attrs:{id:"crypto-createprivatekey-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createprivatekey-key"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createPrivateKey(key)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreateprivatekeykey",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createprivatekey_key.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.6.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 密钥材料，采用 PEM 或 DER 格式。")]),e._v(" "),t("li",[t("code",[e._v("format")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pem'")]),e._v(" 或 "),t("code",[e._v("'der'")]),e._v("。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("'pem'")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("type")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pkcs1'")]),e._v("、"),t("code",[e._v("'pkcs8'")]),e._v(" 或 "),t("code",[e._v("'sec1'")]),e._v("。 仅当 "),t("code",[e._v("format")]),e._v(" 为 "),t("code",[e._v("'der'")]),e._v(" 时才需要此选项，否则将被忽略。")]),e._v(" "),t("li",[t("code",[e._v("passphrase")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 用于解密的密码。")])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回包含私钥的新密钥对象。 如果 "),t("code",[e._v("key")]),e._v(" 是字符串或 "),t("code",[e._v("Buffer")]),e._v("，则假定 "),t("code",[e._v("format")]),e._v(" 是 "),t("code",[e._v("'pem'")]),e._v("；否则，"),t("code",[e._v("key")]),e._v(" 必须是具有上述属性的对象。")]),e._v(" "),t("p",[e._v("如果私钥被加密，则必须指定 "),t("code",[e._v("passphrase")]),e._v("。 密码的长度限制为 1024 字节。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createpublickey-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createpublickey-key"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createPublicKey(key)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatepublickeykey",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createpublickey_key.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("format")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pem'")]),e._v(" 或 "),t("code",[e._v("'der'")]),e._v("。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("'pem'")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("type")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'pkcs1'")]),e._v(" 或 "),t("code",[e._v("'spki'")]),e._v("。 仅当 "),t("code",[e._v("format")]),e._v(" 为 "),t("code",[e._v("'der'")]),e._v(" 时才需要此选项。")])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回包含公钥的新密钥对象。 如果 "),t("code",[e._v("key")]),e._v(" 是字符串或 "),t("code",[e._v("Buffer")]),e._v("，则假定 "),t("code",[e._v("format")]),e._v(" 是 "),t("code",[e._v("'pem'")]),e._v("； 如果 "),t("code",[e._v("key")]),e._v(" 是类型为 "),t("code",[e._v("'private'")]),e._v(" 的 "),t("code",[e._v("KeyObject")]),e._v("，则公钥来自给定的私钥； 否则，"),t("code",[e._v("key")]),e._v(" 必须是具有上述属性的对象。")]),e._v(" "),t("p",[e._v("如果格式为 "),t("code",[e._v("'pem'")]),e._v("，则 "),t("code",[e._v("'key'")]),e._v(" 也可能是 X.509 证书。")]),e._v(" "),t("p",[e._v("因为公钥可以从私钥导出，所以可以传递私钥而不是公钥。 在这种情况下，此函数的行为就像 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createprivatekey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPrivateKey()")]),t("OutboundLink")],1),e._v(" 已被调用，除了返回的 "),t("code",[e._v("KeyObject")]),e._v(" 的类型将为 "),t("code",[e._v("'public'")]),e._v(" 并且无法从返回的 "),t("code",[e._v("KeyObject")]),e._v(" 中提取私钥。 同样，如果给定了类型为 "),t("code",[e._v("'private'")]),e._v(" 的 "),t("code",[e._v("KeyObject")]),e._v("，则新的类型为 "),t("code",[e._v("'public'")]),e._v(" 的 "),t("code",[e._v("KeyObject")]),e._v(" 将被返回，并且无法从返回的对象中提取私钥。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createsecretkey-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createsecretkey-key"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createSecretKey(key)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatesecretkeykey",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createsecretkey_key.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.6.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回新的密钥对象，其中包含用于对称加密或 "),t("code",[e._v("Hmac")]),e._v(" 的密钥。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createsign-algorithm-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createsign-algorithm-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createSign(algorithm[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreatesignalgorithm-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createsign_algorithm_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.92")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_writable_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.Writable")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-sign",target:"_blank",rel:"noopener noreferrer"}},[t("Sign",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回使用给定的 "),t("code",[e._v("algorithm")]),e._v(" 的 "),t("code",[e._v("Sign")]),e._v(" 对象。 使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_gethashes",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getHashes()")]),t("OutboundLink")],1),e._v(" 获取可用摘要算法的名称。 可选的 "),t("code",[e._v("options")]),e._v(" 参数控制 "),t("code",[e._v("stream.Writable")]),e._v(" 行为。")]),e._v(" "),t("p",[e._v("在某些情况下，可以使用签名算法的名称（例如 "),t("code",[e._v("'RSA-SHA256'")]),e._v("）而不是摘要算法来创建 "),t("code",[e._v("Sign")]),e._v(" 实例。 这将使用相应的摘要算法。 这不适用于所有签名算法，例如 "),t("code",[e._v("'ecdsa-with-SHA256'")]),e._v("，因此最好始终使用摘要算法名称。")]),e._v(" "),t("h4",{attrs:{id:"crypto-createverify-algorithm-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-createverify-algorithm-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.createVerify(algorithm[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptocreateverifyalgorithm-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_createverify_algorithm_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.1.92")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_new_stream_writable_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("stream.Writable")]),e._v(" 选项"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-verify",target:"_blank",rel:"noopener noreferrer"}},[t("Verify",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建并返回使用给定算法的 "),t("code",[e._v("Verify")]),e._v(" 对象。 使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_gethashes",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getHashes()")]),t("OutboundLink")],1),e._v(" 获取可用签名算法的名称数组。 可选的 "),t("code",[e._v("options")]),e._v(" 参数控制 "),t("code",[e._v("stream.Writable")]),e._v(" 行为。")]),e._v(" "),t("p",[e._v("在某些情况下，可以使用签名算法的名称（例如 "),t("code",[e._v("'RSA-SHA256'")]),e._v("）而不是摘要算法来创建 "),t("code",[e._v("Verify")]),e._v(" 实例。 这将使用相应的摘要算法。 这不适用于所有签名算法，例如 "),t("code",[e._v("'ecdsa-with-SHA256'")]),e._v("，因此最好始终使用摘要算法名称。")]),e._v(" "),t("h4",{attrs:{id:"crypto-diffiehellman-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-diffiehellman-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.diffieHellman(options)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptodiffiehellmanoptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_diffiehellman_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.17.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("options")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("privateKey")]),e._v(": "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("publicKey")]),e._v(": "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("基于 "),t("code",[e._v("privateKey")]),e._v(" 和 "),t("code",[e._v("publicKey")]),e._v(" 计算 Diffie-Hellman 秘密。 两个密钥必须具有相同的 "),t("code",[e._v("asymmetricKeyType")]),e._v("，它必须是 "),t("code",[e._v("'dh'")]),e._v("（对于 Diffie-Hellman）、"),t("code",[e._v("'ec'")]),e._v("（对于 ECDH）、"),t("code",[e._v("'x448'")]),e._v(" 或 "),t("code",[e._v("'x25519'")]),e._v("（对于 ECDH-ES）之一。")]),e._v(" "),t("h4",{attrs:{id:"crypto-generatekeypair-type-options-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-generatekeypair-type-options-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.generateKeyPair(type, options, callback)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptogeneratekeypairtype-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_generatekeypair_type_options_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("type")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'rsa'")]),e._v("、"),t("code",[e._v("'dsa'")]),e._v("、"),t("code",[e._v("'ec'")]),e._v("、"),t("code",[e._v("'ed25519'")]),e._v("、"),t("code",[e._v("'ed448'")]),e._v("、"),t("code",[e._v("'x25519'")]),e._v("、"),t("code",[e._v("'x448'")]),e._v(" 或 "),t("code",[e._v("'dh'")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("modulusLength")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 以位为单位的密钥大小（RSA、DSA）。")]),e._v(" "),t("li",[t("code",[e._v("publicExponent")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 公共指数 (RSA)。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("0x10001")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("divisorLength")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("q")]),e._v(" 的比特大小 (DSA)。")]),e._v(" "),t("li",[t("code",[e._v("namedCurve")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 要使用的曲线名称 (EC)。")]),e._v(" "),t("li",[t("code",[e._v("prime")]),e._v(": "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 素数参数 (DH)。")]),e._v(" "),t("li",[t("code",[e._v("primeLength")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 以比特为单位的质数长度 (DH)。")]),e._v(" "),t("li",[t("code",[e._v("generator")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 自定义生成器 (DH)。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("2")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("groupName")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" Diffie-Hellman 组名 (DH)。 参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_getdiffiehellman_groupname",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getDiffieHellman()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("publicKeyEncoding")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_keyobject_export_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("keyObject.export()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("privateKeyEncoding")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_keyobject_export_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("keyObject.export()")]),t("OutboundLink")],1),e._v("。")])])]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("err")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("publicKey")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("privateKey")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)])])])]),e._v(" "),t("p",[e._v("生成给定 "),t("code",[e._v("type")]),e._v(" 的新非对称密钥对。 目前支持 RSA、DSA、EC、Ed25519、Ed448、X25519、X448 和 DH。")]),e._v(" "),t("p",[e._v("如果指定了 "),t("code",[e._v("publicKeyEncoding")]),e._v(" 或 "),t("code",[e._v("privateKeyEncoding")]),e._v("，则此函数的行为就像对其结果调用了 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_keyobject_export_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("keyObject.export()")]),t("OutboundLink")],1),e._v("。 否则，密钥的相应部分将作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v(" 返回。")]),e._v(" "),t("p",[e._v("建议将公钥编码为 "),t("code",[e._v("'spki'")]),e._v("，私钥编码为 "),t("code",[e._v("'pkcs8'")]),e._v("，并加密以进行长期存储：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { generateKeyPair } = require('crypto');\ngenerateKeyPair('rsa', {\n  modulusLength: 4096,\n  publicKeyEncoding: {\n    type: 'spki',\n    format: 'pem'\n  },\n  privateKeyEncoding: {\n    type: 'pkcs8',\n    format: 'pem',\n    cipher: 'aes-256-cbc',\n    passphrase: 'top secret'\n  }\n}, (err, publicKey, privateKey) => {\n  // 处理错误并使用生成的密钥对。\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("p",[e._v("完成后，"),t("code",[e._v("callback")]),e._v(" 将被调用，"),t("code",[e._v("err")]),e._v(" 设置为 "),t("code",[e._v("undefined")]),e._v("，"),t("code",[e._v("publicKey")]),e._v(" / "),t("code",[e._v("privateKey")]),e._v(" 代表生成的密钥对。")]),e._v(" "),t("p",[e._v("如果此方法作为其 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/util.html#util_util_promisify_original",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("util.promisify()")]),t("OutboundLink")],1),e._v(" 版本被调用，则其将为具有 "),t("code",[e._v("publicKey")]),e._v(" 和 "),t("code",[e._v("privateKey")]),e._v(" 属性的 "),t("code",[e._v("Object")]),e._v(" 返回 "),t("code",[e._v("Promise")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"crypto-generatekeypairsync-type-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-generatekeypairsync-type-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.generateKeyPairSync(type, options)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptogeneratekeypairsynctype-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_generatekeypairsync_type_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("type")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 必须是 "),t("code",[e._v("'rsa'")]),e._v("、"),t("code",[e._v("'dsa'")]),e._v("、"),t("code",[e._v("'ec'")]),e._v("、"),t("code",[e._v("'ed25519'")]),e._v("、"),t("code",[e._v("'ed448'")]),e._v("、"),t("code",[e._v("'x25519'")]),e._v("、"),t("code",[e._v("'x448'")]),e._v(" 或 "),t("code",[e._v("'dh'")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("modulusLength")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 以位为单位的密钥大小（RSA、DSA）。")]),e._v(" "),t("li",[t("code",[e._v("publicExponent")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 公共指数 (RSA)。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("0x10001")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("divisorLength")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("q")]),e._v(" 的比特大小 (DSA)。")]),e._v(" "),t("li",[t("code",[e._v("namedCurve")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 要使用的曲线名称 (EC)。")]),e._v(" "),t("li",[t("code",[e._v("prime")]),e._v(": "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 素数参数 (DH)。")]),e._v(" "),t("li",[t("code",[e._v("primeLength")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 以比特为单位的质数长度 (DH)。")]),e._v(" "),t("li",[t("code",[e._v("generator")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 自定义生成器 (DH)。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("2")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("groupName")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" Diffie-Hellman 组名 (DH)。 参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_getdiffiehellman_groupname",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getDiffieHellman()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("publicKeyEncoding")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_keyobject_export_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("keyObject.export()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("privateKeyEncoding")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_keyobject_export_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("keyObject.export()")]),t("OutboundLink")],1),e._v("。")])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("publicKey")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("privateKey")]),e._v(": "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)])])])]),e._v(" "),t("p",[e._v("生成给定 "),t("code",[e._v("type")]),e._v(" 的新非对称密钥对。 目前支持 RSA、DSA、EC、Ed25519、Ed448、X25519、X448 和 DH。")]),e._v(" "),t("p",[e._v("如果指定了 "),t("code",[e._v("publicKeyEncoding")]),e._v(" 或 "),t("code",[e._v("privateKeyEncoding")]),e._v("，则此函数的行为就像对其结果调用了 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_keyobject_export_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("keyObject.export()")]),t("OutboundLink")],1),e._v("。 否则，密钥的相应部分将作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v(" 返回。")]),e._v(" "),t("p",[e._v("对公钥进行编码时，建议使用"),t("code",[e._v("'spki'")]),e._v("。 对私钥进行编码时，建议使用强密码的"),t("code",[e._v("'pkcs8'")]),e._v("，并对密码进行保密。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { generateKeyPairSync } = require('crypto');\nconst { publicKey, privateKey } = generateKeyPairSync('rsa', {\n  modulusLength: 4096,\n  publicKeyEncoding: {\n    type: 'spki',\n    format: 'pem'\n  },\n  privateKeyEncoding: {\n    type: 'pkcs8',\n    format: 'pem',\n    cipher: 'aes-256-cbc',\n    passphrase: 'top secret'\n  }\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("p",[e._v("返回值 "),t("code",[e._v("{ publicKey, privateKey }")]),e._v(" 表示生成的密钥对。 选择 PEM 编码时，相应的密钥将是字符串，否则它将是包含编码为 DER 的数据的缓冲区。")]),e._v(" "),t("h4",{attrs:{id:"crypto-getciphers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-getciphers"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.getCiphers()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptogetciphers",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_getciphers.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.9.3")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[e._v("<string[]>"),t("OutboundLink")],1),e._v(" 包含支持的密码算法名称的数组。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const ciphers = crypto.getCiphers();\nconsole.log(ciphers); // ['aes-128-cbc', 'aes-128-ccm', ...]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h4",{attrs:{id:"crypto-getcurves"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-getcurves"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.getCurves()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptogetcurves",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_getcurves.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v2.3.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[e._v("<string[]>"),t("OutboundLink")],1),e._v(" 包含支持的椭圆曲线名称的数组。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const curves = crypto.getCurves();\nconsole.log(curves); // ['Oakley-EC2N-3', 'Oakley-EC2N-4', ...]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h4",{attrs:{id:"crypto-getdiffiehellman-groupname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-getdiffiehellman-groupname"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.getDiffieHellman(groupName)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptogetdiffiehellmangroupname",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_getdiffiehellman_groupname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.7.5")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("groupName")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-diffiehellmangroup",target:"_blank",rel:"noopener noreferrer"}},[t("DiffieHellmanGroup",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("创建预定义的 "),t("code",[e._v("DiffieHellmanGroup")]),e._v(" 密钥交换对象。 支持的组是："),t("code",[e._v("'modp1'")]),e._v("、"),t("code",[e._v("'modp2'")]),e._v("、"),t("code",[e._v("'modp5'")]),e._v("（在 "),t("a",{attrs:{href:"http://url.nodejs.cn/6ouCbA",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 2412"),t("OutboundLink")],1),e._v(" 中定义，但请参阅"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_support_for_weak_or_compromised_algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("注意事项"),t("OutboundLink")],1),e._v("）和 "),t("code",[e._v("'modp14'")]),e._v("、"),t("code",[e._v("'modp15'")]),e._v("、"),t("code",[e._v("'modp16'")]),e._v("、"),t("code",[e._v("'modp17'")]),e._v("、"),t("code",[e._v("'modp18'")]),e._v("（在 "),t("a",{attrs:{href:"http://url.nodejs.cn/m8pGEe",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 3526"),t("OutboundLink")],1),e._v(" 中定义）。 返回的对象模仿 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_creatediffiehellman_prime_primeencoding_generator_generatorencoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createDiffieHellman()")]),t("OutboundLink")],1),e._v(" 创建的对象的接口，但不允许更改键（例如，使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_diffiehellman_setpublickey_publickey_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("diffieHellman.setPublicKey()")]),t("OutboundLink")],1),e._v("）。 使用这种方法的优点是双方不必事先生成或交换组模数，既节省了处理器时间又节省了通信时间。")]),e._v(" "),t("p",[e._v("示例（获取共享密钥）：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst alice = crypto.getDiffieHellman('modp14');\nconst bob = crypto.getDiffieHellman('modp14');\n\nalice.generateKeys();\nbob.generateKeys();\n\nconst aliceSecret = alice.computeSecret(bob.getPublicKey(), null, 'hex');\nconst bobSecret = bob.computeSecret(alice.getPublicKey(), null, 'hex');\n\n/* aliceSecret 和 bobSecret 应该是一样的 */\nconsole.log(aliceSecret === bobSecret);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("h4",{attrs:{id:"crypto-getfips"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-getfips"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.getFips()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptogetfips",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_getfips.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.0.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 当且仅当当前使用符合 FIPS 的加密提供程序时为 "),t("code",[e._v("1")]),e._v("，否则为 "),t("code",[e._v("0")]),e._v("。 未来的语义化主版本可能会将此 API 的返回类型更改为 "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v("。")])]),e._v(" "),t("h4",{attrs:{id:"crypto-gethashes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-gethashes"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.getHashes()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptogethashes",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_gethashes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.9.3")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[e._v("<string[]>"),t("OutboundLink")],1),e._v(" 支持的哈希算法名称的数组，例如 "),t("code",[e._v("'RSA-SHA256'")]),e._v('。 哈希算法也称为"摘要"算法。')])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const hashes = crypto.getHashes();\nconsole.log(hashes); // ['DSA', 'DSA-SHA', 'DSA-SHA1', ...]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h4",{attrs:{id:"crypto-pbkdf2-password-salt-iterations-keylen-digest-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-pbkdf2-password-salt-iterations-keylen-digest-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.pbkdf2(password, salt, iterations, keylen, digest, callback)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptopbkdf2password-salt-iterations-keylen-digest-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_pbkdf2_password_salt_iterations_keylen_digest_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("password")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("salt")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("iterations")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("keylen")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("digest")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("err")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("derivedKey")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])])])]),e._v(" "),t("p",[e._v("提供异步基于密码的密钥派生函数 2 (PBKDF2) 实现。 应用由 "),t("code",[e._v("digest")]),e._v(" 指定的选定 HMAC 摘要算法以从 "),t("code",[e._v("password")]),e._v("、"),t("code",[e._v("salt")]),e._v(" 和 "),t("code",[e._v("iterations")]),e._v(" 导出请求字节长度 ("),t("code",[e._v("keylen")]),e._v(") 的密钥。")]),e._v(" "),t("p",[e._v("提供的 "),t("code",[e._v("callback")]),e._v(" 函数使用两个参数调用："),t("code",[e._v("err")]),e._v(" 和 "),t("code",[e._v("derivedKey")]),e._v("。 如果在派生密钥时发生错误，则设置 "),t("code",[e._v("err")]),e._v("；否则 "),t("code",[e._v("err")]),e._v(" 将是 "),t("code",[e._v("null")]),e._v("。 默认情况下，成功生成的 "),t("code",[e._v("derivedKey")]),e._v(" 将作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 传给回调。 如果任何输入参数指定了无效的值或类型，则会抛出错误。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("digest")]),e._v(" 是 "),t("code",[e._v("null")]),e._v("，则将使用 "),t("code",[e._v("'sha1'")]),e._v("。 此行为已弃用，请显式指定 "),t("code",[e._v("digest")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("iterations")]),e._v(" 参数必须是尽可能高的数字。 迭代次数越多，派生密钥就越安全，但需要更长的时间才能完成。")]),e._v(" "),t("p",[t("code",[e._v("salt")]),e._v(" 应该尽可能唯一。 建议盐是随机的，长度至少为 16 字节。 有关详细信息，请参阅 "),t("a",{attrs:{href:"http://url.nodejs.cn/DbTtwt",target:"_blank",rel:"noopener noreferrer"}},[e._v("NIST SP 800-132"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\ncrypto.pbkdf2('secret', 'salt', 100000, 64, 'sha512', (err, derivedKey) => {\n  if (err) throw err;\n  console.log(derivedKey.toString('hex'));  // '3745e48...08d59ae'\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[t("code",[e._v("crypto.DEFAULT_ENCODING")]),e._v(" 属性可用于更改 "),t("code",[e._v("derivedKey")]),e._v(" 传给回调的方式。 但是，此属性已被弃用，应避免使用。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\ncrypto.DEFAULT_ENCODING = 'hex';\ncrypto.pbkdf2('secret', 'salt', 100000, 512, 'sha512', (err, derivedKey) => {\n  if (err) throw err;\n  console.log(derivedKey);  // '3745e48...aa39b34'\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_gethashes",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getHashes()")]),t("OutboundLink")],1),e._v(" 检索支持的摘要函数数组。")]),e._v(" "),t("p",[e._v("此 API 使用 libuv 的线程池，这对某些应用程序可能会产生意外的负面性能影响；有关更多信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/cli.html#cli_uv_threadpool_size_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("UV_THREADPOOL_SIZE")]),t("OutboundLink")],1),e._v(" 文档。")]),e._v(" "),t("h4",{attrs:{id:"crypto-pbkdf2sync-password-salt-iterations-keylen-digest"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-pbkdf2sync-password-salt-iterations-keylen-digest"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.pbkdf2Sync(password, salt, iterations, keylen, digest)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptopbkdf2syncpassword-salt-iterations-keylen-digest",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_pbkdf2sync_password_salt_iterations_keylen_digest.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("password")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("salt")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("iterations")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("keylen")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("digest")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("提供同步的基于密码的密钥派生函数 2 (PBKDF2) 实现。 应用由 "),t("code",[e._v("digest")]),e._v(" 指定的选定 HMAC 摘要算法以从 "),t("code",[e._v("password")]),e._v("、"),t("code",[e._v("salt")]),e._v(" 和 "),t("code",[e._v("iterations")]),e._v(" 导出请求字节长度 ("),t("code",[e._v("keylen")]),e._v(") 的密钥。")]),e._v(" "),t("p",[e._v("如果发生错误，将抛出 "),t("code",[e._v("Error")]),e._v("，否则派生密钥将作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 返回。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("digest")]),e._v(" 是 "),t("code",[e._v("null")]),e._v("，则将使用 "),t("code",[e._v("'sha1'")]),e._v("。 此行为已弃用，请显式指定 "),t("code",[e._v("digest")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("iterations")]),e._v(" 参数必须是尽可能高的数字。 迭代次数越多，派生密钥就越安全，但需要更长的时间才能完成。")]),e._v(" "),t("p",[t("code",[e._v("salt")]),e._v(" 应该尽可能唯一。 建议盐是随机的，长度至少为 16 字节。 有关详细信息，请参阅 "),t("a",{attrs:{href:"http://url.nodejs.cn/DbTtwt",target:"_blank",rel:"noopener noreferrer"}},[e._v("NIST SP 800-132"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\nconst key = crypto.pbkdf2Sync('secret', 'salt', 100000, 64, 'sha512');\nconsole.log(key.toString('hex'));  // '3745e48...08d59ae'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[t("code",[e._v("crypto.DEFAULT_ENCODING")]),e._v(" 属性可用于更改返回 "),t("code",[e._v("derivedKey")]),e._v(" 的方式。 但是，此属性已被弃用，应避免使用。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\ncrypto.DEFAULT_ENCODING = 'hex';\nconst key = crypto.pbkdf2Sync('secret', 'salt', 100000, 512, 'sha512');\nconsole.log(key);  // '3745e48...aa39b34'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("可以使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_gethashes",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.getHashes()")]),t("OutboundLink")],1),e._v(" 检索支持的摘要函数数组。")]),e._v(" "),t("h4",{attrs:{id:"crypto-privatedecrypt-privatekey-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-privatedecrypt-privatekey-buffer"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.privateDecrypt(privateKey, buffer)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptoprivatedecryptprivatekey-buffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_privatedecrypt_privatekey_buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("privateKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("oaepHash")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 用于 OAEP 填充和 MGF1 的哈希函数。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("'sha1'")])]),e._v(" "),t("li",[t("code",[e._v("oaepLabel")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" 用于 OAEP 填充的标签。 如果未指定，则不使用标签。")]),e._v(" "),t("li",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#cryptoconstants",target:"_blank",rel:"noopener noreferrer"}},[e._v("<crypto.constants>"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("crypto.constants")]),e._v(" 中定义的可选填充值，可以是："),t("code",[e._v("crypto.constants.RSA_NO_PADDING")]),e._v("、"),t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v(" 或 "),t("code",[e._v("crypto.constants.RSA_PKCS1_OAEP_PADDING")]),e._v("。")])])]),e._v(" "),t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 带有解密内容的新 "),t("code",[e._v("Buffer")]),e._v("。")])]),e._v(" "),t("p",[e._v("用 "),t("code",[e._v("privateKey")]),e._v(" 解密 "),t("code",[e._v("buffer")]),e._v("。 "),t("code",[e._v("buffer")]),e._v(" 之前使用相应的公钥加密，例如使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_publicencrypt_key_buffer",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.publicEncrypt()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("privateKey")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("privateKey")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createprivatekey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPrivateKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入 "),t("code",[e._v("padding")]),e._v(" 属性。 否则，该函数使用 "),t("code",[e._v("RSA_PKCS1_OAEP_PADDING")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"crypto-privateencrypt-privatekey-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-privateencrypt-privatekey-buffer"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.privateEncrypt(privateKey, buffer)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptoprivateencryptprivatekey-buffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_privateencrypt_privatekey_buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("privateKey")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" PEM 编码的私钥。")]),e._v(" "),t("li",[t("code",[e._v("passphrase")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 可选的私钥密码。")]),e._v(" "),t("li",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#cryptoconstants",target:"_blank",rel:"noopener noreferrer"}},[e._v("<crypto.constants>"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("crypto.constants")]),e._v(" 中定义的可选填充值，可以是："),t("code",[e._v("crypto.constants.RSA_NO_PADDING")]),e._v(" 或 "),t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v("。")])])]),e._v(" "),t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 带有加密内容的新 "),t("code",[e._v("Buffer")]),e._v("。")])]),e._v(" "),t("p",[e._v("用 "),t("code",[e._v("privateKey")]),e._v(" 加密 "),t("code",[e._v("buffer")]),e._v("。 返回的数据可以使用相应的公钥解密，例如使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_publicdecrypt_key_buffer",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.publicDecrypt()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("privateKey")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("privateKey")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createprivatekey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPrivateKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入 "),t("code",[e._v("padding")]),e._v(" 属性。 否则，该函数使用 "),t("code",[e._v("RSA_PKCS1_PADDING")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"crypto-publicdecrypt-key-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-publicdecrypt-key-buffer"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.publicDecrypt(key, buffer)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptopublicdecryptkey-buffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_publicdecrypt_key_buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("passphrase")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 可选的私钥密码。")]),e._v(" "),t("li",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#cryptoconstants",target:"_blank",rel:"noopener noreferrer"}},[e._v("<crypto.constants>"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("crypto.constants")]),e._v(" 中定义的可选填充值，可以是："),t("code",[e._v("crypto.constants.RSA_NO_PADDING")]),e._v(" 或 "),t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v("。")])])]),e._v(" "),t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 带有解密内容的新 "),t("code",[e._v("Buffer")]),e._v("。")])]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("key")]),e._v("."),t("code",[e._v("buffer")]),e._v(" 解密 "),t("code",[e._v("buffer")]),e._v(" 之前使用相应的私钥加密，例如使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_privateencrypt_privatekey_buffer",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.privateEncrypt()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("key")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("key")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createpublickey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPublicKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入 "),t("code",[e._v("padding")]),e._v(" 属性。 否则，该函数使用 "),t("code",[e._v("RSA_PKCS1_PADDING")]),e._v("。")]),e._v(" "),t("p",[e._v("由于 RSA 公钥可以从私钥派生，因此可以传入私钥而不是公钥。")]),e._v(" "),t("h4",{attrs:{id:"crypto-publicencrypt-key-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-publicencrypt-key-buffer"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.publicEncrypt(key, buffer)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptopublicencryptkey-buffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_publicencrypt_key_buffer.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1),e._v(" PEM 编码的公钥或私钥。")]),e._v(" "),t("li",[t("code",[e._v("oaepHash")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 用于 OAEP 填充和 MGF1 的哈希函数。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("'sha1'")])]),e._v(" "),t("li",[t("code",[e._v("oaepLabel")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" 用于 OAEP 填充的标签。 如果未指定，则不使用标签。")]),e._v(" "),t("li",[t("code",[e._v("passphrase")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 可选的私钥密码。")]),e._v(" "),t("li",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#cryptoconstants",target:"_blank",rel:"noopener noreferrer"}},[e._v("<crypto.constants>"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("crypto.constants")]),e._v(" 中定义的可选填充值，可以是："),t("code",[e._v("crypto.constants.RSA_NO_PADDING")]),e._v("、"),t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v(" 或 "),t("code",[e._v("crypto.constants.RSA_PKCS1_OAEP_PADDING")]),e._v("。")])])]),e._v(" "),t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 带有加密内容的新 "),t("code",[e._v("Buffer")]),e._v("。")])]),e._v(" "),t("p",[e._v("用 "),t("code",[e._v("key")]),e._v(" 加密 "),t("code",[e._v("buffer")]),e._v(" 的内容，并返回带有加密内容的新 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。 返回的数据可以使用相应的私钥解密，例如使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_privatedecrypt_privatekey_buffer",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.privateDecrypt()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("key")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("key")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createpublickey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPublicKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入 "),t("code",[e._v("padding")]),e._v(" 属性。 否则，该函数使用 "),t("code",[e._v("RSA_PKCS1_OAEP_PADDING")]),e._v("。")]),e._v(" "),t("p",[e._v("由于 RSA 公钥可以从私钥派生，因此可以传入私钥而不是公钥。")]),e._v(" "),t("h4",{attrs:{id:"crypto-randombytes-size-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-randombytes-size-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.randomBytes(size[, callback])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptorandombytessize-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_randombytes_size_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("size")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("err")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("buf")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" 如果未提供 "),t("code",[e._v("callback")]),e._v(" 函数。")])]),e._v(" "),t("p",[e._v("生成加密强伪随机数据。 "),t("code",[e._v("size")]),e._v(" 参数是数字，指示要生成的字节数。")]),e._v(" "),t("p",[e._v("如果提供了 "),t("code",[e._v("callback")]),e._v(" 函数，则异步生成字节，并使用两个参数调用 "),t("code",[e._v("callback")]),e._v(" 函数："),t("code",[e._v("err")]),e._v(" 和 "),t("code",[e._v("buf")]),e._v("。 如果发生错误，则 "),t("code",[e._v("err")]),e._v(" 将是 "),t("code",[e._v("Error")]),e._v(" 对象；否则就是 "),t("code",[e._v("null")]),e._v("。 "),t("code",[e._v("buf")]),e._v(" 参数是包含生成字节的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 异步的\nconst crypto = require('crypto');\ncrypto.randomBytes(256, (err, buf) => {\n  if (err) throw err;\n  console.log(`${buf.length} bytes of random data: ${buf.toString('hex')}`);\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("p",[e._v("如果未提供 "),t("code",[e._v("callback")]),e._v(" 函数，则同步生成随机字节并作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 返回。 如果生成字节出现问题，则会抛出错误。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 同步的\nconst buf = crypto.randomBytes(256);\nconsole.log(\n  `${buf.length} bytes of random data: ${buf.toString('hex')}`);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[t("code",[e._v("crypto.randomBytes()")]),e._v(" 方法将不会完成，直到有足够的可用熵。 这通常不会超过几毫秒。 可以想象，生成随机字节的唯一时间可能会阻塞更长的时间是在启动之后，此时整个系统的熵仍然很低。")]),e._v(" "),t("p",[e._v("此 API 使用 libuv 的线程池，这对某些应用程序可能会产生意外的负面性能影响；有关更多信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/cli.html#cli_uv_threadpool_size_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("UV_THREADPOOL_SIZE")]),t("OutboundLink")],1),e._v(" 文档。")]),e._v(" "),t("p",[t("code",[e._v("crypto.randomBytes()")]),e._v(" 的异步版本是在单个线程池请求中执行的。 为了最大限度地减少线程池任务长度变化，在执行客户端请求时将大型 "),t("code",[e._v("randomBytes")]),e._v(" 请求分区。")]),e._v(" "),t("h4",{attrs:{id:"crypto-randomfillsync-buffer-offset-size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-randomfillsync-buffer-offset-size"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.randomFillSync(buffer[, offset][, size])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptorandomfillsyncbuffer-offset-size",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_randomfillsync_buffer_offset_size.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" 必须提供。")]),e._v(" "),t("li",[t("code",[e._v("offset")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("0")])]),e._v(" "),t("li",[t("code",[e._v("size")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("buffer.length - offset")])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" 对象作为 "),t("code",[e._v("buffer")]),e._v(" 参数传入。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_randomfill_buffer_offset_size_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.randomFill()")]),t("OutboundLink")],1),e._v(" 的同步版本。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const buf = Buffer.alloc(10);\nconsole.log(crypto.randomFillSync(buf).toString('hex'));\n\ncrypto.randomFillSync(buf, 5);\nconsole.log(buf.toString('hex'));\n\n// 以上等价于以下内容：\ncrypto.randomFillSync(buf, 5, 5);\nconsole.log(buf.toString('hex'));\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[e._v("任何 "),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v(" 实例都可以作为 "),t("code",[e._v("buffer")]),e._v(" 传入。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const a = new Uint32Array(10);\nconsole.log(Buffer.from(crypto.randomFillSync(a).buffer,\n                        a.byteOffset, a.byteLength).toString('hex'));\n\nconst b = new Float64Array(10);\nconsole.log(Buffer.from(crypto.randomFillSync(b).buffer,\n                        b.byteOffset, b.byteLength).toString('hex'));\n\nconst c = new DataView(new ArrayBuffer(10));\nconsole.log(Buffer.from(crypto.randomFillSync(c).buffer,\n                        c.byteOffset, c.byteLength).toString('hex'));\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h4",{attrs:{id:"crypto-randomfill-buffer-offset-size-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-randomfill-buffer-offset-size-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.randomFill(buffer[, offset][, size], callback)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptorandomfillbuffer-offset-size-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_randomfill_buffer_offset_size_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("buffer")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1),e._v(" 必须提供。")]),e._v(" "),t("li",[t("code",[e._v("offset")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("0")])]),e._v(" "),t("li",[t("code",[e._v("size")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("buffer.length - offset")])]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("function(err, buf) {}")]),e._v(".")])]),e._v(" "),t("p",[e._v("此函数类似于 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_randombytes_size_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.randomBytes()")]),t("OutboundLink")],1),e._v("，但要求第一个参数是将被填充的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v("。 它还要求传入回调。")]),e._v(" "),t("p",[e._v("如果未提供 "),t("code",[e._v("callback")]),e._v(" 函数，则会抛出错误。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const buf = Buffer.alloc(10);\ncrypto.randomFill(buf, (err, buf) => {\n  if (err) throw err;\n  console.log(buf.toString('hex'));\n});\n\ncrypto.randomFill(buf, 5, (err, buf) => {\n  if (err) throw err;\n  console.log(buf.toString('hex'));\n});\n\n// 以上等价于以下内容：\ncrypto.randomFill(buf, 5, 5, (err, buf) => {\n  if (err) throw err;\n  console.log(buf.toString('hex'));\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br")])]),t("p",[e._v("任何 "),t("code",[e._v("TypedArray")]),e._v(" 或 "),t("code",[e._v("DataView")]),e._v(" 实例都可以作为 "),t("code",[e._v("buffer")]),e._v(" 传入。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const a = new Uint32Array(10);\ncrypto.randomFill(a, (err, buf) => {\n  if (err) throw err;\n  console.log(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength)\n    .toString('hex'));\n});\n\nconst b = new Float64Array(10);\ncrypto.randomFill(b, (err, buf) => {\n  if (err) throw err;\n  console.log(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength)\n    .toString('hex'));\n});\n\nconst c = new DataView(new ArrayBuffer(10));\ncrypto.randomFill(c, (err, buf) => {\n  if (err) throw err;\n  console.log(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength)\n    .toString('hex'));\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br")])]),t("p",[e._v("此 API 使用 libuv 的线程池，这对某些应用程序可能会产生意外的负面性能影响；有关更多信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/cli.html#cli_uv_threadpool_size_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("UV_THREADPOOL_SIZE")]),t("OutboundLink")],1),e._v(" 文档。")]),e._v(" "),t("p",[t("code",[e._v("crypto.randomFill()")]),e._v(" 的异步版本是在单个线程池请求中执行的。 为了最大限度地减少线程池任务长度变化，在执行客户端请求时将大型 "),t("code",[e._v("randomFill")]),e._v(" 请求分区。")]),e._v(" "),t("h4",{attrs:{id:"crypto-randomint-min-max-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-randomint-min-max-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.randomInt([min, ]max[, callback])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptorandomintmin-max-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_randomint_min_max_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.19.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("min")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 随机范围的开始（包括）。 "),t("strong",[e._v("默认值")]),e._v(": "),t("code",[e._v("0")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("max")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 随机范围的结束（不包括）。")]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("function(err, n) {}")]),e._v(".")])]),e._v(" "),t("p",[e._v("返回随机整数 "),t("code",[e._v("n")]),e._v("，使得 "),t("code",[e._v("min <= n < max")]),e._v("。 这种实现避免了"),t("a",{attrs:{href:"http://url.nodejs.cn/ucie85",target:"_blank",rel:"noopener noreferrer"}},[e._v("模偏差"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("范围 ("),t("code",[e._v("max - min")]),e._v(") 必须小于 248。 "),t("code",[e._v("min")]),e._v(" 和 "),t("code",[e._v("max")]),e._v(" 必须是"),t("a",{attrs:{href:"http://url.nodejs.cn/km9EMH",target:"_blank",rel:"noopener noreferrer"}},[e._v("安全整数"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("如果不提供 "),t("code",[e._v("callback")]),e._v(" 函数，则同步生成随机整数。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 异步的\ncrypto.randomInt(3, (err, n) => {\n  if (err) throw err;\n  console.log(`Random number chosen from (0, 1, 2): ${n}`);\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 同步的\nconst n = crypto.randomInt(3);\nconsole.log(`Random number chosen from (0, 1, 2): ${n}`);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 带有 `min` 参数\nconst n = crypto.randomInt(1, 7);\nconsole.log(`The dice rolled: ${n}`);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("h4",{attrs:{id:"crypto-scrypt-password-salt-keylen-options-callback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-scrypt-password-salt-keylen-options-callback"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.scrypt(password, salt, keylen[, options], callback)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptoscryptpassword-salt-keylen-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_scrypt_password_salt_keylen_options_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("password")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("salt")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("keylen")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("cost")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" CPU/内存成本参数。 必须是大于 1 的 2 的幂。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("16384")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("blockSize")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 块大小参数。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("8")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("parallelization")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 并行化参数。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("1")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("N")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("cost")]),e._v(" 的别名。 只能指定两者之一。")]),e._v(" "),t("li",[t("code",[e._v("r")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("blockSize")]),e._v(" 的别名。 只能指定两者之一。")]),e._v(" "),t("li",[t("code",[e._v("p")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("parallelization")]),e._v(" 的别名。 只能指定两者之一。")]),e._v(" "),t("li",[t("code",[e._v("maxmem")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 内存上限。 当（大约）"),t("code",[e._v("128 * N * r > maxmem")]),e._v(" 时，则为错误。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("32 * 1024 * 1024")]),e._v("。")])])]),e._v(" "),t("li",[t("code",[e._v("callback")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[t("Function",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("err")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("derivedKey")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])])])]),e._v(" "),t("p",[e._v("提供异步 "),t("a",{attrs:{href:"http://url.nodejs.cn/757w2j",target:"_blank",rel:"noopener noreferrer"}},[e._v("scrypt"),t("OutboundLink")],1),e._v(" 实现。 Scrypt 是一个基于密码的密钥派生函数，其设计在计算和内存方面都非常昂贵，以使蛮力攻击毫无回报。")]),e._v(" "),t("p",[t("code",[e._v("salt")]),e._v(" 应该尽可能唯一。 建议盐是随机的，长度至少为 16 字节。 有关详细信息，请参阅 "),t("a",{attrs:{href:"http://url.nodejs.cn/DbTtwt",target:"_blank",rel:"noopener noreferrer"}},[e._v("NIST SP 800-132"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("callback")]),e._v(" 函数使用两个参数调用："),t("code",[e._v("err")]),e._v(" 和 "),t("code",[e._v("derivedKey")]),e._v("。 当密钥派生失败时 "),t("code",[e._v("err")]),e._v(" 为异常对象，否则 "),t("code",[e._v("err")]),e._v(" 为 "),t("code",[e._v("null")]),e._v("。 "),t("code",[e._v("derivedKey")]),e._v(" 作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 传给回调。")]),e._v(" "),t("p",[e._v("当任何输入参数指定无效值或类型时，将抛出异常。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n// 使用出厂默认设置。\ncrypto.scrypt('secret', 'salt', 64, (err, derivedKey) => {\n  if (err) throw err;\n  console.log(derivedKey.toString('hex'));  // '3745e48...08d59ae'\n});\n// 使用自定义 N 参数。必须是二的幂。\ncrypto.scrypt('secret', 'salt', 64, { N: 1024 }, (err, derivedKey) => {\n  if (err) throw err;\n  console.log(derivedKey.toString('hex'));  // '3745e48...aa39b34'\n});\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h4",{attrs:{id:"crypto-scryptsync-password-salt-keylen-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-scryptsync-password-salt-keylen-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.scryptSync(password, salt, keylen[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptoscryptsyncpassword-salt-keylen-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_scryptsync_password_salt_keylen_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("password")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("salt")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("keylen")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("cost")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" CPU/内存成本参数。 必须是大于 1 的 2 的幂。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("16384")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("blockSize")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 块大小参数。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("8")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("parallelization")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 并行化参数。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("1")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("N")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("cost")]),e._v(" 的别名。 只能指定两者之一。")]),e._v(" "),t("li",[t("code",[e._v("r")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("blockSize")]),e._v(" 的别名。 只能指定两者之一。")]),e._v(" "),t("li",[t("code",[e._v("p")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("parallelization")]),e._v(" 的别名。 只能指定两者之一。")]),e._v(" "),t("li",[t("code",[e._v("maxmem")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 内存上限。 当（大约）"),t("code",[e._v("128 * N * r > maxmem")]),e._v(" 时，则为错误。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("32 * 1024 * 1024")]),e._v("。")])])]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("提供同步的 "),t("a",{attrs:{href:"http://url.nodejs.cn/757w2j",target:"_blank",rel:"noopener noreferrer"}},[e._v("scrypt"),t("OutboundLink")],1),e._v(" 实现。 Scrypt 是一个基于密码的密钥派生函数，其设计在计算和内存方面都非常昂贵，以使蛮力攻击毫无回报。")]),e._v(" "),t("p",[t("code",[e._v("salt")]),e._v(" 应该尽可能唯一。 建议盐是随机的，长度至少为 16 字节。 有关详细信息，请参阅 "),t("a",{attrs:{href:"http://url.nodejs.cn/DbTtwt",target:"_blank",rel:"noopener noreferrer"}},[e._v("NIST SP 800-132"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("当密钥派生失败时抛出异常，否则派生的密钥作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 返回。")]),e._v(" "),t("p",[e._v("当任何输入参数指定无效值或类型时，将抛出异常。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n// 使用出厂默认设置。\nconst key1 = crypto.scryptSync('secret', 'salt', 64);\nconsole.log(key1.toString('hex'));  // '3745e48...08d59ae'\n// 使用自定义 N 参数。必须是二的幂。\nconst key2 = crypto.scryptSync('secret', 'salt', 64, { N: 1024 });\nconsole.log(key2.toString('hex'));  // '3745e48...aa39b34'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h4",{attrs:{id:"crypto-setengine-engine-flags"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-setengine-engine-flags"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.setEngine(engine[, flags])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptosetengineengine-flags",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_setengine_engine_flags.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v0.11.11")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("engine")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("flags")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#cryptoconstants",target:"_blank",rel:"noopener noreferrer"}},[e._v("<crypto.constants>"),t("OutboundLink")],1),e._v(" "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("crypto.constants.ENGINE_METHOD_ALL")])])]),e._v(" "),t("p",[e._v("为部分或所有 OpenSSL 功能（由标志选择）加载并设置 "),t("code",[e._v("engine")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("engine")]),e._v(" 可以是 id 或引擎共享库的路径。")]),e._v(" "),t("p",[e._v("可选的 "),t("code",[e._v("flags")]),e._v(" 参数默认使用 "),t("code",[e._v("ENGINE_METHOD_ALL")]),e._v("。 "),t("code",[e._v("flags")]),e._v(" 是采用以下标志之一或混合的位字段（在 "),t("code",[e._v("crypto.constants")]),e._v(" 中定义）：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_RSA")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_DSA")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_DH")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_RAND")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_EC")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_CIPHERS")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_DIGESTS")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_PKEY_METHS")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_PKEY_ASN1_METHS")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_ALL")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_NONE")])])]),e._v(" "),t("p",[e._v("以下标志在 OpenSSL-1.1.0 中已弃用。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_ECDH")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_ECDSA")])]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.ENGINE_METHOD_STORE")])])]),e._v(" "),t("h4",{attrs:{id:"crypto-setfips-bool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-setfips-bool"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.setFips(bool)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptosetfipsbool",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_setfips_bool.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("bool")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("true")]),e._v(" 启用 FIPS 模式。")])]),e._v(" "),t("p",[e._v("在启用 FIPS 的 Node.js 构建中启用符合 FIPS 的加密提供程序。 如果 FIPS 模式不可用，则会抛出错误。")]),e._v(" "),t("h4",{attrs:{id:"crypto-sign-algorithm-data-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-sign-algorithm-data-key"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.sign(algorithm, data, key)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptosignalgorithm-data-key",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_sign_algorithm_data_key.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[t("null",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/8ym6ow",target:"_blank",rel:"noopener noreferrer"}},[t("undefined",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用给定的私钥和算法计算并返回 "),t("code",[e._v("data")]),e._v(" 的签名。 如果 "),t("code",[e._v("algorithm")]),e._v(" 是 "),t("code",[e._v("null")]),e._v(" 或 "),t("code",[e._v("undefined")]),e._v("，则算法取决于密钥类型（尤其是 Ed25519 和 Ed448）。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("key")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("key")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createprivatekey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPrivateKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入以下额外属性：")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("dsaEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 对于 DSA 和 ECDSA，此选项指定生成签名的格式。 它可以是以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("'der'")]),e._v("（默认）：DER 编码的 ASN.1 签名结构编码 "),t("code",[e._v("(r, s)")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("'ieee-p1363'")]),e._v(": IEEE-P1363 中提议的签名格式 "),t("code",[e._v("r || s")]),e._v("。")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" RSA 的可选填充值，以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v("（默认）")]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PSS_PADDING")])])]),e._v(" "),t("p",[t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 将使用 MGF1 与用于签署消息的相同散列函数，如 "),t("a",{attrs:{href:"http://url.nodejs.cn/o3Gr5v",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4055"),t("OutboundLink")],1),e._v(" 的第 3.1 节中指定的那样。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("saltLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 填充为 "),t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 时的盐长度。 特殊值 "),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_DIGEST")]),e._v(" 将盐长度设置为摘要大小，"),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_MAX_SIGN")]),e._v("（默认值）将其设置为最大允许值。")])])]),e._v(" "),t("h4",{attrs:{id:"crypto-timingsafeequal-a-b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-timingsafeequal-a-b"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.timingSafeEqual(a, b)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptotimingsafeequala-b",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_timingsafeequal_a_b.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v6.6.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("a")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("b")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("该函数基于恒定时间算法。 如果 "),t("code",[e._v("a")]),e._v(" 等于 "),t("code",[e._v("b")]),e._v("，则返回 true，而不会泄露允许攻击者猜测其中一个值的时间信息。 这适用于比较 HMAC 摘要或秘密值，如身份验证 cookie 或"),t("a",{attrs:{href:"http://url.nodejs.cn/RjMmbw",target:"_blank",rel:"noopener noreferrer"}},[e._v("功能网址"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("crypto.timingSafeEqual")]),e._v(" 并不能保证周围的代码是时间安全的。 应注意确保周围的代码不会引入时序漏洞。")]),e._v(" "),t("h4",{attrs:{id:"crypto-verify-algorithm-data-key-signature"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#crypto-verify-algorithm-data-key-signature"}},[e._v("#")]),e._v(" "),t("code",[e._v("crypto.verify(algorithm, data, key, signature)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#cryptoverifyalgorithm-data-key-signature",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_verify_algorithm_data_key_signature.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.0.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("algorithm")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[t("null",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/8ym6ow",target:"_blank",rel:"noopener noreferrer"}},[t("undefined",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("data")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("key")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#class-keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("KeyObject",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("signature")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[t("Buffer",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/oh3CkV",target:"_blank",rel:"noopener noreferrer"}},[t("TypedArray",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/yCdVkD",target:"_blank",rel:"noopener noreferrer"}},[t("DataView",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("使用给定的密钥和算法验证 "),t("code",[e._v("data")]),e._v(" 的给定签名。 如果 "),t("code",[e._v("algorithm")]),e._v(" 是 "),t("code",[e._v("null")]),e._v(" 或 "),t("code",[e._v("undefined")]),e._v("，则算法取决于密钥类型（尤其是 Ed25519 和 Ed448）。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("key")]),e._v(" 不是 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_class_keyobject",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("KeyObject")]),t("OutboundLink")],1),e._v("，则此函数的行为就像将 "),t("code",[e._v("key")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_crypto_createpublickey_key",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("crypto.createPublicKey()")]),t("OutboundLink")],1),e._v(" 一样。 如果是对象，则可以传入以下额外属性：")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("dsaEncoding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" 对于 DSA 和 ECDSA，此选项指定生成签名的格式。 它可以是以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("'der'")]),e._v("（默认）：DER 编码的 ASN.1 签名结构编码 "),t("code",[e._v("(r, s)")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("'ieee-p1363'")]),e._v(": IEEE-P1363 中提议的签名格式 "),t("code",[e._v("r || s")]),e._v("。")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("padding")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" RSA 的可选填充值，以下之一：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PADDING")]),e._v("（默认）")]),e._v(" "),t("li",[t("code",[e._v("crypto.constants.RSA_PKCS1_PSS_PADDING")])])]),e._v(" "),t("p",[t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 将使用 MGF1 与用于签署消息的相同散列函数，如 "),t("a",{attrs:{href:"http://url.nodejs.cn/o3Gr5v",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4055"),t("OutboundLink")],1),e._v(" 的第 3.1 节中指定的那样。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("saltLength")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1),e._v(" 填充为 "),t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 时的盐长度。 特殊值 "),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_DIGEST")]),e._v(" 将盐长度设置为摘要大小，"),t("code",[e._v("crypto.constants.RSA_PSS_SALTLEN_MAX_SIGN")]),e._v("（默认值）将其设置为最大允许值。")])])]),e._v(" "),t("p",[t("code",[e._v("signature")]),e._v(" 参数是先前为 "),t("code",[e._v("data")]),e._v(" 计算的签名。")]),e._v(" "),t("p",[e._v("因为公钥可以从私钥派生出来，所以可以为 "),t("code",[e._v("key")]),e._v(" 传入私钥或公钥。")]),e._v(" "),t("h3",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[e._v("#")]),e._v(" 注意事项"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"旧版的流-api-node-js-v0-10-之前"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#旧版的流-api-node-js-v0-10-之前"}},[e._v("#")]),e._v(" 旧版的流 API（Node.js v0.10 之前）"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#legacy-streams-api-prior-to-nodejs-010",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/legacy_streams_api_prior_to_node_js_0_10.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("加密模块是在 Node.js 出现统一的流 API 概念之前添加的，在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 对象用于处理二进制数据之前。 因此，许多 "),t("code",[e._v("crypto")]),e._v(" 定义的类具有在其他实现"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("流"),t("OutboundLink")],1),e._v(" API 的 Node.js 类（例如 "),t("code",[e._v("update()")]),e._v("、"),t("code",[e._v("final()")]),e._v(" 或 "),t("code",[e._v("digest()")]),e._v("）上通常找不到的方法。 此外，许多方法默认接受并返回 "),t("code",[e._v("'latin1'")]),e._v(" 编码字符串，而不是 "),t("code",[e._v("Buffer")]),e._v("。 此默认值在 Node.js v0.8 之后更改为默认使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 对象。")]),e._v(" "),t("h4",{attrs:{id:"ecdh-近期的变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecdh-近期的变化"}},[e._v("#")]),e._v(" ECDH 近期的变化"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#recent-ecdh-changes",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/recent_ecdh_changes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("ECDH")]),e._v(" 与非动态生成的密钥对的使用已得到简化。 现在，可以使用预选的私钥调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_setprivatekey_privatekey_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.setPrivateKey()")]),t("OutboundLink")],1),e._v("，并且关联的公钥（密钥）将被计算并存储在对象中。 这允许代码仅存储和提供 EC 密钥对的私有部分。 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_setprivatekey_privatekey_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.setPrivateKey()")]),t("OutboundLink")],1),e._v(" 现在还验证私钥对所选曲线是否有效。")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_setpublickey_publickey_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.setPublicKey()")]),t("OutboundLink")],1),e._v(" 方法现在已被弃用，因为它包含在 API 中没有用。 要么应设置先前存储的私钥，它会自动生成关联的公钥，要么应调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_generatekeys_encoding_format",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.generateKeys()")]),t("OutboundLink")],1),e._v("。 使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto_ecdh_setpublickey_publickey_encoding",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ecdh.setPublicKey()")]),t("OutboundLink")],1),e._v(" 的主要缺点是它可用于将 ECDH 密钥对置于不一致的状态。")]),e._v(" "),t("h4",{attrs:{id:"弱算法或受损算法的支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弱算法或受损算法的支持"}},[e._v("#")]),e._v(" 弱算法或受损算法的支持"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#support-for-weak-or-compromised-algorithms",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/support_for_weak_or_compromised_algorithms.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("crypto")]),e._v(" 模块仍然支持一些已经被破坏并且目前不推荐使用的算法。 API 还允许使用对于安全使用来说太弱的小密钥大小的密码和散列。")]),e._v(" "),t("p",[e._v("用户应根据自己的安全要求对选择加密算法和密钥大小负全部责任。")]),e._v(" "),t("p",[e._v("基于 "),t("a",{attrs:{href:"http://url.nodejs.cn/tNMwGm",target:"_blank",rel:"noopener noreferrer"}},[e._v("NIST SP 800-131A"),t("OutboundLink")],1),e._v(" 的建议：")]),e._v(" "),t("ul",[t("li",[e._v("MD5 和 SHA-1 在需要抗碰撞性（例如数字签名）的情况下不再被接受。")]),e._v(" "),t("li",[e._v("RSA、DSA 和 DH 算法使用的密钥建议至少 2048 位，ECDSA 和 ECDH 的曲线至少 224 位，才能安全使用几年。")]),e._v(" "),t("li",[t("code",[e._v("modp1")]),e._v("、"),t("code",[e._v("modp2")]),e._v("、"),t("code",[e._v("modp5")]),e._v(" 的 DH 组密钥长度小于 2048 位，不推荐使用。")])]),e._v(" "),t("p",[e._v("有关其他建议和详细信息，请参阅参考资料。")]),e._v(" "),t("h4",{attrs:{id:"ccm-模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ccm-模式"}},[e._v("#")]),e._v(" CCM 模式"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#ccm-mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/ccm_mode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("CCM 是支持的 "),t("a",{attrs:{href:"http://url.nodejs.cn/oJCCfc",target:"_blank",rel:"noopener noreferrer"}},[e._v("AEAD 算法"),t("OutboundLink")],1),e._v("之一。 使用此模式的应用程序在使用密码 API 时必须遵守某些限制：")]),e._v(" "),t("ul",[t("li",[e._v("身份验证标签长度必须在密码创建期间通过设置 "),t("code",[e._v("authTagLength")]),e._v(" 选项指定，并且必须是 4、6、8、10、12、14 或 16 字节之一。")]),e._v(" "),t("li",[e._v("初始化向量 (nonce) "),t("code",[e._v("N")]),e._v(" 的长度必须介于 7 到 13 个字节 ("),t("code",[e._v("7 ≤ N ≤ 13")]),e._v(") 之间。")]),e._v(" "),t("li",[e._v("明文的长度限制为 "),t("code",[e._v("2 ** (8 * (15 - N))")]),e._v(" 个字节。")]),e._v(" "),t("li",[e._v("解密时，必须在调用 "),t("code",[e._v("update()")]),e._v(" 之前通过 "),t("code",[e._v("setAuthTag()")]),e._v(" 设置认证标签。 否则，解密将失败并且 "),t("code",[e._v("final()")]),e._v(" 将根据 "),t("a",{attrs:{href:"http://url.nodejs.cn/w4NGuq",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 3610"),t("OutboundLink")],1),e._v(" 的第 2.6 节抛出错误。")]),e._v(" "),t("li",[e._v("在 CCM 模式下使用 "),t("code",[e._v("write(data)")]),e._v("、"),t("code",[e._v("end(data)")]),e._v(" 或 "),t("code",[e._v("pipe()")]),e._v(" 等流方法可能会失败，因为 CCM 无法处理每个实例的多个数据块。")]),e._v(" "),t("li",[e._v("当传入额外的认证数据 (AAD) 时，必须通过 "),t("code",[e._v("plaintextLength")]),e._v(" 选项将实际消息的长度（以字节为单位）传递给 "),t("code",[e._v("setAAD()")]),e._v("。 许多加密库在密文中包含认证标签，这意味着它们产生长度为 "),t("code",[e._v("plaintextLength + authTagLength")]),e._v(" 的密文。 Node.js 不包含认证标签，所以密文长度始终为 "),t("code",[e._v("plaintextLength")]),e._v("。 如果没有使用 AAD，则这不是必需的。")]),e._v(" "),t("li",[e._v("由于 CCM 一次处理整个消息，因此只能调用 "),t("code",[e._v("update()")]),e._v(" 一次。")]),e._v(" "),t("li",[e._v("即使调用 "),t("code",[e._v("update()")]),e._v(" 足以加密/解密消息，应用程序必须调用 "),t("code",[e._v("final()")]),e._v(" 来计算或验证身份验证标签。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const crypto = require('crypto');\n\nconst key = 'keykeykeykeykeykeykeykey';\nconst nonce = crypto.randomBytes(12);\n\nconst aad = Buffer.from('0123456789', 'hex');\n\nconst cipher = crypto.createCipheriv('aes-192-ccm', key, nonce, {\n  authTagLength: 16\n});\nconst plaintext = 'Hello world';\ncipher.setAAD(aad, {\n  plaintextLength: Buffer.byteLength(plaintext)\n});\nconst ciphertext = cipher.update(plaintext, 'utf8');\ncipher.final();\nconst tag = cipher.getAuthTag();\n\n// 现在传输 { ciphertext, nonce, tag }。\n\nconst decipher = crypto.createDecipheriv('aes-192-ccm', key, nonce, {\n  authTagLength: 16\n});\ndecipher.setAuthTag(tag);\ndecipher.setAAD(aad, {\n  plaintextLength: ciphertext.length\n});\nconst receivedPlaintext = decipher.update(ciphertext, null, 'utf8');\n\ntry {\n  decipher.final();\n} catch (err) {\n  console.error('Authentication failed!');\n  return;\n}\n\nconsole.log(receivedPlaintext);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br"),t("span",{staticClass:"line-number"},[e._v("36")]),t("br"),t("span",{staticClass:"line-number"},[e._v("37")]),t("br")])]),t("h3",{attrs:{id:"加密常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加密常量"}},[e._v("#")]),e._v(" 加密常量"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#crypto-constants",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/crypto_constants_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("crypto.constants")]),e._v(" 导出的以下常量适用于 "),t("code",[e._v("crypto")]),e._v("、"),t("code",[e._v("tls")]),e._v(" 和 "),t("code",[e._v("https")]),e._v(" 模块的各种用途，并且通常特定于 OpenSSL。")]),e._v(" "),t("h4",{attrs:{id:"openssl-选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#openssl-选项"}},[e._v("#")]),e._v(" OpenSSL 选项"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#openssl-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/openssl_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("常量")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("SSL_OP_ALL")])]),e._v(" "),t("td",[e._v("在 OpenSSL 中应用多个错误解决方法。 详情请参阅 "),t("a",{attrs:{href:"https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_ALLOW_NO_DHE_KEX")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 允许 TLS v1.3 的非基于 [EC]DHE 的密钥交换模式")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION")])]),e._v(" "),t("td",[e._v("允许在 OpenSSL 和未打补丁的客户端或服务器之间进行旧版的不安全重新协商。 详情请参阅 "),t("a",{attrs:{href:"https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_CIPHER_SERVER_PREFERENCE")])]),e._v(" "),t("td",[e._v("在选择密码时尝试使用服务器的首选项而不是客户端的首选项。 行为取决于协议版本。 详情请参阅 "),t("a",{attrs:{href:"https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_CISCO_ANYCONNECT")])]),e._v(" "),t("td",[e._v('指示 OpenSSL 使用思科的 "speshul" 版本的 DTLSBADVER。')])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_COOKIE_EXCHANGE")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 打开 cookie 交换。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_CRYPTOPRO_TLSEXT_BUG")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 从早期版本的 cryptopro 草案中添加 server-hello 扩展。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 禁用在 OpenSSL 0.9.6d 中添加的 SSL 3.0/TLS 1.0 漏洞解决方法。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_EPHEMERAL_RSA")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 在执行 RSA 操作时始终使用 tmp_rsa 密钥。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_LEGACY_SERVER_CONNECT")])]),e._v(" "),t("td",[e._v("允许初始连接到不支持 RI 的服务器。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_MICROSOFT_SESS_ID_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_MSIE_SSLV2_RSA_PADDING")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 禁用 SSL 2.0 服务器实现中的中间人协议版本漏洞的解决方法。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NETSCAPE_CA_DN_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NETSCAPE_CHALLENGE_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_COMPRESSION")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 禁用对 SSL/TLS 压缩的支持。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_ENCRYPT_THEN_MAC")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 禁用 encrypt-then-MAC。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_QUERY_MTU")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_RENEGOTIATION")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 禁用重新协商。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 在执行重新协商时始终启动新会话。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_SSLv2")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 关闭 SSL v2")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_SSLv3")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 关闭 SSL v3")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_TICKET")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 禁用 RFC4507bis 票证的使用。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_TLSv1")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 关闭 TLS v1")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_TLSv1_1")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 关闭 TLS v1.1")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_TLSv1_2")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 关闭 TLS v1.2")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_NO_TLSv1_3")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 关闭 TLS v1.3")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_PKCS1_CHECK_1")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_PKCS1_CHECK_2")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_PRIORITIZE_CHACHA")])]),e._v(" "),t("td",[e._v("当客户端这样做时，指示 OpenSSL 服务器优先考虑 ChaCha20Poly1305。 如果 "),t("code",[e._v("SSL_OP_CIPHER_SERVER_PREFERENCE")]),e._v(" 未启用，则此选项无效。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_SINGLE_DH_USE")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 在使用临时/短暂 DH 参数时始终创建新密钥。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_SINGLE_ECDH_USE")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 在使用临时/短暂 ECDH 参数时始终创建新密钥。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_SSLEAY_080_CLIENT_DH_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_TLS_BLOCK_PADDING_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_TLS_D5_BUG")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("SSL_OP_TLS_ROLLBACK_BUG")])]),e._v(" "),t("td",[e._v("指示 OpenSSL 禁用版本回滚攻击检测。")])])])]),e._v(" "),t("h4",{attrs:{id:"openssl-引擎的常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#openssl-引擎的常量"}},[e._v("#")]),e._v(" OpenSSL 引擎的常量"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#openssl-engine-constants",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/openssl_engine_constants.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("常量")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_RSA")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 RSA")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_DSA")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 DSA")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_DH")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 DH")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_RAND")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 RAND")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_EC")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 EC")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_CIPHERS")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 CIPHERS")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_DIGESTS")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 DIGESTS")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_PKEY_METHS")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 PKEY_METHDS")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_PKEY_ASN1_METHS")])]),e._v(" "),t("td",[e._v("将引擎使用限制为 PKEY_ASN1_METHS")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_ALL")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ENGINE_METHOD_NONE")])]),e._v(" "),t("td")])])]),e._v(" "),t("h4",{attrs:{id:"其他-openssl-常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他-openssl-常量"}},[e._v("#")]),e._v(" 其他 OpenSSL 常量"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#other-openssl-constants",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/other_openssl_constants.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("有关详细信息，请参阅 "),t("a",{attrs:{href:"http://url.nodejs.cn/QxXQf5",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSL OP 标志列表"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("常量")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("DH_CHECK_P_NOT_SAFE_PRIME")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("DH_CHECK_P_NOT_PRIME")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("DH_UNABLE_TO_CHECK_GENERATOR")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("DH_NOT_SUITABLE_GENERATOR")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("ALPN_ENABLED")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_PKCS1_PADDING")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_SSLV23_PADDING")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_NO_PADDING")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_PKCS1_OAEP_PADDING")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_X931_PADDING")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_PKCS1_PSS_PADDING")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_PSS_SALTLEN_DIGEST")])]),e._v(" "),t("td",[e._v("在签名或验证时将 "),t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 的盐长度设置为摘要大小。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_PSS_SALTLEN_MAX_SIGN")])]),e._v(" "),t("td",[e._v("将 "),t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 的盐长度设置为签名数据时的最大允许值。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("RSA_PSS_SALTLEN_AUTO")])]),e._v(" "),t("td",[e._v("导致在验证签名时自动确定 "),t("code",[e._v("RSA_PKCS1_PSS_PADDING")]),e._v(" 的盐长度。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("POINT_CONVERSION_COMPRESSED")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("POINT_CONVERSION_UNCOMPRESSED")])]),e._v(" "),t("td")]),e._v(" "),t("tr",[t("td",[t("code",[e._v("POINT_CONVERSION_HYBRID")])]),e._v(" "),t("td")])])]),e._v(" "),t("h4",{attrs:{id:"node-js-加密常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js-加密常量"}},[e._v("#")]),e._v(" Node.js 加密常量"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html#nodejs-crypto-constants",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto/node_js_crypto_constants.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("常量")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[t("code",[e._v("defaultCoreCipherList")])]),e._v(" "),t("td",[e._v("指定 Node.js 使用的内置默认密码列表。")])]),e._v(" "),t("tr",[t("td",[t("code",[e._v("defaultCipherList")])]),e._v(" "),t("td",[e._v("指定当前 Node.js 进程使用的活动默认密码列表。")])])])])])}),[],!1,null,null,null);r.default=a.exports}}]);