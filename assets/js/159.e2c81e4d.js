(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{627:function(e,r,a){"use strict";a.r(r);var t=a(18),n=Object(t.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"stream-流-node-js-api-文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-流-node-js-api-文档"}},[e._v("#")]),e._v(" stream 流 | Node.js API 文档")]),e._v(" "),a("blockquote",[a("h2",{attrs:{id:"excerpt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),a("p",[e._v("中英对照")])]),e._v(" "),a("hr"),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("strong",[e._v("源代码:")]),e._v(" "),a("a",{attrs:{href:"https://github.com/nodejs/node/blob/v12.22.12/lib/stream.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/stream.js"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("流是用于在 Node.js 中处理流数据的抽象接口。 "),a("code",[e._v("stream")]),e._v(" 模块提供了用于实现流接口的 API。")]),e._v(" "),a("p",[e._v("Node.js 提供了许多流对象。 例如，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/http.html#http_class_http_incomingmessage",target:"_blank",rel:"noopener noreferrer"}},[e._v("对 HTTP 服务器的请求"),a("OutboundLink")],1),e._v("和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdout",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("process.stdout")]),a("OutboundLink")],1),e._v(" 都是流的实例。")]),e._v(" "),a("p",[e._v("流可以是可读的、可写的、或两者兼而有之。 所有的流都是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("EventEmitter")]),a("OutboundLink")],1),e._v(" 的实例。")]),e._v(" "),a("p",[e._v("要访问 "),a("code",[e._v("stream")]),e._v(" 模块：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const stream = require('stream');\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("code",[e._v("stream")]),e._v(" 模块对于创建新类型的流实例很有用。 通常不需要使用 "),a("code",[e._v("stream")]),e._v(" 模块来消费流。")]),e._v(" "),a("h3",{attrs:{id:"本文档的组织结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本文档的组织结构"}},[e._v("#")]),e._v(" 本文档的组织结构"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#organization-of-this-document",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/organization_of_this_document.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("本文档包含两个主要章节和第三章节的注意事项。 第一章节描述了如何在应用程序中使用现有的流。 第二章节描述了如何创建新类型的流。")]),e._v(" "),a("h3",{attrs:{id:"流的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流的类型"}},[e._v("#")]),e._v(" 流的类型"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#types-of-streams",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/types_of_streams.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Node.js 中有四种基本的流类型：")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(": 可以写入数据的流（例如，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_fs_createwritestream_path_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("fs.createWriteStream()")]),a("OutboundLink")],1),e._v("）。")]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(": 可以从中读取数据的流（例如，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_fs_createreadstream_path_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("fs.createReadStream()")]),a("OutboundLink")],1),e._v("）。")]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(": "),a("code",[e._v("Readable")]),e._v(" 和 "),a("code",[e._v("Writable")]),e._v(" 的流（例如，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/net.html#net_class_net_socket",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("net.Socket")]),a("OutboundLink")],1),e._v("）。")]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(": 可以在写入和读取数据时修改或转换数据的 "),a("code",[e._v("Duplex")]),e._v(" 流（例如，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/zlib.html#zlib_zlib_createdeflate_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("zlib.createDeflate()")]),a("OutboundLink")],1),e._v("）。")])]),e._v(" "),a("p",[e._v("此外，此模块还包括实用函数 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_stream_pipeline_streams_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pipeline()")]),a("OutboundLink")],1),e._v("、"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_stream_finished_stream_options_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.finished()")]),a("OutboundLink")],1),e._v("、和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_stream_readable_from_iterable_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.Readable.from()")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"对象模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象模式"}},[e._v("#")]),e._v(" 对象模式"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#object-mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/object_mode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Node.js API 创建的所有流都只对字符串和 "),a("code",[e._v("Buffer")]),e._v("（或 "),a("code",[e._v("Uint8Array")]),e._v("）对象进行操作。 但是，流的实现可以使用其他类型的 JavaScript 值（除了 "),a("code",[e._v("null")]),e._v('，它在流中具有特殊用途）。 这样的流被认为是在"对象模式"下运行的。')]),e._v(" "),a("p",[e._v("流的实例在创建流时使用 "),a("code",[e._v("objectMode")]),e._v(" 选项切换到对象模式。 尝试将现有的流切换到对象模式是不安全的。")]),e._v(" "),a("h4",{attrs:{id:"缓冲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲"}},[e._v("#")]),e._v(" 缓冲"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#buffering",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/buffering.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("可能缓冲的数据量取决于传给流的构造函数的 "),a("code",[e._v("highWaterMark")]),e._v(" 选项。 对于普通的流，"),a("code",[e._v("highWaterMark")]),e._v(" 选项指定"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_highwatermark_discrepancy_after_calling_readable_setencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("字节的总数"),a("OutboundLink")],1),e._v("。 对于在对象模式下操作的流，"),a("code",[e._v("highWaterMark")]),e._v(" 指定对象的总数。")]),e._v(" "),a("p",[e._v("当实现调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push_chunk_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.push(chunk)")]),a("OutboundLink")],1),e._v(" 时，数据缓存在 "),a("code",[e._v("Readable")]),e._v(" 流中。 如果流的消费者没有调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v("，则数据会一直驻留在内部队列中，直到被消费。")]),e._v(" "),a("p",[e._v("一旦内部读取缓冲区的总大小达到 "),a("code",[e._v("highWaterMark")]),e._v(" 指定的阈值，则流将暂时停止从底层资源读取数据，直到可以消费当前缓冲的数据（也就是，流将停止调用内部的用于填充读取缓冲区 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 方法）。")]),e._v(" "),a("p",[e._v("当重复调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.write(chunk)")]),a("OutboundLink")],1),e._v(" 方法时，数据会缓存在 "),a("code",[e._v("Writable")]),e._v(" 流中。 虽然内部的写入缓冲区的总大小低于 "),a("code",[e._v("highWaterMark")]),e._v(" 设置的阈值，但对 "),a("code",[e._v("writable.write()")]),e._v(" 的调用将返回 "),a("code",[e._v("true")]),e._v("。 一旦内部缓冲区的大小达到或超过 "),a("code",[e._v("highWaterMark")]),e._v("，则将返回 "),a("code",[e._v("false")]),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("stream")]),e._v(" API 的一个关键目标，尤其是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pipe_destination_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pipe()")]),a("OutboundLink")],1),e._v(" 方法，是将数据缓冲限制在可接受的水平，以便不同速度的来源和目标不会压倒可用内存。")]),e._v(" "),a("p",[a("code",[e._v("highWaterMark")]),e._v(" 选项是阈值，而不是限制：它规定了流在停止请求更多数据之前缓冲的数据量。 它通常不强制执行严格的内存限制。 特定的流实现可能会选择实施更严格的限制，但这样做是可选的。")]),e._v(" "),a("p",[e._v("由于 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流都是 "),a("code",[e._v("Readable")]),e._v(" 和 "),a("code",[e._v("Writable")]),e._v("，因此每个流都维护两个独立的内部缓冲区，用于读取和写入，允许每一端独立操作，同时保持适当且高效的数据流。 例如，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/net.html#net_class_net_socket",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("net.Socket")]),a("OutboundLink")],1),e._v(" 实例是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流，其 "),a("code",[e._v("Readable")]),e._v(" 端允许消费从套接字接收的数据，其 "),a("code",[e._v("Writable")]),e._v(" 端允许将数据写入套接字。 因为数据可能以比接收数据更快或更慢的速度写入套接字，所以每一端都应该独立于另一端进行操作（和缓冲）。")]),e._v(" "),a("h3",{attrs:{id:"流消费者的-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流消费者的-api"}},[e._v("#")]),e._v(" 流消费者的 API"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#api-for-stream-consumers",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/api_for_stream_consumers.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("几乎所有的 Node.js 应用程序，无论多么简单，都以某种方式使用流。 以下是在实现 HTTP 服务器的 Node.js 应用程序中使用流的示例：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const http = require('http');\n\nconst server = http.createServer((req, res) => {\n  // `req` 是 http.IncomingMessage，它是可读流。\n  // `res` 是 http.ServerResponse，它是可写流。\n\n  let body = '';\n  // 以 utf8 字符串形式获取数据。\n  // 如果未设置编码，则将接收缓冲区对象。\n  req.setEncoding('utf8');\n\n  // 一旦添加了监听器，则可读流就会触发 'data' 事件。\n  req.on('data', (chunk) => {\n    body += chunk;\n  });\n\n  // 'end' 事件表示已经接收到整个正文。\n  req.on('end', () => {\n    try {\n      const data = JSON.parse(body);\n      // 给用户回写一些有趣的东西：\n      res.write(typeof data);\n      res.end();\n    } catch (er) {\n      // 哦哦！糟糕的 json！\n      res.statusCode = 400;\n      return res.end(`error: ${er.message}`);\n    }\n  });\n});\n\nserver.listen(1337);\n\n// $ curl localhost:1337 -d \"{}\"\n// object\n// $ curl localhost:1337 -d \"\\\"foo\\\"\"\n// string\n// $ curl localhost:1337 -d \"not json\"\n// error: Unexpected token o in JSON at position 1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br")])]),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流（例如示例中的 "),a("code",[e._v("res")]),e._v("）暴露了用于将数据写入流的方法，例如 "),a("code",[e._v("write()")]),e._v(" 和 "),a("code",[e._v("end()")]),e._v("。")]),e._v(" "),a("p",[e._v("当数据可从流中读取时，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("EventEmitter")]),a("OutboundLink")],1),e._v(" API 来通知应用程序代码。 可以通过多种方式从流中读取可用数据。")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流都以各种方式使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("EventEmitter")]),a("OutboundLink")],1),e._v(" API 来传达流的当前状态。")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流都是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("向流中写入数据或从流中消费数据的应用程序不需要直接实现流的接口，并且通常没有理由调用 "),a("code",[e._v("require('stream')")]),e._v("。")]),e._v(" "),a("p",[e._v("希望实现新类型的流的开发者应参考"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_api_for_stream_implementers",target:"_blank",rel:"noopener noreferrer"}},[e._v("流实现者的 API"),a("OutboundLink")],1),e._v(" 章节。")]),e._v(" "),a("h4",{attrs:{id:"可写流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可写流"}},[e._v("#")]),e._v(" 可写流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writable-streams",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_streams.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("可写流是数据写入目标的抽象。")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流的示例包括：")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/http.html#http_class_http_clientrequest",target:"_blank",rel:"noopener noreferrer"}},[e._v("客户端上的 HTTP 请求"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/http.html#http_class_http_serverresponse",target:"_blank",rel:"noopener noreferrer"}},[e._v("服务器上的 HTTP 响应"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_class_fs_writestream",target:"_blank",rel:"noopener noreferrer"}},[e._v("文件系统写入流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/zlib.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("加密流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/net.html#net_class_net_socket",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP 套接字"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_subprocess_stdin",target:"_blank",rel:"noopener noreferrer"}},[e._v("子进程标准输入"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdout",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("process.stdout")]),a("OutboundLink")],1),e._v("、"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stderr",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("process.stderr")]),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("其中一些示例实际上是实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 接口的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流。")]),e._v(" "),a("p",[e._v("所有的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流都实现了 "),a("code",[e._v("stream.Writable")]),e._v(" 类定义的接口。")]),e._v(" "),a("p",[e._v("虽然 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流的特定实例可能以各种方式不同，但所有的 "),a("code",[e._v("Writable")]),e._v(" 流都遵循相同的基本使用模式，如下例所示：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const myStream = getWritableStreamSomehow();\nmyStream.write('some data');\nmyStream.write('some more data');\nmyStream.end('done writing data');\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h5",{attrs:{id:"stream-writable-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-writable-类"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.Writable")]),e._v(" 类"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#class-streamwritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("h6",{attrs:{id:"close-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#close-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'close'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-close",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_close.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("当流及其任何底层资源（例如文件描述符）已关闭时，则会触发 "),a("code",[e._v("'close'")]),e._v(" 事件。 该事件表明将不再触发更多事件，并且不会发生进一步的计算。")]),e._v(" "),a("p",[e._v("如果 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流是使用 "),a("code",[e._v("emitClose")]),e._v(" 选项创建的，则始终会触发 "),a("code",[e._v("'close'")]),e._v(" 事件。")]),e._v(" "),a("h6",{attrs:{id:"drain-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drain-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'drain'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-drain",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_drain.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("p",[e._v("如果对 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write(chunk)")]),a("OutboundLink")],1),e._v(" 的调用返回 "),a("code",[e._v("false")]),e._v("，则 "),a("code",[e._v("'drain'")]),e._v(" 事件将在适合继续将数据写入流时触发。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 将数据写入提供的可写流一百万次。\n// 注意背压。\nfunction writeOneMillionTimes(writer, data, encoding, callback) {\n  let i = 1000000;\n  write();\n  function write() {\n    let ok = true;\n    do {\n      i--;\n      if (i === 0) {\n        // 最后一次！\n        writer.write(data, encoding, callback);\n      } else {\n        // 看看是应该继续，还是等待。\n        // 不要传入回调，因为还没有完成。\n        ok = writer.write(data, encoding);\n      }\n    } while (i > 0 && ok);\n    if (i > 0) {\n      // 必须早点停下来！\n      // 等它排空时再写一些。\n      writer.once('drain', write);\n    }\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br")])]),a("h6",{attrs:{id:"error-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'error'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-error",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_error.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("如果在写入或管道数据时发生错误，则会触发 "),a("code",[e._v("'error'")]),e._v(" 事件。 监听器回调在调用时传入单个 "),a("code",[e._v("Error")]),e._v(" 参数。")]),e._v(" "),a("h6",{attrs:{id:"finish-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finish-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'finish'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-finish",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_finish.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("p",[e._v("在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_end_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.end()")]),a("OutboundLink")],1),e._v(" 方法之后，并且所有数据都已刷新到底层系统，则触发 "),a("code",[e._v("'finish'")]),e._v(" 事件。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const writer = getWritableStreamSomehow();\nfor (let i = 0; i < 100; i++) {\n  writer.write(`hello, #${i}!\\n`);\n}\nwriter.on('finish', () => {\n  console.log('All writes are now complete.');\n});\nwriter.end('This is the end\\n');\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h6",{attrs:{id:"pipe-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipe-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'pipe'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-pipe",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_pipe.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("src")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamreadable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Readable>"),a("OutboundLink")],1),e._v(" 管道到此可写流的源流")])]),e._v(" "),a("p",[e._v("当在可读流上调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pipe_destination_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pipe()")]),a("OutboundLink")],1),e._v(" 方法将此可写流添加到其目标集时，则触发 "),a("code",[e._v("'pipe'")]),e._v(" 事件。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const writer = getWritableStreamSomehow();\nconst reader = getReadableStreamSomehow();\nwriter.on('pipe', (src) => {\n  console.log('Something is piping into the writer.');\n  assert.equal(src, reader);\n});\nreader.pipe(writer);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h6",{attrs:{id:"unpipe-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unpipe-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'unpipe'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-unpipe",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_unpipe.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("src")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamreadable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Readable>"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_unpipe_destination",target:"_blank",rel:"noopener noreferrer"}},[e._v("取消管道"),a("OutboundLink")],1),e._v("此可写流的源流")])]),e._v(" "),a("p",[e._v("当在 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流上调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_unpipe_destination",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.unpipe()")]),a("OutboundLink")],1),e._v(" 方法时，则会触发 "),a("code",[e._v("'unpipe'")]),e._v(" 事件，从其目标集合中删除此 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("当 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流管道进入它时，如果此 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流触发错误，则这也会触发。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const writer = getWritableStreamSomehow();\nconst reader = getReadableStreamSomehow();\nwriter.on('unpipe', (src) => {\n  console.log('Something has stopped piping into the writer.');\n  assert.equal(src, reader);\n});\nreader.pipe(writer);\nreader.unpipe(writer);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h6",{attrs:{id:"writable-cork"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-cork"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.cork()")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablecork",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_cork.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.11.2")]),e._v(" "),a("p",[a("code",[e._v("writable.cork()")]),e._v(" 方法强制所有写入的数据都缓存在内存中。 当调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_uncork",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.uncork()")]),a("OutboundLink")],1),e._v(" 或 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_end_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.end()")]),a("OutboundLink")],1),e._v(" 方法时，缓冲的数据将被刷新。")]),e._v(" "),a("p",[a("code",[e._v("writable.cork()")]),e._v(" 的主要目的是适应将几个小块快速连续写入流的情况。 "),a("code",[e._v("writable.cork()")]),e._v(" 不是立即将它们转发到底层目标，而是缓冲所有块，直到 "),a("code",[e._v("writable.uncork()")]),e._v(" 被调用，如果存在，"),a("code",[e._v("writable.uncork()")]),e._v(" 会将它们全部传给 "),a("code",[e._v("writable._writev()")]),e._v("。 这可以防止在等待处理第一个小块时正在缓冲数据的行头阻塞情况。 但是，在不实现 "),a("code",[e._v("writable._writev()")]),e._v(" 的情况下使用 "),a("code",[e._v("writable.cork()")]),e._v(" 可能会对吞吐量产生不利影响。")]),e._v(" "),a("p",[e._v("另请参阅："),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_uncork",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.uncork()")]),a("OutboundLink")],1),e._v("、"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_writev_chunks_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._writev()")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"writable-destroy-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-destroy-error"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.destroy([error])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writabledestroyerror",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_destroy_error.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("error")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1),e._v(" 可选，与 "),a("code",[e._v("'error'")]),e._v(" 事件一起触发的错误。")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("销毁流 可选地触发 "),a("code",[e._v("'error'")]),e._v(" 事件，并且触发 "),a("code",[e._v("'close'")]),e._v(" 事件（除非 "),a("code",[e._v("emitClose")]),e._v(" 设置为 "),a("code",[e._v("false")]),e._v("）。 在此调用之后，则可写流已结束，随后对 "),a("code",[e._v("write()")]),e._v(" 或 "),a("code",[e._v("end()")]),e._v(" 的调用将导致 "),a("code",[e._v("ERR_STREAM_DESTROYED")]),e._v(" 错误。 这是销毁流的破坏性和直接的方式。 先前对 "),a("code",[e._v("write()")]),e._v(" 的调用可能没有排空，并且可能触发 "),a("code",[e._v("ERR_STREAM_DESTROYED")]),e._v(" 错误。 如果数据应该在关闭之前刷新，或者在销毁流之前等待 "),a("code",[e._v("'drain'")]),e._v(" 事件，则使用 "),a("code",[e._v("end()")]),e._v(" 而不是销毁。 实现者不应覆盖此方法，而应实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_destroy_err_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._destroy()")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"writable-destroyed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-destroyed"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.destroyed")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writabledestroyed",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_destroyed.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_destroy_error",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.destroy()")]),a("OutboundLink")],1),e._v(" 之后是 "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"writable-end-chunk-encoding-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-end-chunk-encoding-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.end([chunk[, encoding]][, callback])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writableendchunk-encoding-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_end_chunk_encoding_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("chunk")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/ZbDkpm",target:"_blank",rel:"noopener noreferrer"}},[a("Uint8Array",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1),e._v(" 可选的要写入的数据。 对于不在对象模式下操作的流，"),a("code",[e._v("chunk")]),e._v(" 必须是字符串、"),a("code",[e._v("Buffer")]),e._v(" 或 "),a("code",[e._v("Uint8Array")]),e._v("。 对于对象模式的流，"),a("code",[e._v("chunk")]),e._v(" 可以是除 "),a("code",[e._v("null")]),e._v(" 之外的任何 JavaScript 值。")]),e._v(" "),a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" "),a("code",[e._v("chunk")]),e._v(" 为字符串时的编码")]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1)]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("调用 "),a("code",[e._v("writable.end()")]),e._v(" 方法表示不再有数据写入 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v("。 可选的 "),a("code",[e._v("chunk")]),e._v(" 和 "),a("code",[e._v("encoding")]),e._v(" 参数允许在关闭流之前立即写入最后一个额外的数据块。")]),e._v(" "),a("p",[e._v("在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_end_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.end()")]),a("OutboundLink")],1),e._v(" 之后调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v(" 方法将引发错误。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 写入 'hello, ' 然后以 'world!' 结尾。\nconst fs = require('fs');\nconst file = fs.createWriteStream('example.txt');\nfile.write('hello, ');\nfile.end('world!');\n// 现在不允许写入更多！\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h6",{attrs:{id:"writable-setdefaultencoding-encoding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-setdefaultencoding-encoding"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.setDefaultEncoding(encoding)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablesetdefaultencodingencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_setdefaultencoding_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 新的默认编码")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("writable.setDefaultEncoding()")]),e._v(" 方法为 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流设置默认的 "),a("code",[e._v("encoding")]),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"writable-uncork"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-uncork"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.uncork()")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writableuncork",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_uncork.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.11.2")]),e._v(" "),a("p",[a("code",[e._v("writable.uncork()")]),e._v(" 方法会刷新自调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_cork",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.cork()")]),a("OutboundLink")],1),e._v(" 以来缓冲的所有数据。")]),e._v(" "),a("p",[e._v("当使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_cork",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.cork()")]),a("OutboundLink")],1),e._v(" 和 "),a("code",[e._v("writable.uncork()")]),e._v(" 管理写入流的缓冲时，建议使用 "),a("code",[e._v("process.nextTick()")]),e._v(" 延迟对 "),a("code",[e._v("writable.uncork()")]),e._v(" 的调用。 这样做允许对在给定 Node.js 事件循环阶段中发生的所有 "),a("code",[e._v("writable.write()")]),e._v(" 调用进行批处理。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("stream.cork();\nstream.write('some ');\nstream.write('data ');\nprocess.nextTick(() => stream.uncork());\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("如果在一个流上多次调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_cork",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.cork()")]),a("OutboundLink")],1),e._v(" 方法，则必须调用相同数量的 "),a("code",[e._v("writable.uncork()")]),e._v(" 调用来刷新缓冲的数据。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("stream.cork();\nstream.write('some ');\nstream.cork();\nstream.write('data ');\nprocess.nextTick(() => {\n  stream.uncork();\n  // 在第二次调用 uncork() 之前不会刷新数据。\n  stream.uncork();\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("另见: "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_cork",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.cork()")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"writable-writable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writable"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.writable")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v11.4.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("Is "),a("code",[e._v("true")]),e._v(" if it is safe to call "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.write()")]),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h6",{attrs:{id:"writable-writableended"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writableended"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.writableEnded")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritableended",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_writableended.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.9.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_end_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.end()")]),a("OutboundLink")],1),e._v(" 之后是 "),a("code",[e._v("true")]),e._v("。 此属性不指示数据是否已刷新，为此则使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_writablefinished",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.writableFinished")]),a("OutboundLink")],1),e._v(" 代替。")]),e._v(" "),a("h6",{attrs:{id:"writable-writablecorked"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablecorked"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.writableCorked")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritablecorked",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_writablecorked.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.16.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("integer",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("需要调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_uncork",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.uncork()")]),a("OutboundLink")],1),e._v(" 以完全解开流的次数。")]),e._v(" "),a("h6",{attrs:{id:"writable-writablefinished"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablefinished"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.writableFinished")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritablefinished",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_writablefinished.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.6.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("在触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_finish",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'finish'")]),a("OutboundLink")],1),e._v(" 事件之前立即设置为 "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"writable-writablehighwatermark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablehighwatermark"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.writableHighWaterMark")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritablehighwatermark",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_writablehighwatermark.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v9.3.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("返回构造此 "),a("code",[e._v("Writable")]),e._v(" 时传入的 "),a("code",[e._v("highWaterMark")]),e._v(" 的值。")]),e._v(" "),a("h6",{attrs:{id:"writable-writablelength"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writablelength"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.writableLength")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritablelength",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_writablelength.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v9.4.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("此属性包含队列中准备写入的字节数（或对象数）。 该值提供有关 "),a("code",[e._v("highWaterMark")]),e._v(" 状态的内省数据。")]),e._v(" "),a("h6",{attrs:{id:"writable-writableobjectmode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writableobjectmode"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.writableObjectMode")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritableobjectmode",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_writableobjectmode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.3.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("给定 "),a("code",[e._v("Writable")]),e._v(" 流的属性 "),a("code",[e._v("objectMode")]),e._v(" 的获取器。")]),e._v(" "),a("h6",{attrs:{id:"writable-write-chunk-encoding-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-write-chunk-encoding-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable.write(chunk[, encoding][, callback])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writablewritechunk-encoding-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_write_chunk_encoding_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("chunk")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/ZbDkpm",target:"_blank",rel:"noopener noreferrer"}},[a("Uint8Array",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1),e._v(" 可选的要写入的数据。 对于不在对象模式下操作的流，"),a("code",[e._v("chunk")]),e._v(" 必须是字符串、"),a("code",[e._v("Buffer")]),e._v(" 或 "),a("code",[e._v("Uint8Array")]),e._v("。 对于对象模式的流，"),a("code",[e._v("chunk")]),e._v(" 可以是除 "),a("code",[e._v("null")]),e._v(" 之外的任何 JavaScript 值。")]),e._v(" "),a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 如果 "),a("code",[e._v("chunk")]),e._v(" 为字符串，则为编码。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("'utf8'")])]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1)]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 如果流希望调用代码在继续写入其他数据之前等待 "),a("code",[e._v("'drain'")]),e._v(" 事件被触发，则为 "),a("code",[e._v("false")]),e._v("；否则为 "),a("code",[e._v("true")]),e._v("。")])]),e._v(" "),a("p",[a("code",[e._v("writable.write()")]),e._v(" 方法将一些数据写入流，并在数据完全处理后调用提供的 "),a("code",[e._v("callback")]),e._v("。 如果发生错误，则 "),a("code",[e._v("callback")]),e._v(" 可能会或可能不会使用错误作为其第一个参数进行调用。 要可靠地检测写入错误，则为 "),a("code",[e._v("'error'")]),e._v(" 事件添加监听器。")]),e._v(" "),a("p",[e._v("如果在接纳 "),a("code",[e._v("chunk")]),e._v(" 后，内部缓冲区小于当创建流时配置的 "),a("code",[e._v("highWaterMark")]),e._v("，则返回值为 "),a("code",[e._v("true")]),e._v("。 如果返回 "),a("code",[e._v("false")]),e._v("，则应停止进一步尝试将数据写入流，直到触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_drain",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'drain'")]),a("OutboundLink")],1),e._v(" 事件。")]),e._v(" "),a("p",[e._v("当流没有排空时，对 "),a("code",[e._v("write()")]),e._v(" 的调用将缓冲 "),a("code",[e._v("chunk")]),e._v("，并返回 false。 一旦所有当前缓冲的块都被排空（操作系统接受交付），则将触发 "),a("code",[e._v("'drain'")]),e._v(" 事件。 建议一旦 "),a("code",[e._v("write()")]),e._v(" 返回 false，则在触发 "),a("code",[e._v("'drain'")]),e._v(" 事件之前不再写入块。 虽然允许在未排空的流上调用 "),a("code",[e._v("write()")]),e._v("，但 Node.js 将缓冲所有写入的块，直到出现最大内存使用量，此时它将无条件中止。 即使在它中止之前，高内存使用量也会导致垃圾收集器性能不佳和高 RSS（通常不会释放回系统，即使在不再需要内存之后）。 由于如果远程对等方不读取数据，TCP 套接字可能永远不会排空，因此写入未排空的套接字可能会导致可远程利用的漏洞。")]),e._v(" "),a("p",[e._v("在流未排空时写入数据对于 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 来说尤其成问题，因为 "),a("code",[e._v("Transform")]),e._v(" 流是默认暂停，直到它们被管道传输、或添加 "),a("code",[e._v("'data'")]),e._v(" 或 "),a("code",[e._v("'readable'")]),e._v(" 事件句柄。")]),e._v(" "),a("p",[e._v("如果要写入的数据可以按需生成或获取，则建议将逻辑封装成 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 并且使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pipe_destination_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pipe()")]),a("OutboundLink")],1),e._v("。 但是，如果首选调用 "),a("code",[e._v("write()")]),e._v("，则可以使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_drain",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'drain'")]),a("OutboundLink")],1),e._v(" 事件遵守背压并避免内存问题：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function write(data, cb) {\n  if (!stream.write(data)) {\n    stream.once('drain', cb);\n  } else {\n    process.nextTick(cb);\n  }\n}\n\n// 在执行任何其他写入之前等待回调被调用。\nwrite('hello', () => {\n  console.log('Write completed, do more writes now.');\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("对象模式下的 "),a("code",[e._v("Writable")]),e._v(" 流将始终忽略 "),a("code",[e._v("encoding")]),e._v(" 参数。")]),e._v(" "),a("h4",{attrs:{id:"可读流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可读流"}},[e._v("#")]),e._v(" 可读流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readable-streams",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_streams.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("可读流是对被消费的数据的来源的抽象。")]),e._v(" "),a("p",[a("code",[e._v("Readable")]),e._v(" 流的示例包括：")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/http.html#http_class_http_incomingmessage",target:"_blank",rel:"noopener noreferrer"}},[e._v("客户端上的 HTTP 响应"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/http.html#http_class_http_incomingmessage",target:"_blank",rel:"noopener noreferrer"}},[e._v("服务器上的 HTTP 请求"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_class_fs_readstream",target:"_blank",rel:"noopener noreferrer"}},[e._v("文件系统读取流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/zlib.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("加密流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/net.html#net_class_net_socket",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP 套接字"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_subprocess_stdout",target:"_blank",rel:"noopener noreferrer"}},[e._v("子进程的标准输出和标准错误"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdin",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("process.stdin")]),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("所有的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流都实现了 "),a("code",[e._v("stream.Readable")]),e._v(" 类定义的接口。")]),e._v(" "),a("h5",{attrs:{id:"两种读取模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种读取模式"}},[e._v("#")]),e._v(" 两种读取模式"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#two-reading-modes",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/two_reading_modes.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("Readable")]),e._v(" 流以两种模式之一有效地运行：流动和暂停。 这些模式与"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_object_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("对象模式"),a("OutboundLink")],1),e._v("是分开的。 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流可以处于或不处于对象模式，无论其是处于流动模式还是暂停模式。")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("在流动模式下，数据会自动从底层系统读取，并通过 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("EventEmitter")]),a("OutboundLink")],1),e._v(" 接口使用事件尽快提供给应用程序。")])]),e._v(" "),a("li",[a("p",[e._v("在暂停模式下，必须显式调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v(" 方法以从流中读取数据块。")])])]),e._v(" "),a("p",[e._v("所有的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流都以暂停模式开始，但可以通过以下方式之一切换到流动模式：")]),e._v(" "),a("ul",[a("li",[e._v("添加 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件句柄。")]),e._v(" "),a("li",[e._v("调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_resume",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.resume()")]),a("OutboundLink")],1),e._v(" 方法。")]),e._v(" "),a("li",[e._v("调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pipe_destination_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pipe()")]),a("OutboundLink")],1),e._v(" 方法将数据发送到 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v("。")])]),e._v(" "),a("p",[a("code",[e._v("Readable")]),e._v(" 可以使用以下方法之一切换回暂停模式：")]),e._v(" "),a("ul",[a("li",[e._v("如果没有管道目标，则通过调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pause",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pause()")]),a("OutboundLink")],1),e._v(" 方法。")]),e._v(" "),a("li",[e._v("如果有管道目标，则删除所有管道目标。 可以通过调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_unpipe_destination",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.unpipe()")]),a("OutboundLink")],1),e._v(" 方法删除多个管道目标。")])]),e._v(" "),a("p",[e._v("要记住的重要概念是，在提供消费或忽略该数据的机制之前，"),a("code",[e._v("Readable")]),e._v(" 不会产生数据。 如果消费机制被禁用或移除，则 "),a("code",[e._v("Readable")]),e._v(" 将尝试停止产生数据。")]),e._v(" "),a("p",[e._v("出于向后兼容性的原因，删除 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件句柄不会自动暂停流。 此外，如果有管道目标，则调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pause",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pause()")]),a("OutboundLink")],1),e._v(" 将不能保证一旦这些目标排空并要求更多数据，流将保持暂停状态。")]),e._v(" "),a("p",[e._v("如果 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 切换到流动模式并且没有消费者可用于处理数据，则数据将被丢失。 例如，当调用 "),a("code",[e._v("readable.resume()")]),e._v(" 方法而没有绑定到 "),a("code",[e._v("'data'")]),e._v(" 事件的监听器时，或者当从流中删除 "),a("code",[e._v("'data'")]),e._v(" 事件句柄时，就会发生这种情况。")]),e._v(" "),a("p",[e._v("添加 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'readable'")]),a("OutboundLink")],1),e._v(" 事件句柄会自动使流停止流动，并且必须通过 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.read()")]),a("OutboundLink")],1),e._v(" 来消费数据。 如果删除了 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'readable'")]),a("OutboundLink")],1),e._v(" 事件句柄，则如果有 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件句柄，流将再次开始流动。")]),e._v(" "),a("h5",{attrs:{id:"三种状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三种状态"}},[e._v("#")]),e._v(" 三种状态"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#three-states",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/three_states.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("Readable")]),e._v(' 流的操作的"两种模式"是对 '),a("code",[e._v("Readable")]),e._v(" 流实现中发生的更复杂的内部状态管理的简化抽象。")]),e._v(" "),a("p",[e._v("具体来说，在任何给定的时间点，每个 "),a("code",[e._v("Readable")]),e._v(" 都处于三种可能的状态之一：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("readable.readableFlowing === null")])]),e._v(" "),a("li",[a("code",[e._v("readable.readableFlowing === false")])]),e._v(" "),a("li",[a("code",[e._v("readable.readableFlowing === true")])])]),e._v(" "),a("p",[e._v("当 "),a("code",[e._v("readable.readableFlowing")]),e._v(" 为 "),a("code",[e._v("null")]),e._v(" 时，则不提供消费流数据的机制。 因此，流不会生成数据。 在此状态下，为 "),a("code",[e._v("'data'")]),e._v(" 事件绑定监听器、调用 "),a("code",[e._v("readable.pipe()")]),e._v(" 方法、或调用 "),a("code",[e._v("readable.resume()")]),e._v(" 方法会将 "),a("code",[e._v("readable.readableFlowing")]),e._v(" 切换到 "),a("code",[e._v("true")]),e._v("，从而使 "),a("code",[e._v("Readable")]),e._v(" 在生成数据时开始主动触发事件。")]),e._v(" "),a("p",[e._v("调用"),a("code",[e._v("readable.pause()")]),e._v("、"),a("code",[e._v("readable.unpipe()")]),e._v("、或者接收背压都会导致 "),a("code",[e._v("readable.readableFlowing")]),e._v(" 被设置为 "),a("code",[e._v("false")]),e._v("，暂时停止事件的流动，但不会停止数据的生成。 在此状态下，为 "),a("code",[e._v("'data'")]),e._v(" 事件绑定监听器不会将 "),a("code",[e._v("readable.readableFlowing")]),e._v(" 切换到 "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { PassThrough, Writable } = require('stream');\nconst pass = new PassThrough();\nconst writable = new Writable();\n\npass.pipe(writable);\npass.unpipe(writable);\n// readableFlowing 现在为 false。\n\npass.on('data', (chunk) => { console.log(chunk.toString()); });\npass.write('ok');  // 不会触发 'data'。\npass.resume();     // 必须调用才能使流触发 'data'。\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("虽然 "),a("code",[e._v("readable.readableFlowing")]),e._v(" 是 "),a("code",[e._v("false")]),e._v("，但数据可能会在流的内部缓冲区中累积。")]),e._v(" "),a("h5",{attrs:{id:"选择一种接口风格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择一种接口风格"}},[e._v("#")]),e._v(" 选择一种接口风格"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#choose-one-api-style",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/choose_one_api_style.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("Readable")]),e._v(" 流的 API 跨越多个 Node.js 版本的演进，并提供了多种消费流数据的方法。 一般情况下，开发者应该选择其中一种消费数据的方式，切忌使用多种方式消费单一流中的数据。 具体来说，使用 "),a("code",[e._v("on('data')")]),e._v("、"),a("code",[e._v("on('readable')")]),e._v("、"),a("code",[e._v("pipe()")]),e._v(" 或异步迭代器的组合可能会导致不直观的行为。")]),e._v(" "),a("p",[e._v("建议大多数用户使用 "),a("code",[e._v("readable.pipe()")]),e._v(" 方法，因为它已被实施以提供使用流数据的最简单方法。 需要对数据传输和生成进行更细粒度控制的开发者可以使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("EventEmitter")]),a("OutboundLink")],1),e._v(" 和 "),a("code",[e._v("readable.on('readable')")]),e._v("/"),a("code",[e._v("readable.read()")]),e._v(" 或 "),a("code",[e._v("readable.pause()")]),e._v("/"),a("code",[e._v("readable.resume()")]),e._v(" API。")]),e._v(" "),a("h5",{attrs:{id:"stream-readable-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-readable-类"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.Readable")]),e._v(" 类"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#class-streamreadable",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("h6",{attrs:{id:"close-事件-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#close-事件-2"}},[e._v("#")]),e._v(" "),a("code",[e._v("'close'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-close_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_close_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("当流及其任何底层资源（例如文件描述符）已关闭时，则会触发 "),a("code",[e._v("'close'")]),e._v(" 事件。 该事件表明将不再触发更多事件，并且不会发生进一步的计算。")]),e._v(" "),a("p",[e._v("如果 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流是使用 "),a("code",[e._v("emitClose")]),e._v(" 选项创建的，则始终会触发 "),a("code",[e._v("'close'")]),e._v(" 事件。")]),e._v(" "),a("h6",{attrs:{id:"data-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'data'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-data",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_data.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("chunk")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1),e._v(" 数据块。 对于不在对象模式下操作的流，块将是字符串或 "),a("code",[e._v("Buffer")]),e._v("。 对于处于对象模式的流，块可以是除 "),a("code",[e._v("null")]),e._v(" 之外的任何 JavaScript 值。")])]),e._v(" "),a("p",[e._v("每当流将数据块的所有权移交给消费者时，则会触发 "),a("code",[e._v("'data'")]),e._v(" 事件。 每当通过调用 "),a("code",[e._v("readable.pipe()")]),e._v("、"),a("code",[e._v("readable.resume()")]),e._v("、或通过将监听器回调绑定到 "),a("code",[e._v("'data'")]),e._v(" 事件而将流切换到流动模式时，就会发生这种情况。 每当调用 "),a("code",[e._v("readable.read()")]),e._v(" 方法并且可以返回数据块时，也会触发 "),a("code",[e._v("'data'")]),e._v(" 事件。")]),e._v(" "),a("p",[e._v("将 "),a("code",[e._v("'data'")]),e._v(" 事件监听器绑定到尚未显式暂停的流，则会将流切换到流动模式。 数据将在可用时立即传入。")]),e._v(" "),a("p",[e._v("如果使用 "),a("code",[e._v("readable.setEncoding()")]),e._v(" 方法为流指定了默认编码，则监听器回调将把数据块作为字符串传入；否则数据将作为 "),a("code",[e._v("Buffer")]),e._v(" 传入。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const readable = getReadableStreamSomehow();\nreadable.on('data', (chunk) => {\n  console.log(`Received ${chunk.length} bytes of data.`);\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h6",{attrs:{id:"end-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#end-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'end'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-end",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_end.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("p",[e._v("当流中没有更多数据可供消费时，则会触发 "),a("code",[e._v("'end'")]),e._v(" 事件。")]),e._v(" "),a("p",[e._v("除非数据被完全地消费，否则不会触发 "),a("code",[e._v("'end'")]),e._v(" 事件。 这可以通过将流切换到流动模式来实现，或者通过重复调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v(" 直到所有数据都被消费完。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const readable = getReadableStreamSomehow();\nreadable.on('data', (chunk) => {\n  console.log(`Received ${chunk.length} bytes of data.`);\n});\nreadable.on('end', () => {\n  console.log('There will be no more data.');\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h6",{attrs:{id:"error-事件-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-事件-2"}},[e._v("#")]),e._v(" "),a("code",[e._v("'error'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-error_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_error_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("'error'")]),e._v(" 事件可以随时由 "),a("code",[e._v("Readable")]),e._v(" 的实现触发。 通常，如果底层流由于底层内部故障而无法生成数据，或者当流实现尝试推送无效数据块时，可能会发生这种情况。")]),e._v(" "),a("p",[e._v("监听器回调将传入单个 "),a("code",[e._v("Error")]),e._v(" 对象。")]),e._v(" "),a("h6",{attrs:{id:"pause-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pause-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'pause'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-pause",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_pause.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("p",[e._v("当调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pause",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pause()")]),a("OutboundLink")],1),e._v(" 并且 "),a("code",[e._v("readableFlowing")]),e._v(" 不是 "),a("code",[e._v("false")]),e._v(" 时，则会触发 "),a("code",[e._v("'pause'")]),e._v(" 事件。")]),e._v(" "),a("h6",{attrs:{id:"readable-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'readable'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-readable",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_readable.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("当有可从流中读取的数据时，则会触发 "),a("code",[e._v("'readable'")]),e._v(" 事件。 在某些情况下，为 "),a("code",[e._v("'readable'")]),e._v(" 事件绑定监听器会导致一些数据被读入内部缓冲区。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const readable = getReadableStreamSomehow();\nreadable.on('readable', function() {\n  // 现在有一些数据要读取。\n  let data;\n\n  while (data = this.read()) {\n    console.log(data);\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("一旦到达流数据的末尾但在 "),a("code",[e._v("'end'")]),e._v(" 事件被触发之前，"),a("code",[e._v("'readable'")]),e._v(" 事件也将被触发。")]),e._v(" "),a("p",[e._v("实际上，"),a("code",[e._v("'readable'")]),e._v(" 事件表明流有新的信息：新的数据可用或已到达流末尾。 在前一种情况下，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v(" 将返回可用的数据。 在后一种情况下，"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v(" 将返回 "),a("code",[e._v("null")]),e._v("。 例如，在以下示例中，"),a("code",[e._v("foo.txt")]),e._v(" 是一个空文件：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const fs = require('fs');\nconst rr = fs.createReadStream('foo.txt');\nrr.on('readable', () => {\n  console.log(`readable: ${rr.read()}`);\n});\nrr.on('end', () => {\n  console.log('end');\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("运行此脚本的输出是：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ node test.js\nreadable: null\nend\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("一般来说，"),a("code",[e._v("readable.pipe()")]),e._v(" 和 "),a("code",[e._v("'data'")]),e._v(" 事件机制比 "),a("code",[e._v("'readable'")]),e._v(" 事件更容易理解。 但是，处理 "),a("code",[e._v("'readable'")]),e._v(" 可能会导致吞吐量增加。")]),e._v(" "),a("p",[e._v("如果同时使用 "),a("code",[e._v("'readable'")]),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v("，则 "),a("code",[e._v("'readable'")]),e._v(" 优先控制流，即只有在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v(" 时才会触发 "),a("code",[e._v("'data'")]),e._v("。 "),a("code",[e._v("readableFlowing")]),e._v(" 属性将变为 "),a("code",[e._v("false")]),e._v("。 如果在移除 "),a("code",[e._v("'readable'")]),e._v(" 时有 "),a("code",[e._v("'data'")]),e._v(" 个监听器，则流将开始流动，即 "),a("code",[e._v("'data'")]),e._v(" 事件将在不调用 "),a("code",[e._v(".resume()")]),e._v(" 的情况下触发。")]),e._v(" "),a("h6",{attrs:{id:"resume-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resume-事件"}},[e._v("#")]),e._v(" "),a("code",[e._v("'resume'")]),e._v(" 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#event-resume",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/event_resume.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("p",[e._v("当调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_resume",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.resume()")]),a("OutboundLink")],1),e._v(" 并且 "),a("code",[e._v("readableFlowing")]),e._v(" 不是 "),a("code",[e._v("true")]),e._v(" 时，则会触发 "),a("code",[e._v("'resume'")]),e._v(" 事件。")]),e._v(" "),a("h6",{attrs:{id:"readable-destroy-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-destroy-error"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.destroy([error])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readabledestroyerror",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_destroy_error.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("error")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1),e._v(" 将作为 "),a("code",[e._v("'error'")]),e._v(" 事件中的有效负载传递的错误")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("销毁流 可选地触发 "),a("code",[e._v("'error'")]),e._v(" 事件，并且触发 "),a("code",[e._v("'close'")]),e._v(" 事件（除非 "),a("code",[e._v("emitClose")]),e._v(" 设置为 "),a("code",[e._v("false")]),e._v("）。 在此调用之后，可读流将释放任何内部资源，随后对 "),a("code",[e._v("push()")]),e._v(" 的调用将被忽略。 实现者不应覆盖此方法，而应实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_destroy_err_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._destroy()")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"readable-destroyed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-destroyed"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.destroyed")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readabledestroyed",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_destroyed.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_destroy_error",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.destroy()")]),a("OutboundLink")],1),e._v(" 之后是 "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"readable-ispaused"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-ispaused"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.isPaused()")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readableispaused",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_ispaused.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.11.14")]),e._v(" "),a("ul",[a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("readable.isPaused()")]),e._v(" 方法返回 "),a("code",[e._v("Readable")]),e._v(" 的当前运行状态。 这主要由作为 "),a("code",[e._v("readable.pipe()")]),e._v(" 方法基础的机制使用。 在大多数典型情况下，没有理由直接使用此方法。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const readable = new stream.Readable();\n\nreadable.isPaused(); // === false\nreadable.pause();\nreadable.isPaused(); // === true\nreadable.resume();\nreadable.isPaused(); // === false\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h6",{attrs:{id:"readable-pause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-pause"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.pause()")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablepause",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_pause.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("readable.pause()")]),e._v(" 方法将导致处于流动模式的流停止触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件，切换出流动模式。 任何可用的数据都将保留在内部缓冲区中。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const readable = getReadableStreamSomehow();\nreadable.on('data', (chunk) => {\n  console.log(`Received ${chunk.length} bytes of data.`);\n  readable.pause();\n  console.log('There will be no additional data for 1 second.');\n  setTimeout(() => {\n    console.log('Now data will start flowing again.');\n    readable.resume();\n  }, 1000);\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("如果有 "),a("code",[e._v("'readable'")]),e._v(" 事件监听器，则 "),a("code",[e._v("readable.pause()")]),e._v(" 方法不起作用。")]),e._v(" "),a("h6",{attrs:{id:"readable-pipe-destination-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-pipe-destination-options"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.pipe(destination[, options])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablepipedestination-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_pipe_destination_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("destination")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamwritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Writable>"),a("OutboundLink")],1),e._v(" 写入数据的目标")]),e._v(" "),a("li",[a("code",[e._v("options")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[a("Object",[a("OutboundLink")],1)],1),e._v(" 管道选项\n"),a("ul",[a("li",[a("code",[e._v("end")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 当读取结束时结束写入。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("true")]),e._v("。")])])]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamwritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Writable>"),a("OutboundLink")],1),e._v(" 目标，如果它是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 或 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流，则允许使用管道链")])]),e._v(" "),a("p",[a("code",[e._v("readable.pipe()")]),e._v(" 方法将 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流绑定到 "),a("code",[e._v("readable")]),e._v("，使其自动切换到流动模式并将其所有数据推送到绑定的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v("。 数据流将被自动管理，以便目标 "),a("code",[e._v("Writable")]),e._v(" 流不会被更快的 "),a("code",[e._v("Readable")]),e._v(" 流漫过。")]),e._v(" "),a("p",[e._v("以下示例将 "),a("code",[e._v("readable")]),e._v(" 中的所有数据通过管道传输到名为 "),a("code",[e._v("file.txt")]),e._v(" 的文件中：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const fs = require('fs');\nconst readable = getReadableStreamSomehow();\nconst writable = fs.createWriteStream('file.txt');\n// 可读流的所有数据进入 'file.txt'。\nreadable.pipe(writable);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("可以将多个 "),a("code",[e._v("Writable")]),e._v(" 流绑定到单个 "),a("code",[e._v("Readable")]),e._v(" 流。")]),e._v(" "),a("p",[a("code",[e._v("readable.pipe()")]),e._v(" 方法返回对目标流的引用，从而可以建立管道流链：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const fs = require('fs');\nconst r = fs.createReadStream('file.txt');\nconst z = zlib.createGzip();\nconst w = fs.createWriteStream('file.txt.gz');\nr.pipe(z).pipe(w);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("默认情况下，当源 "),a("code",[e._v("Readable")]),e._v(" 流触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_end",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'end'")]),a("OutboundLink")],1),e._v(" 时，则在目标 "),a("code",[e._v("Writable")]),e._v(" 流上调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_end_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.end()")]),a("OutboundLink")],1),e._v("，因此目标不再可写。 要禁用此默认行为，可以将 "),a("code",[e._v("end")]),e._v(" 选项作为 "),a("code",[e._v("false")]),e._v(" 传入，从而使目标流保持打开状态：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("reader.pipe(writer, { end: false });\nreader.on('end', () => {\n  writer.end('Goodbye\\n');\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("有个重要的注意事项，如果 "),a("code",[e._v("Readable")]),e._v(" 流在处理过程中触发错误，则 "),a("code",[e._v("Writable")]),e._v(" 目标不会自动关闭。 如果发生错误，则需要手动关闭每个流以防止内存泄漏。")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stderr",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("process.stderr")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdout",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("process.stdout")]),a("OutboundLink")],1),e._v(" "),a("code",[e._v("Writable")]),e._v(" 流在 Node.js 进程退出之前永远不会关闭，无论指定的选项如何。")]),e._v(" "),a("h6",{attrs:{id:"readable-read-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-read-size"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.read([size])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadsize",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_read_size.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("size")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1),e._v(" 用于指定要读取的数据量的可选参数。")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[a("null",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("readable.read()")]),e._v(" 方法从内部缓冲区中取出一些数据并返回。 如果没有可供读取的数据，则返回 "),a("code",[e._v("null")]),e._v("。 默认情况下，数据将作为 "),a("code",[e._v("Buffer")]),e._v(" 对象返回，除非使用 "),a("code",[e._v("readable.setEncoding()")]),e._v(" 方法指定了编码、或者流是在对象模式下操作。")]),e._v(" "),a("p",[e._v("可选的 "),a("code",[e._v("size")]),e._v(" 参数指定要读取的特定字节数。 如果无法读取 "),a("code",[e._v("size")]),e._v(" 字节，则将返回 "),a("code",[e._v("null")]),e._v("，除非流已结束，在这种情况下，将返回内部缓冲区中剩余的所有数据。")]),e._v(" "),a("p",[e._v("如果未指定 "),a("code",[e._v("size")]),e._v(" 参数，则将返回内部缓冲区中包含的所有数据。")]),e._v(" "),a("p",[a("code",[e._v("readable.read()")]),e._v(" 方法应该只在暂停模式下操作的 "),a("code",[e._v("Readable")]),e._v(" 流上调用。 在流动模式下，会自动调用 "),a("code",[e._v("readable.read()")]),e._v("，直到内部缓冲区完全排空。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const readable = getReadableStreamSomehow();\n\n// 随着数据被缓冲，'readable' 可能会被多次触发\nreadable.on('readable', () => {\n  let chunk;\n  console.log('Stream is readable (new data received in buffer)');\n  // 使用循环来确保读取所有当前可用的数据\n  while (null !== (chunk = readable.read())) {\n    console.log(`Read ${chunk.length} bytes of data...`);\n  }\n});\n\n// 当没有更多可用数据时，则触发一次 'end'。\nreadable.on('end', () => {\n  console.log('Reached end of stream.');\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("p",[e._v("每次调用 "),a("code",[e._v("readable.read()")]),e._v(" 都会返回一个数据块或 "),a("code",[e._v("null")]),e._v("。 块不是串联的。 需要 "),a("code",[e._v("while")]),e._v(" 循环来消费当前缓冲区中的所有数据。 当读取大文件时，"),a("code",[e._v(".read()")]),e._v(" 可能会返回 "),a("code",[e._v("null")]),e._v("，到目前为止已经消费了所有缓冲的内容，但是还有更多的数据尚未缓冲。 在这种情况下，当缓冲区中有更多数据时，将触发新的 "),a("code",[e._v("'readable'")]),e._v(" 事件。 最后，当没有更多数据时，则将触发 "),a("code",[e._v("'end'")]),e._v(" 事件。")]),e._v(" "),a("p",[e._v("因此，要从 "),a("code",[e._v("readable")]),e._v(" 读取文件的全部内容，必须跨越多个 "),a("code",[e._v("'readable'")]),e._v(" 事件来收集块：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const chunks = [];\n\nreadable.on('readable', () => {\n  let chunk;\n  while (null !== (chunk = readable.read())) {\n    chunks.push(chunk);\n  }\n});\n\nreadable.on('end', () => {\n  const content = chunks.join('');\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("对象模式下的 "),a("code",[e._v("Readable")]),e._v(" 流将始终从对 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.read(size)")]),a("OutboundLink")],1),e._v(" 的调用返回单个条目，而不管 "),a("code",[e._v("size")]),e._v(" 参数的值如何。")]),e._v(" "),a("p",[e._v("如果 "),a("code",[e._v("readable.read()")]),e._v(" 方法返回数据块，则还将触发 "),a("code",[e._v("'data'")]),e._v(" 事件。")]),e._v(" "),a("p",[e._v("在 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_end",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'end'")]),a("OutboundLink")],1),e._v(" 事件触发后调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read([size])")]),a("OutboundLink")],1),e._v(" 将返回 "),a("code",[e._v("null")]),e._v("。 不会引发运行时错误。")]),e._v(" "),a("h6",{attrs:{id:"readable-readable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-readable"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.readable")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadable",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v11.4.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("Is "),a("code",[e._v("true")]),e._v(" if it is safe to call "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.read()")]),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h6",{attrs:{id:"readable-readableencoding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableencoding"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.readableEncoding")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadableencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_readableencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.7.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[a("null",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("给定 "),a("code",[e._v("Readable")]),e._v(" 流的属性 "),a("code",[e._v("encoding")]),e._v(" 的获取器。 可以使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_setencoding_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.setEncoding()")]),a("OutboundLink")],1),e._v(" 方法设置 "),a("code",[e._v("encoding")]),e._v(" 属性。")]),e._v(" "),a("h6",{attrs:{id:"readable-readableended"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableended"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.readableEnded")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadableended",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_readableended.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.9.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("当触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_end",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'end'")]),a("OutboundLink")],1),e._v(" 事件时变为 "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"readable-readableflowing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableflowing"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.readableFlowing")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadableflowing",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_readableflowing.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v9.4.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("此属性反映了 "),a("code",[e._v("Readable")]),e._v(" 流的当前状态，如"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_three_states",target:"_blank",rel:"noopener noreferrer"}},[e._v("三种状态"),a("OutboundLink")],1),e._v("章节所述。")]),e._v(" "),a("h6",{attrs:{id:"readable-readablehighwatermark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-readablehighwatermark"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.readableHighWaterMark")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadablehighwatermark",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_readablehighwatermark.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v9.3.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("返回构造此 "),a("code",[e._v("Readable")]),e._v(" 时传入的 "),a("code",[e._v("highWaterMark")]),e._v(" 的值。")]),e._v(" "),a("h6",{attrs:{id:"readable-readablelength"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-readablelength"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.readableLength")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadablelength",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_readablelength.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v9.4.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("此属性包含队列中准备读取的字节数（或对象数）。 该值提供有关 "),a("code",[e._v("highWaterMark")]),e._v(" 状态的内省数据。")]),e._v(" "),a("h6",{attrs:{id:"readable-readableobjectmode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-readableobjectmode"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.readableObjectMode")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablereadableobjectmode",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_readableobjectmode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.3.0")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("给定 "),a("code",[e._v("Readable")]),e._v(" 流的属性 "),a("code",[e._v("objectMode")]),e._v(" 的获取器。")]),e._v(" "),a("h6",{attrs:{id:"readable-resume"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-resume"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.resume()")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readableresume",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_resume.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("readable.resume()")]),e._v(" 方法使被显式暂停的 "),a("code",[e._v("Readable")]),e._v(" 流恢复触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件，将流切换到流动模式。")]),e._v(" "),a("p",[a("code",[e._v("readable.resume()")]),e._v(" 方法可用于完全地消费流中的数据，而无需实际处理任何数据：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("getReadableStreamSomehow()\n  .resume()\n  .on('end', () => {\n    console.log('Reached the end, but did not read anything.');\n  });\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("如果有 "),a("code",[e._v("'readable'")]),e._v(" 事件监听器，则 "),a("code",[e._v("readable.resume()")]),e._v(" 方法不起作用。")]),e._v(" "),a("h6",{attrs:{id:"readable-setencoding-encoding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-setencoding-encoding"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.setEncoding(encoding)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablesetencodingencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_setencoding_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 要使用的编码。")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("readable.setEncoding()")]),e._v(" 方法为从 "),a("code",[e._v("Readable")]),e._v(" 流读取的数据设置字符编码。")]),e._v(" "),a("p",[e._v("默认情况下，没有分配编码，流数据将作为 "),a("code",[e._v("Buffer")]),e._v(" 对象返回。 设置编码会导致流数据作为指定编码的字符串而不是 "),a("code",[e._v("Buffer")]),e._v(" 对象返回。 例如，调用 "),a("code",[e._v("readable.setEncoding('utf8')")]),e._v(" 将导致输出数据被解释为 UTF-8 数据，并作为字符串传入。 调用 "),a("code",[e._v("readable.setEncoding('hex')")]),e._v(" 将使数据以十六进制字符串格式进行编码。")]),e._v(" "),a("p",[a("code",[e._v("Readable")]),e._v(" 流将正确地处理通过流传递的多字节字符，否则如果简单地从流中提取为 "),a("code",[e._v("Buffer")]),e._v(" 对象，这些字符将无法正确解码。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const readable = getReadableStreamSomehow();\nreadable.setEncoding('utf8');\nreadable.on('data', (chunk) => {\n  assert.equal(typeof chunk, 'string');\n  console.log('Got %d characters of string data:', chunk.length);\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h6",{attrs:{id:"readable-unpipe-destination"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-unpipe-destination"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.unpipe([destination])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readableunpipedestination",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_unpipe_destination.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("destination")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamwritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Writable>"),a("OutboundLink")],1),e._v(" 可选的要取消管道的特定流")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[a("code",[e._v("readable.unpipe()")]),e._v(" 方法分离先前使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pipe_destination_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pipe()")]),a("OutboundLink")],1),e._v(" 方法绑定的 "),a("code",[e._v("Writable")]),e._v(" 流。")]),e._v(" "),a("p",[e._v("如果未指定 "),a("code",[e._v("destination")]),e._v("，则所有管道都将分离。")]),e._v(" "),a("p",[e._v("如果指定了 "),a("code",[e._v("destination")]),e._v("，但没有为其设置管道，则该方法不执行任何操作。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const fs = require('fs');\nconst readable = getReadableStreamSomehow();\nconst writable = fs.createWriteStream('file.txt');\n// 可读流的所有数据进入 'file.txt'，\n// 但只有第一秒。\nreadable.pipe(writable);\nsetTimeout(() => {\n  console.log('Stop writing to file.txt.');\n  readable.unpipe(writable);\n  console.log('Manually close the file stream.');\n  writable.end();\n}, 1000);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("h6",{attrs:{id:"readable-unshift-chunk-encoding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-unshift-chunk-encoding"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.unshift(chunk[, encoding])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readableunshiftchunk-encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_unshift_chunk_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("chunk")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/ZbDkpm",target:"_blank",rel:"noopener noreferrer"}},[a("Uint8Array",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[a("null",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1),e._v(" 要取消转移到读取队列的数据块。 对于不在对象模式下操作的流，"),a("code",[e._v("chunk")]),e._v(" 必须是字符串、"),a("code",[e._v("Buffer")]),e._v("、"),a("code",[e._v("Uint8Array")]),e._v("、或 "),a("code",[e._v("null")]),e._v("。 对于对象模式的流，"),a("code",[e._v("chunk")]),e._v(" 可以是任何 JavaScript 值。")]),e._v(" "),a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 字符串块的编码。 必须是有效的 "),a("code",[e._v("Buffer")]),e._v(" 编码，例如 "),a("code",[e._v("'utf8'")]),e._v(" 或 "),a("code",[e._v("'ascii'")]),e._v("。")])]),e._v(" "),a("p",[e._v("将 "),a("code",[e._v("chunk")]),e._v(" 作为 "),a("code",[e._v("null")]),e._v(" 传入信号流结束 (EOF)，其行为与 "),a("code",[e._v("readable.push(null)")]),e._v(" 相同，之后无法写入更多数据。 EOF 信号放在缓冲区的末尾，任何缓冲的数据仍将被刷新。")]),e._v(" "),a("p",[a("code",[e._v("readable.unshift()")]),e._v(' 方法将数据块推回内部缓冲区。 这在某些情况下很有用，其中流被代码消费，需要"取消消耗"它已经从源中提取的一定数量的数据，以便数据可以传给其他方。')]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_end",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'end'")]),a("OutboundLink")],1),e._v(" 事件触发后不能调用 "),a("code",[e._v("stream.unshift(chunk)")]),e._v(" 方法，否则会抛出运行时错误。")]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("stream.unshift()")]),e._v(" 的开发者通常应该考虑改用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流。 有关更多信息，请参阅"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_api_for_stream_implementers",target:"_blank",rel:"noopener noreferrer"}},[e._v("流实现者的 API"),a("OutboundLink")],1),e._v(" 章节。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 拉出由 \\n\\n 分隔的标题。\n// 如果获取太多，则使用 unshift()。\n// 使用 (error, header, stream) 调用回调。\nconst { StringDecoder } = require('string_decoder');\nfunction parseHeader(stream, callback) {\n  stream.on('error', callback);\n  stream.on('readable', onReadable);\n  const decoder = new StringDecoder('utf8');\n  let header = '';\n  function onReadable() {\n    let chunk;\n    while (null !== (chunk = stream.read())) {\n      const str = decoder.write(chunk);\n      if (str.match(/\\n\\n/)) {\n        // 找到标题边界。\n        const split = str.split(/\\n\\n/);\n        header += split.shift();\n        const remaining = split.join('\\n\\n');\n        const buf = Buffer.from(remaining, 'utf8');\n        stream.removeListener('error', callback);\n        // 在取消移位之前删除 'readable' 监听器。\n        stream.removeListener('readable', onReadable);\n        if (buf.length)\n          stream.unshift(buf);\n        // 现在可以从流中读取消息的正文。\n        callback(null, header, stream);\n      } else {\n        // 仍在阅读标题。\n        header += str;\n      }\n    }\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br")])]),a("p",[e._v("与 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push_chunk_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.push(chunk)")]),a("OutboundLink")],1),e._v(" 不同，"),a("code",[e._v("stream.unshift(chunk)")]),e._v(" 不会通过重置流的内部读取状态来结束读取过程。 如果在读取期间调用 "),a("code",[e._v("readable.unshift()")]),e._v("（即从自定义流上的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._read()")]),a("OutboundLink")],1),e._v(" 实现中调用），这可能会导致意外结果。 在立即调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push_chunk_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.push('')")]),a("OutboundLink")],1),e._v(" 之后调用 "),a("code",[e._v("readable.unshift()")]),e._v(" 将适当地重置读取状态，但是最好避免在执行读取过程中调用 "),a("code",[e._v("readable.unshift()")]),e._v("。")]),e._v(" "),a("h6",{attrs:{id:"readable-wrap-stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-wrap-stream"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.wrap(stream)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablewrapstream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_wrap_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("stream")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#stream",target:"_blank",rel:"noopener noreferrer"}},[a("Stream",[a("OutboundLink")],1)],1),e._v(" “旧式”的可读流")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("在 Node.js 0.10 之前，流没有实现当前定义的整个 "),a("code",[e._v("stream")]),e._v(" 模块 API。 （有关更多信息，请参阅"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_compatibility_with_older_node_js_versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("兼容性"),a("OutboundLink")],1),e._v("。）")]),e._v(" "),a("p",[e._v("当使用旧的 Node.js 库，它触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件并且有一个 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pause",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pause()")]),a("OutboundLink")],1),e._v(" 方法只是建议性的，"),a("code",[e._v("readable.wrap()")]),e._v(" 方法可用于创建一个使用旧流作为其数据源的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流。")]),e._v(" "),a("p",[e._v("很少需要使用 "),a("code",[e._v("readable.wrap()")]),e._v("，但提供该方法是为了方便与较旧的 Node.js 应用程序和库进行交互。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { OldReader } = require('./old-api-module.js');\nconst { Readable } = require('stream');\nconst oreader = new OldReader();\nconst myReader = new Readable().wrap(oreader);\n\nmyReader.on('readable', () => {\n  myReader.read(); // 等等。\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h6",{attrs:{id:"readable-symbol-asynciterator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-symbol-asynciterator"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable[Symbol.asyncIterator]()")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablesymbolasynciterator",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_symbol_asynciterator.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/HnG4ws",target:"_blank",rel:"noopener noreferrer"}},[a("AsyncIterator",[a("OutboundLink")],1)],1),e._v(" 以完全消费流。")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const fs = require('fs');\n\nasync function print(readable) {\n  readable.setEncoding('utf8');\n  let data = '';\n  for await (const chunk of readable) {\n    data += chunk;\n  }\n  console.log(data);\n}\n\nprint(fs.createReadStream('file')).catch(console.error);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("如果循环以 "),a("code",[e._v("break")]),e._v(" 或 "),a("code",[e._v("throw")]),e._v(" 终止，则流将被销毁。 换句话说，遍历流将完全消费流。 流将以大小等于 "),a("code",[e._v("highWaterMark")]),e._v(" 选项的块读取。 在上面的代码示例中，如果文件的数据少于 64KB，则数据将位于单个块中，因为没有为 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_fs_createreadstream_path_options",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("fs.createReadStream()")]),a("OutboundLink")],1),e._v(" 提供 "),a("code",[e._v("highWaterMark")]),e._v(" 选项。")]),e._v(" "),a("h4",{attrs:{id:"双工流与转换流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双工流与转换流"}},[e._v("#")]),e._v(" 双工流与转换流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#duplex-and-transform-streams",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("h5",{attrs:{id:"stream-duplex-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-duplex-类"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.Duplex")]),e._v(" 类"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#class-streamduplex",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/class_stream_duplex.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("双工流是同时实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 接口的流。")]),e._v(" "),a("p",[a("code",[e._v("Duplex")]),e._v(" 流的示例包括：")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/net.html#net_class_net_socket",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP 套接字"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/zlib.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("加密流"),a("OutboundLink")],1)])]),e._v(" "),a("h5",{attrs:{id:"stream-transform-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-transform-类"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.Transform")]),e._v(" 类"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#class-streamtransform",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/class_stream_transform.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("p",[e._v("转换流是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流，其中输出以某种方式与输入相关。 与所有 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流一样，"),a("code",[e._v("Transform")]),e._v(" 流实现了 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 接口。")]),e._v(" "),a("p",[a("code",[e._v("Transform")]),e._v(" 流的示例包括：")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/zlib.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩流"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("加密流"),a("OutboundLink")],1)])]),e._v(" "),a("h6",{attrs:{id:"transform-destroy-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform-destroy-error"}},[e._v("#")]),e._v(" "),a("code",[e._v("transform.destroy([error])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#transformdestroyerror",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/transform_destroy_error.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("error")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1)]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/v7Fsu2",target:"_blank",rel:"noopener noreferrer"}},[a("this",[a("OutboundLink")],1)],1)])]),e._v(" "),a("p",[e._v("销毁流，并可选择地触发 "),a("code",[e._v("'error'")]),e._v(" 事件。 在此调用之后，转换流将释放任何内部资源。 实现者不应覆盖此方法，而应实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_destroy_err_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._destroy()")]),a("OutboundLink")],1),e._v("。 "),a("code",[e._v("Transform")]),e._v(" 的 "),a("code",[e._v("_destroy()")]),e._v(" 的默认实现也会触发 "),a("code",[e._v("'close'")]),e._v("，除非 "),a("code",[e._v("emitClose")]),e._v(" 设置为 false。")]),e._v(" "),a("h4",{attrs:{id:"stream-finished-stream-options-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-finished-stream-options-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.finished(stream[, options], callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#streamfinishedstream-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/stream_finished_stream_options_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v10.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("stream")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#stream",target:"_blank",rel:"noopener noreferrer"}},[a("Stream",[a("OutboundLink")],1)],1),e._v(" 可读和/或可写的流。")]),e._v(" "),a("li",[a("code",[e._v("options")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[a("Object",[a("OutboundLink")],1)],1),e._v(" "),a("ul",[a("li",[a("code",[e._v("error")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 如果设置为 "),a("code",[e._v("false")]),e._v("，则对 "),a("code",[e._v("emit('error', err)")]),e._v(" 的调用不会被视为已完成。 "),a("strong",[e._v("默认值")]),e._v(": "),a("code",[e._v("true")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("readable")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 当设置为 "),a("code",[e._v("false")]),e._v(" 时，即使流可能仍然可读，也会在流结束时调用回调。 "),a("strong",[e._v("默认值")]),e._v(": "),a("code",[e._v("true")]),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("writable")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 当设置为 "),a("code",[e._v("false")]),e._v(" 时，即使流可能仍可写，也会在流结束时调用回调。 "),a("strong",[e._v("默认值")]),e._v(": "),a("code",[e._v("true")]),e._v(".")])])]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 采用可选的错误参数的回调函数。")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 清除所有已注册监听器的函数。")])]),e._v(" "),a("p",[e._v("当流不再可读、可写或遇到错误或过早关闭事件时获得通知的函数。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { finished } = require('stream');\n\nconst rs = fs.createReadStream('archive.tar');\n\nfinished(rs, (err) => {\n  if (err) {\n    console.error('Stream failed.', err);\n  } else {\n    console.log('Stream is done reading.');\n  }\n});\n\nrs.resume(); // 排空流。\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("p",[e._v("在流被过早销毁（如中止的 HTTP 请求）并且不会触发 "),a("code",[e._v("'end'")]),e._v(" 或 "),a("code",[e._v("'finish'")]),e._v(" 的错误处理场景中特别有用。")]),e._v(" "),a("p",[a("code",[e._v("finished")]),e._v(" API 也是可 promise 化的；")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const finished = util.promisify(stream.finished);\n\nconst rs = fs.createReadStream('archive.tar');\n\nasync function run() {\n  await finished(rs);\n  console.log('Stream is done reading.');\n}\n\nrun().catch(console.error);\nrs.resume(); // 排空流。\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[a("code",[e._v("stream.finished()")]),e._v(" 在调用 "),a("code",[e._v("callback")]),e._v(" 后离开悬空事件监听器（特别是 "),a("code",[e._v("'error'")]),e._v("、"),a("code",[e._v("'end'")]),e._v("、"),a("code",[e._v("'finish'")]),e._v(" 和 "),a("code",[e._v("'close'")]),e._v("）。 这样做的原因是意外的 "),a("code",[e._v("'error'")]),e._v(" 事件（由于不正确的流实现）不会导致意外崩溃。 如果这是不需要的行为，则需要在回调中调用返回的清理函数：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const cleanup = finished(rs, (err) => {\n  cleanup();\n  // ...\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h4",{attrs:{id:"stream-pipeline-streams-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-pipeline-streams-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.pipeline(...streams, callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#streampipelinestreams-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/stream_pipeline_streams_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v10.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("...streams")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#stream",target:"_blank",rel:"noopener noreferrer"}},[a("Stream",[a("OutboundLink")],1)],1)]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 当管道完全完成时调用。\n"),a("ul",[a("li",[a("code",[e._v("err")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1)])])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { pipeline } = require('stream');\nconst fs = require('fs');\nconst zlib = require('zlib');\n\n// 使用管道 API 可以轻松地将一系列流传输到一起，\n// 并在管道完全完成时收到通知。\n\n// 有效地 gzip 潜在巨大的 tar 文件的管道：\n\npipeline(\n  fs.createReadStream('archive.tar'),\n  zlib.createGzip(),\n  fs.createWriteStream('archive.tar.gz'),\n  (err) => {\n    if (err) {\n      console.error('Pipeline failed.', err);\n    } else {\n      console.log('Pipeline succeeded.');\n    }\n  }\n);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br")])]),a("p",[a("code",[e._v("pipeline")]),e._v(" API 也是可 promise 化的：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const pipeline = util.promisify(stream.pipeline);\n\nasync function run() {\n  await pipeline(\n    fs.createReadStream('archive.tar'),\n    zlib.createGzip(),\n    fs.createWriteStream('archive.tar.gz')\n  );\n  console.log('Pipeline succeeded.');\n}\n\nrun().catch(console.error);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[a("code",[e._v("stream.pipeline()")]),e._v(" 将在所有流上调用 "),a("code",[e._v("stream.destroy(err)")]),e._v("，除了：")]),e._v(" "),a("ul",[a("li",[e._v("已触发 "),a("code",[e._v("'end'")]),e._v(" 或 "),a("code",[e._v("'close'")]),e._v(" 的 "),a("code",[e._v("Readable")]),e._v(" 流。")]),e._v(" "),a("li",[e._v("已触发 "),a("code",[e._v("'finish'")]),e._v(" 或 "),a("code",[e._v("'close'")]),e._v(" 的 "),a("code",[e._v("Writable")]),e._v(" 流。")])]),e._v(" "),a("p",[e._v("在调用 "),a("code",[e._v("callback")]),e._v(" 后，"),a("code",[e._v("stream.pipeline()")]),e._v(" 在流上留下悬空事件监听器。 在失败后重用流的情况下，这可能会导致事件监听器泄漏和吞下错误。")]),e._v(" "),a("h4",{attrs:{id:"stream-readable-from-iterable-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-readable-from-iterable-options"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.Readable.from(iterable, [options])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#streamreadablefromiterable-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/stream_readable_from_iterable_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v12.3.0, v10.17.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("iterable")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/mQfCyy",target:"_blank",rel:"noopener noreferrer"}},[a("Iterable",[a("OutboundLink")],1)],1),e._v(" 实现 "),a("code",[e._v("Symbol.asyncIterator")]),e._v(" 或 "),a("code",[e._v("Symbol.iterator")]),e._v(" 可迭代协议的对象。 如果传入空值，则触发 'error' 事件。")]),e._v(" "),a("li",[a("code",[e._v("options")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[a("Object",[a("OutboundLink")],1)],1),e._v(" 提供给 "),a("code",[e._v("new stream.Readable([options])")]),e._v(" 的选项。 默认情况下，"),a("code",[e._v("Readable.from()")]),e._v(" 会将 "),a("code",[e._v("options.objectMode")]),e._v(" 设置为 "),a("code",[e._v("true")]),e._v("，除非通过将 "),a("code",[e._v("options.objectMode")]),e._v(" 设置为 "),a("code",[e._v("false")]),e._v(" 来明确选择退出。")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamreadable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Readable>"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("一个从迭代器中创建可读流的实用方法。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Readable } = require('stream');\n\nasync function * generate() {\n  yield 'hello';\n  yield 'streams';\n}\n\nconst readable = Readable.from(generate());\n\nreadable.on('data', (chunk) => {\n  console.log(chunk);\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("出于性能原因，调用 "),a("code",[e._v("Readable.from(string)")]),e._v(" 或 "),a("code",[e._v("Readable.from(buffer)")]),e._v(" 不会迭代字符串或缓冲区以匹配其他流语义。")]),e._v(" "),a("h3",{attrs:{id:"流实现者的-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流实现者的-api"}},[e._v("#")]),e._v(" 流实现者的 API"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#api-for-stream-implementers",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/api_for_stream_implementers.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("stream")]),e._v(" 模块 API 旨在使使用 JavaScript 的原型继承模型轻松实现流成为可能。")]),e._v(" "),a("p",[e._v("首先，流开发者将声明新的 JavaScript 类，该类扩展四个基本流类（"),a("code",[e._v("stream.Writable")]),e._v("、"),a("code",[e._v("stream.Readable")]),e._v("、"),a("code",[e._v("stream.Duplex")]),e._v(" 或 "),a("code",[e._v("stream.Transform")]),e._v("）之一，确保它们调用适当的父类构造函数：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\n\nclass MyWritable extends Writable {\n  constructor({ highWaterMark, ...options }) {\n    super({\n      highWaterMark,\n      autoDestroy: true,\n      emitClose: true\n    });\n    // ...\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("p",[e._v("当扩展流时，在将这些选项转发给基本构造函数之前，请记住用户可以和应该提供哪些选项。 例如，如果实现对 "),a("code",[e._v("autoDestroy")]),e._v(" 和 "),a("code",[e._v("emitClose")]),e._v(" 选项做出假设，则不允许用户覆盖这些。 显式转发哪些选项，而不是隐式转发所有选项。")]),e._v(" "),a("p",[e._v("然后，新的流类必须实现一个或多个特定方法，具体取决于正在创建的流的类型，如下图所示：")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("用例")]),e._v(" "),a("th",[e._v("类")]),e._v(" "),a("th",[e._v("要实现的方法")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("只读")]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1)]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_read()")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",[e._v("只写")]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1)]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_write()")]),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_writev_chunks_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_writev()")]),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_final_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_final()")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",[e._v("可读可写")]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1)]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_read()")]),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_write()")]),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_writev_chunks_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_writev()")]),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_final_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_final()")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",[e._v("对写入的数据进行操作，然后读取结果")]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1)]),e._v(" "),a("td",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_transform_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_transform()")]),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_flush_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_flush()")]),a("OutboundLink")],1),e._v(", "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_final_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("_final()")]),a("OutboundLink")],1)])])])]),e._v(" "),a("p",[e._v("流的实现代码永远不应该调用供消费者使用的流的“公共”方法（如"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_api_for_stream_consumers",target:"_blank",rel:"noopener noreferrer"}},[e._v("流消费者的 API"),a("OutboundLink")],1),e._v(" 章节所述）。 这样做可能会对使用流的应用程序代码产生不利的副作用。")]),e._v(" "),a("p",[e._v("避免覆盖公共方法，例如 "),a("code",[e._v("write()")]),e._v("、"),a("code",[e._v("end()")]),e._v("、"),a("code",[e._v("cork()")]),e._v("、"),a("code",[e._v("uncork()")]),e._v("、"),a("code",[e._v("read()")]),e._v(" 和 "),a("code",[e._v("destroy()")]),e._v("，或触发内部事件，例如 "),a("code",[e._v("'error'")]),e._v("、"),a("code",[e._v("'data'")]),e._v("、"),a("code",[e._v("'end'")]),e._v("、"),a("code",[e._v("'finish'")]),e._v(" 和 "),a("code",[e._v("'close'")]),e._v(" 到 "),a("code",[e._v(".emit()")]),e._v("。 这样做可能会破坏当前和未来的流的不变量，从而导致行为和/或与其他流、流实用程序和用户期望的兼容性问题。")]),e._v(" "),a("h4",{attrs:{id:"简单的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单的实现"}},[e._v("#")]),e._v(" 简单的实现"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#simplified-construction",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/simplified_construction.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v1.2.0")]),e._v(" "),a("p",[e._v("对于许多简单的情况，可以在不依赖继承的情况下构造流。 这可以通过直接创建 "),a("code",[e._v("stream.Writable")]),e._v("、"),a("code",[e._v("stream.Readable")]),e._v("、"),a("code",[e._v("stream.Duplex")]),e._v(" 或 "),a("code",[e._v("stream.Transform")]),e._v(" 对象的实例并传入适当的方法作为构造函数选项来实现。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\n\nconst myWritable = new Writable({\n  write(chunk, encoding, callback) {\n    // ...\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h4",{attrs:{id:"实现可写流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现可写流"}},[e._v("#")]),e._v(" 实现可写流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#implementing-a-writable-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/implementing_a_writable_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("stream.Writable")]),e._v(" 类被扩展以实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流。")]),e._v(" "),a("p",[e._v("自定义的 "),a("code",[e._v("Writable")]),e._v(" 流必须调用 "),a("code",[e._v("new stream.Writable([options])")]),e._v(" 构造函数并实现 "),a("code",[e._v("writable._write()")]),e._v(" 和/或 "),a("code",[e._v("writable._writev()")]),e._v(" 方法。")]),e._v(" "),a("h5",{attrs:{id:"new-stream-writable-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-stream-writable-options"}},[e._v("#")]),e._v(" "),a("code",[e._v("new stream.Writable([options])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#new-streamwritableoptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/new_stream_writable_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("options")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[a("Object",[a("OutboundLink")],1)],1),e._v(" "),a("ul",[a("li",[a("code",[e._v("highWaterMark")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v(" 开始返回 "),a("code",[e._v("false")]),e._v(" 时的缓冲级别。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("16384")]),e._v(" (16KB) 或 "),a("code",[e._v("16")]),e._v(" 表示 "),a("code",[e._v("objectMode")]),e._v(" 流。")]),e._v(" "),a("li",[a("code",[e._v("decodeStrings")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 是否将传给 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v(" 的 "),a("code",[e._v("string")]),e._v(" 编码为 "),a("code",[e._v("Buffer")]),e._v("（使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v(" 调用中指定的编码），然后再将它们传给 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._write()")]),a("OutboundLink")],1),e._v("。 其他类型的数据不会被转换（即 "),a("code",[e._v("Buffer")]),e._v(" 不会被解码为 "),a("code",[e._v("string")]),e._v("）。 设置为 false 将阻止 "),a("code",[e._v("string")]),e._v(" 被转换。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("defaultEncoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 当没有将编码指定为 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v(" 的参数时使用的默认编码。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("'utf8'")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("objectMode")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write(anyObj)")]),a("OutboundLink")],1),e._v(" 是否为有效操作。 当设置后，如果流实现支持，则可以写入字符串、"),a("code",[e._v("Buffer")]),e._v(" 或 "),a("code",[e._v("Uint8Array")]),e._v(" 以外的 JavaScript 值。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("false")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("emitClose")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 流被销毁后是否应该触发 "),a("code",[e._v("'close'")]),e._v("。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("write")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._write()")]),a("OutboundLink")],1),e._v(" 方法的实现。")]),e._v(" "),a("li",[a("code",[e._v("writev")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_writev_chunks_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._writev()")]),a("OutboundLink")],1),e._v(" 方法的实现。")]),e._v(" "),a("li",[a("code",[e._v("destroy")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_destroy_err_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._destroy()")]),a("OutboundLink")],1),e._v(" 方法的实现。")]),e._v(" "),a("li",[a("code",[e._v("final")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_final_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._final()")]),a("OutboundLink")],1),e._v(" 方法的实现。")]),e._v(" "),a("li",[a("code",[e._v("autoDestroy")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 此流是否应在结束后自动调用自身的 "),a("code",[e._v(".destroy()")]),e._v("。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("false")]),e._v("。")])])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\n\nclass MyWritable extends Writable {\n  constructor(options) {\n    // 调用 stream.Writable() 构造函数。\n    super(options);\n    // ...\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("或者，当使用 ES6 之前的风格构造函数时：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\nconst util = require('util');\n\nfunction MyWritable(options) {\n  if (!(this instanceof MyWritable))\n    return new MyWritable(options);\n  Writable.call(this, options);\n}\nutil.inherits(MyWritable, Writable);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("或者，使用简化的构造函数方法：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\n\nconst myWritable = new Writable({\n  write(chunk, encoding, callback) {\n    // ...\n  },\n  writev(chunks, callback) {\n    // ...\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("h5",{attrs:{id:"writable-write-chunk-encoding-callback-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-write-chunk-encoding-callback-2"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable._write(chunk, encoding, callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writable_writechunk-encoding-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_write_chunk_encoding_callback_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("chunk")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1),e._v(" 要写入的 "),a("code",[e._v("Buffer")]),e._v("，从 "),a("code",[e._v("string")]),e._v(" 转换为 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v("。 如果流的 "),a("code",[e._v("decodeStrings")]),e._v(" 选项是 "),a("code",[e._v("false")]),e._v(" 或者流在对象模式下运行，则块将不会被转换，而是传给 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v(" 的任何内容。")]),e._v(" "),a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 如果块是字符串，则 "),a("code",[e._v("encoding")]),e._v(" 是该字符串的字符编码。 如果块是 "),a("code",[e._v("Buffer")]),e._v("，或者如果流在对象模式下运行，则可以忽略 "),a("code",[e._v("encoding")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 当对提供的块的处理完成时调用此函数（可选地带有错误参数）。")])]),e._v(" "),a("p",[e._v("所有 "),a("code",[e._v("Writable")]),e._v(" 流实现都必须提供 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._write()")]),a("OutboundLink")],1),e._v(" 和/或 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_writev_chunks_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._writev()")]),a("OutboundLink")],1),e._v(" 方法来将数据发送到底层资源。")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流提供了它们自己的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._write()")]),a("OutboundLink")],1),e._v(" 实现。")]),e._v(" "),a("p",[e._v("此函数不得由应用程序代码直接调用。 它应该由子类实现，并且只能由内部 "),a("code",[e._v("Writable")]),e._v(" 类方法调用。")]),e._v(" "),a("p",[e._v("如果调用失败，则传给 "),a("code",[e._v("callback")]),e._v(" 的第一个参数必须是 "),a("code",[e._v("Error")]),e._v(" 对象，如果写入成功，则传入 "),a("code",[e._v("null")]),e._v(" 对象。")]),e._v(" "),a("p",[e._v("在调用 "),a("code",[e._v("writable._write()")]),e._v(" 和调用 "),a("code",[e._v("callback")]),e._v(" 之间发生的对 "),a("code",[e._v("writable.write()")]),e._v(" 的所有调用都将导致写入的数据被缓冲。 当调用 "),a("code",[e._v("callback")]),e._v(" 时，流可能会触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_drain",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'drain'")]),a("OutboundLink")],1),e._v(" 事件。 如果流实现能够同时处理多个数据块，则应实现 "),a("code",[e._v("writable._writev()")]),e._v(" 方法。")]),e._v(" "),a("p",[e._v("如果在构造函数选项中将 "),a("code",[e._v("decodeStrings")]),e._v(" 属性显式设置为 "),a("code",[e._v("false")]),e._v("，则 "),a("code",[e._v("chunk")]),e._v(" 将保持传给 "),a("code",[e._v(".write()")]),e._v(" 的相同对象，并且可能是字符串而不是 "),a("code",[e._v("Buffer")]),e._v("。 这是为了支持对某些字符串数据编码进行优化处理的实现。 在这种情况下，"),a("code",[e._v("encoding")]),e._v(" 参数将指示字符串的字符编码。 否则，可以安全地忽略 "),a("code",[e._v("encoding")]),e._v(" 参数。")]),e._v(" "),a("p",[a("code",[e._v("writable._write()")]),e._v(" 方法以下划线为前缀，因为它是定义它的类的内部方法，不应由用户程序直接调用。")]),e._v(" "),a("h5",{attrs:{id:"writable-writev-chunks-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-writev-chunks-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable._writev(chunks, callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writable_writevchunks-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_writev_chunks_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("chunks")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[e._v("<Object[]>"),a("OutboundLink")],1)])]),e._v(" "),a("li",[a("p",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 当对提供的块的处理完成时要调用的回调函数（可选地带有错误参数）。")])])]),e._v(" "),a("p",[e._v("此函数不得由应用程序代码直接调用。 它应该由子类实现，并且只能由内部 "),a("code",[e._v("Writable")]),e._v(" 类方法调用。")]),e._v(" "),a("p",[a("code",[e._v("writable._writev()")]),e._v(" 方法可以在能够同时处理多个数据块的流实现中作为 "),a("code",[e._v("writable._write()")]),e._v(" 的补充或替代来实现。 如果实现并且有来自先前写入的缓冲数据，则将调用 "),a("code",[e._v("_writev()")]),e._v(" 而不是 "),a("code",[e._v("_write()")]),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("writable._writev()")]),e._v(" 方法以下划线为前缀，因为它是定义它的类的内部方法，不应由用户程序直接调用。")]),e._v(" "),a("h5",{attrs:{id:"writable-destroy-err-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-destroy-err-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable._destroy(err, callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writable_destroyerr-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_destroy_err_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("err")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1),e._v(" 可能的错误。")]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 采用可选的错误参数的回调函数。")])]),e._v(" "),a("p",[a("code",[e._v("_destroy()")]),e._v(" 方法由 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_destroy_error",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable.destroy()")]),a("OutboundLink")],1),e._v(" 调用。 它可以被子类覆盖，但不能直接调用。")]),e._v(" "),a("h5",{attrs:{id:"writable-final-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writable-final-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("writable._final(callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#writable_finalcallback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/writable_final_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 完成写入任何剩余数据后调用此函数（可选地带有错误参数）。")])]),e._v(" "),a("p",[e._v("不得直接调用 "),a("code",[e._v("_final()")]),e._v(" 方法。 它可以由子类实现，如果是，则只能由内部 "),a("code",[e._v("Writable")]),e._v(" 类方法调用。")]),e._v(" "),a("p",[e._v("这个可选函数将在流关闭之前被调用，将 "),a("code",[e._v("'finish'")]),e._v(" 事件延迟到 "),a("code",[e._v("callback")]),e._v(" 被调用。 这对于在流结束之前关闭资源或写入缓冲数据很有用。")]),e._v(" "),a("h5",{attrs:{id:"写入时出错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写入时出错"}},[e._v("#")]),e._v(" 写入时出错"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#errors-while-writing",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/errors_while_writing.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("在 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._write()")]),a("OutboundLink")],1),e._v("、"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_writev_chunks_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._writev()")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_final_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("writable._final()")]),a("OutboundLink")],1),e._v(" 方法的处理过程中发生的错误必须通过调用回调并将错误作为第一个参数传入来传播。 从这些方法中抛出 "),a("code",[e._v("Error")]),e._v(" 或手动触发 "),a("code",[e._v("'error'")]),e._v(" 事件会导致未定义的行为。")]),e._v(" "),a("p",[e._v("如果 "),a("code",[e._v("Readable")]),e._v(" 流在 "),a("code",[e._v("Writable")]),e._v(" 触发错误时通过管道传输到 "),a("code",[e._v("Writable")]),e._v(" 流，则 "),a("code",[e._v("Readable")]),e._v(" 流将被取消管道。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\n\nconst myWritable = new Writable({\n  write(chunk, encoding, callback) {\n    if (chunk.toString().indexOf('a') >= 0) {\n      callback(new Error('chunk is invalid'));\n    } else {\n      callback();\n    }\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("h5",{attrs:{id:"可写流的示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可写流的示例"}},[e._v("#")]),e._v(" 可写流的示例"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#an-example-writable-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/an_example_writable_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("下面说明了一个相当简单（有些毫无意义）的自定义 "),a("code",[e._v("Writable")]),e._v(" 流的实现。 虽然这个特定的 "),a("code",[e._v("Writable")]),e._v(" 流实例没有任何真正的特殊用途，但该示例说明了自定义 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 流实例的每个必需元素：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\n\nclass MyWritable extends Writable {\n  _write(chunk, encoding, callback) {\n    if (chunk.toString().indexOf('a') >= 0) {\n      callback(new Error('chunk is invalid'));\n    } else {\n      callback();\n    }\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("h5",{attrs:{id:"在可写流中解码缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在可写流中解码缓冲区"}},[e._v("#")]),e._v(" 在可写流中解码缓冲区"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#decoding-buffers-in-a-writable-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/decoding_buffers_in_a_writable_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("解码缓冲区是一项常见任务，例如，在使用输入为字符串的转换器时。 在使用多字节字符编码（例如 UTF-8）时，这不是一个简单的过程。 以下示例显示如何使用 "),a("code",[e._v("StringDecoder")]),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 解码多字节字符串。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Writable } = require('stream');\nconst { StringDecoder } = require('string_decoder');\n\nclass StringWritable extends Writable {\n  constructor(options) {\n    super(options);\n    this._decoder = new StringDecoder(options && options.defaultEncoding);\n    this.data = '';\n  }\n  _write(chunk, encoding, callback) {\n    if (encoding === 'buffer') {\n      chunk = this._decoder.write(chunk);\n    }\n    this.data += chunk;\n    callback();\n  }\n  _final(callback) {\n    this.data += this._decoder.end();\n    callback();\n  }\n}\n\nconst euro = [[0xE2, 0x82], [0xAC]].map(Buffer.from);\nconst w = new StringWritable();\n\nw.write('currency: ');\nw.write(euro[0]);\nw.end(euro[1]);\n\nconsole.log(w.data); // currency: €\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br")])]),a("h4",{attrs:{id:"实现可读流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现可读流"}},[e._v("#")]),e._v(" 实现可读流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#implementing-a-readable-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/implementing_a_readable_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("stream.Readable")]),e._v(" 类被扩展以实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流。")]),e._v(" "),a("p",[e._v("自定义 "),a("code",[e._v("Readable")]),e._v(" 流必须调用 "),a("code",[e._v("new stream.Readable([options])")]),e._v(" 构造函数并实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 方法。")]),e._v(" "),a("h5",{attrs:{id:"new-stream-readable-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-stream-readable-options"}},[e._v("#")]),e._v(" "),a("code",[e._v("new stream.Readable([options])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#new-streamreadableoptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/new_stream_readable_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("options")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[a("Object",[a("OutboundLink")],1)],1),e._v(" "),a("ul",[a("li",[a("code",[e._v("highWaterMark")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1),e._v(" 在停止从底层资源读取之前存储在内部缓冲区中的"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_highwatermark_discrepancy_after_calling_readable_setencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("最大字节数"),a("OutboundLink")],1),e._v("。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("16384")]),e._v(" (16KB) 或 "),a("code",[e._v("16")]),e._v(" 表示 "),a("code",[e._v("objectMode")]),e._v(" 流。")]),e._v(" "),a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 如果指定，则缓冲区将使用指定的编码解码为字符串。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("null")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("objectMode")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 此流是否应表现为对象流。 这意味着 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read(n)")]),a("OutboundLink")],1),e._v(" 返回单个值而不是大小为 "),a("code",[e._v("n")]),e._v(" 的 "),a("code",[e._v("Buffer")]),e._v("。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("false")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("emitClose")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 流被销毁后是否应该触发 "),a("code",[e._v("'close'")]),e._v("。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("read")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._read()")]),a("OutboundLink")],1),e._v(" 方法的实现。")]),e._v(" "),a("li",[a("code",[e._v("destroy")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_destroy_err_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._destroy()")]),a("OutboundLink")],1),e._v(" 方法的实现。")]),e._v(" "),a("li",[a("code",[e._v("autoDestroy")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 此流是否应在结束后自动调用自身的 "),a("code",[e._v(".destroy()")]),e._v("。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("false")]),e._v("。")])])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Readable } = require('stream');\n\nclass MyReadable extends Readable {\n  constructor(options) {\n    // 调用 stream.Readable(options) 构造函数。\n    super(options);\n    // ...\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("或者，当使用 ES6 之前的风格构造函数时：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Readable } = require('stream');\nconst util = require('util');\n\nfunction MyReadable(options) {\n  if (!(this instanceof MyReadable))\n    return new MyReadable(options);\n  Readable.call(this, options);\n}\nutil.inherits(MyReadable, Readable);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("或者，使用简化的构造函数方法：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Readable } = require('stream');\n\nconst myReadable = new Readable({\n  read(size) {\n    // ...\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h5",{attrs:{id:"readable-read-size-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-read-size-2"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable._read(size)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readable_readsize",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_read_size_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v0.9.4")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("size")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1),e._v(" 异步地读取的字节数")])]),e._v(" "),a("p",[e._v("此函数不得由应用程序代码直接调用。 它应该由子类实现，并且只能由内部 "),a("code",[e._v("Readable")]),e._v(" 类方法调用。")]),e._v(" "),a("p",[e._v("所有 "),a("code",[e._v("Readable")]),e._v(" 流实现都必须提供 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 方法的实现，以从底层资源中获取数据。")]),e._v(" "),a("p",[e._v("调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 时，如果资源中的数据可用，则实现应开始使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push_chunk_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("this.push(dataChunk)")]),a("OutboundLink")],1),e._v(" 方法将该数据推送到读取队列中。")]),e._v(" "),a("p",[e._v("一旦调用了 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 方法，则不会再次调用它，直到通过 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push_chunk_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.push()")]),a("OutboundLink")],1),e._v(" 方法推送更多数据。 空缓冲区和字符串等空数据不会导致调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("size")]),e._v(" 参数是建议性的。 对于“读取”是返回数据的单个操作的实现，可以使用 "),a("code",[e._v("size")]),e._v(" 参数来确定要获取多少数据。 其他实现可能会忽略此参数，并在数据可用时简单地提供数据。 在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push_chunk_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.push(chunk)")]),a("OutboundLink")],1),e._v(" 之前不需要“等待”直到 "),a("code",[e._v("size")]),e._v(" 个字节可用。")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 方法以下划线为前缀，因为它是定义它的类的内部方法，不应由用户程序直接调用。")]),e._v(" "),a("h5",{attrs:{id:"readable-destroy-err-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-destroy-err-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable._destroy(err, callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readable_destroyerr-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_destroy_err_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("新增于: v8.0.0")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("err")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[a("Error",[a("OutboundLink")],1)],1),e._v(" 可能的错误。")]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 采用可选的错误参数的回调函数。")])]),e._v(" "),a("p",[a("code",[e._v("_destroy()")]),e._v(" 方法由 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_destroy_error",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.destroy()")]),a("OutboundLink")],1),e._v(" 调用。 它可以被子类覆盖，但不能直接调用。")]),e._v(" "),a("h5",{attrs:{id:"readable-push-chunk-encoding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-push-chunk-encoding"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.push(chunk[, encoding])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablepushchunk-encoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_push_chunk_encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("chunk")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/ZbDkpm",target:"_blank",rel:"noopener noreferrer"}},[a("Uint8Array",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[a("null",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1),e._v(" 要推入读取队列的数据块。 对于不在对象模式下操作的流，"),a("code",[e._v("chunk")]),e._v(" 必须是字符串、"),a("code",[e._v("Buffer")]),e._v(" 或 "),a("code",[e._v("Uint8Array")]),e._v("。 对于对象模式的流，"),a("code",[e._v("chunk")]),e._v(" 可以是任何 JavaScript 值。")]),e._v(" "),a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 字符串块的编码。 必须是有效的 "),a("code",[e._v("Buffer")]),e._v(" 编码，例如 "),a("code",[e._v("'utf8'")]),e._v(" 或 "),a("code",[e._v("'ascii'")]),e._v("。")]),e._v(" "),a("li",[e._v("返回: "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 如果可以继续推送额外的数据块，则为 "),a("code",[e._v("true")]),e._v("；否则为 "),a("code",[e._v("false")]),e._v("。")])]),e._v(" "),a("p",[e._v("当 "),a("code",[e._v("chunk")]),e._v(" 为 "),a("code",[e._v("Buffer")]),e._v("、"),a("code",[e._v("Uint8Array")]),e._v(" 或 "),a("code",[e._v("string")]),e._v(" 时，数据的 "),a("code",[e._v("chunk")]),e._v(" 将被添加到内部队列中供流的用户消费。 将 "),a("code",[e._v("chunk")]),e._v(" 作为 "),a("code",[e._v("null")]),e._v(" 传递信号表示流结束 (EOF)，之后不能再写入数据。")]),e._v(" "),a("p",[e._v("当 "),a("code",[e._v("Readable")]),e._v(" 处于暂停模式时，在 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'readable'")]),a("OutboundLink")],1),e._v(" 事件触发时调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.read()")]),a("OutboundLink")],1),e._v(" 方法可以读出添加了 "),a("code",[e._v("readable.push()")]),e._v(" 的数据。")]),e._v(" "),a("p",[e._v("当 "),a("code",[e._v("Readable")]),e._v(" 工作在流动模式时，添加了 "),a("code",[e._v("readable.push()")]),e._v(" 的数据将通过触发 "),a("code",[e._v("'data'")]),e._v(" 事件来传递。")]),e._v(" "),a("p",[a("code",[e._v("readable.push()")]),e._v(" 方法设计得尽可能灵活。 例如，当封装提供某种形式的暂停/恢复机制和数据回调的低层源时，低层源可以由自定义 "),a("code",[e._v("Readable")]),e._v(" 实例封装：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// `_source` 是一个具有 readStop() 和 readStart() 方法的对象，\n// 当有数据时调用 `ondata` 成员，\n// 当数据结束时调用 `onend` 成员。\n\nclass SourceWrapper extends Readable {\n  constructor(options) {\n    super(options);\n\n    this._source = getLowLevelSourceObject();\n\n    // 每次有数据时，将其推入内部缓冲区。\n    this._source.ondata = (chunk) => {\n      // 如果 push() 返回 false，则停止从源读取。\n      if (!this.push(chunk))\n        this._source.readStop();\n    };\n\n    // 当源结束时，推送 EOF 信令 `null` 块。\n    this._source.onend = () => {\n      this.push(null);\n    };\n  }\n  // 当流想要拉入更多数据时将调用 _read() 。\n  // 在这种情况下，会忽略建议的大小参数。\n  _read(size) {\n    this._source.readStart();\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br")])]),a("p",[a("code",[e._v("readable.push()")]),e._v(" 方法用于将内容推送到内部缓冲区中。 它可以由 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 方法驱动。")]),e._v(" "),a("p",[e._v("对于非对象模式的流，如果 "),a("code",[e._v("readable.push()")]),e._v(" 的 "),a("code",[e._v("chunk")]),e._v(" 参数为 "),a("code",[e._v("undefined")]),e._v("，它将被视为空字符串或缓冲区。 有关详细信息，请参阅 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.push('')")]),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h5",{attrs:{id:"读取时出错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取时出错"}},[e._v("#")]),e._v(" 读取时出错"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#errors-while-reading",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/errors_while_reading.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 处理过程中发生的错误必须通过 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_destroy_err_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.destroy(err)")]),a("OutboundLink")],1),e._v(" 方法传播。 从 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 中抛出 "),a("code",[e._v("Error")]),e._v(" 或手动触发 "),a("code",[e._v("'error'")]),e._v(" 事件会导致未定义的行为。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Readable } = require('stream');\n\nconst myReadable = new Readable({\n  read(size) {\n    const err = checkSomeErrorCondition();\n    if (err) {\n      this.destroy(err);\n    } else {\n      // 做一些工作。\n    }\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("h5",{attrs:{id:"可读流的示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可读流的示例"}},[e._v("#")]),e._v(" 可读流的示例"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#an-example-counting-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/an_example_counting_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("下面是一个 "),a("code",[e._v("Readable")]),e._v(" 流的基本示例，它按升序触发从 1 到 1,000,000 的数字，然后结束。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Readable } = require('stream');\n\nclass Counter extends Readable {\n  constructor(opt) {\n    super(opt);\n    this._max = 1000000;\n    this._index = 1;\n  }\n\n  _read() {\n    const i = this._index++;\n    if (i > this._max)\n      this.push(null);\n    else {\n      const str = String(i);\n      const buf = Buffer.from(str, 'ascii');\n      this.push(buf);\n    }\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br")])]),a("h4",{attrs:{id:"实现双工流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现双工流"}},[e._v("#")]),e._v(" 实现双工流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#implementing-a-duplex-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/implementing_a_duplex_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流是同时实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 的流，例如 TCP 套接字连接。")]),e._v(" "),a("p",[e._v("因为 JavaScript 不支持多重继承，所以扩展了 "),a("code",[e._v("stream.Duplex")]),e._v(" 类以实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流（与扩展 "),a("code",[e._v("stream.Readable")]),e._v(" 和 "),a("code",[e._v("stream.Writable")]),e._v(" 类相反）。")]),e._v(" "),a("p",[a("code",[e._v("stream.Duplex")]),e._v(" 类原型继承自 "),a("code",[e._v("stream.Readable")]),e._v(" 并寄生于 "),a("code",[e._v("stream.Writable")]),e._v("，但由于覆盖了 "),a("code",[e._v("stream.Writable")]),e._v(" 上的 "),a("a",{attrs:{href:"http://url.nodejs.cn/D1EDvM",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Symbol.hasInstance")]),a("OutboundLink")],1),e._v("，"),a("code",[e._v("instanceof")]),e._v(" 将适用于两个基类。")]),e._v(" "),a("p",[e._v("自定义的 "),a("code",[e._v("Duplex")]),e._v(" 流必须调用 "),a("code",[e._v("new stream.Duplex([options])")]),e._v(" 构造函数并实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 和 "),a("code",[e._v("writable._write()")]),e._v(" 方法。")]),e._v(" "),a("h5",{attrs:{id:"new-stream-duplex-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-stream-duplex-options"}},[e._v("#")]),e._v(" "),a("code",[e._v("new stream.Duplex(options)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#new-streamduplexoptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/new_stream_duplex_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("options")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[a("Object",[a("OutboundLink")],1)],1),e._v(" 传给 "),a("code",[e._v("Writable")]),e._v(" 和 "),a("code",[e._v("Readable")]),e._v(" 构造函数。 还具有以下字段：\n"),a("ul",[a("li",[a("code",[e._v("allowHalfOpen")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 如果设置为 "),a("code",[e._v("false")]),e._v("，则流将在可读端结束时自动结束可写端。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("readable")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 设置 "),a("code",[e._v("Duplex")]),e._v(" 是否可读。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("writable")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 设置 "),a("code",[e._v("Duplex")]),e._v(" 是否可写。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("true")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("readableObjectMode")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 为流的可读端设置 "),a("code",[e._v("objectMode")]),e._v("。 如果 "),a("code",[e._v("objectMode")]),e._v(" 是 "),a("code",[e._v("true")]),e._v("，则无效。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("false")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("writableObjectMode")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[a("boolean",[a("OutboundLink")],1)],1),e._v(" 为流的可写端设置 "),a("code",[e._v("objectMode")]),e._v("。 如果 "),a("code",[e._v("objectMode")]),e._v(" 是 "),a("code",[e._v("true")]),e._v("，则无效。 "),a("strong",[e._v("默认值:")]),e._v(" "),a("code",[e._v("false")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("readableHighWaterMark")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1),e._v(" 为流的可读端设置 "),a("code",[e._v("highWaterMark")]),e._v("。 如果提供 "),a("code",[e._v("highWaterMark")]),e._v("，则无效。")]),e._v(" "),a("li",[a("code",[e._v("writableHighWaterMark")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[a("number",[a("OutboundLink")],1)],1),e._v(" 为流的可写端设置 "),a("code",[e._v("highWaterMark")]),e._v("。 如果提供 "),a("code",[e._v("highWaterMark")]),e._v("，则无效。")])])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Duplex } = require('stream');\n\nclass MyDuplex extends Duplex {\n  constructor(options) {\n    super(options);\n    // ...\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("或者，当使用 ES6 之前的风格构造函数时：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Duplex } = require('stream');\nconst util = require('util');\n\nfunction MyDuplex(options) {\n  if (!(this instanceof MyDuplex))\n    return new MyDuplex(options);\n  Duplex.call(this, options);\n}\nutil.inherits(MyDuplex, Duplex);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("或者，使用简化的构造函数方法：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Duplex } = require('stream');\n\nconst myDuplex = new Duplex({\n  read(size) {\n    // ...\n  },\n  write(chunk, encoding, callback) {\n    // ...\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("h5",{attrs:{id:"双工流的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双工流的例子"}},[e._v("#")]),e._v(" 双工流的例子"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#an-example-duplex-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/an_example_duplex_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("下面说明了一个简单的 "),a("code",[e._v("Duplex")]),e._v(" 流的示例，它封装了一个假设的低层源对象，可以向其中写入数据，也可以从中读取数据，尽管使用的 API 与 Node.js 流不兼容。 下面说明了一个简单的 "),a("code",[e._v("Duplex")]),e._v(" 流的示例，它缓冲通过 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_writable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Writable")]),a("OutboundLink")],1),e._v(" 接口传入的写入数据，然后通过 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 接口读回。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Duplex } = require('stream');\nconst kSource = Symbol('source');\n\nclass MyDuplex extends Duplex {\n  constructor(source, options) {\n    super(options);\n    this[kSource] = source;\n  }\n\n  _write(chunk, encoding, callback) {\n    // 底层源代码只处理字符串。\n    if (Buffer.isBuffer(chunk))\n      chunk = chunk.toString();\n    this[kSource].writeSomeData(chunk);\n    callback();\n  }\n\n  _read(size) {\n    this[kSource].fetchSomeData(size, (data, encoding) => {\n      this.push(Buffer.from(data, encoding));\n    });\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br")])]),a("p",[a("code",[e._v("Duplex")]),e._v(" 流最重要的方面是 "),a("code",[e._v("Readable")]),e._v(" 和 "),a("code",[e._v("Writable")]),e._v(" 端彼此独立运行，尽管它们共存于单个对象实例中。")]),e._v(" "),a("h5",{attrs:{id:"对象模式的双工流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象模式的双工流"}},[e._v("#")]),e._v(" 对象模式的双工流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#object-mode-duplex-streams",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/object_mode_duplex_streams.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("对于 "),a("code",[e._v("Duplex")]),e._v(" 流，可以分别使用 "),a("code",[e._v("readableObjectMode")]),e._v(" 和 "),a("code",[e._v("writableObjectMode")]),e._v(" 选项为 "),a("code",[e._v("Readable")]),e._v(" 或 "),a("code",[e._v("Writable")]),e._v(" 侧专门设置 "),a("code",[e._v("objectMode")]),e._v("。")]),e._v(" "),a("p",[e._v("例如，在下面的示例中，创建了新的 "),a("code",[e._v("Transform")]),e._v(" 流（它是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流），它具有对象模式的 "),a("code",[e._v("Writable")]),e._v(" 端，该端接受 JavaScript 数字，这些数字在 "),a("code",[e._v("Readable")]),e._v(" 端转换为十六进制字符串。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Transform } = require('stream');\n\n// 所有转换流也是双工流。\nconst myTransform = new Transform({\n  writableObjectMode: true,\n\n  transform(chunk, encoding, callback) {\n    // 如有必要，将块强制为数字。\n    chunk |= 0;\n\n    // 将块转换为其他东西。\n    const data = chunk.toString(16);\n\n    // 将数据推送到可读队列中。\n    callback(null, '0'.repeat(data.length % 2) + data);\n  }\n});\n\nmyTransform.setEncoding('ascii');\nmyTransform.on('data', (chunk) => console.log(chunk));\n\nmyTransform.write(1);\n// 打印: 01\nmyTransform.write(10);\n// 打印: 0a\nmyTransform.write(100);\n// 打印: 64\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br")])]),a("h4",{attrs:{id:"实现转换流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现转换流"}},[e._v("#")]),e._v(" 实现转换流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#implementing-a-transform-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/implementing_a_transform_stream.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_duplex",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Duplex")]),a("OutboundLink")],1),e._v(" 流，其中输出以某种方式从输入计算。 示例包括压缩、加密、或解密数据的"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/zlib.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩"),a("OutboundLink")],1),e._v("流或"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/crypto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("加密"),a("OutboundLink")],1),e._v("流。")]),e._v(" "),a("p",[e._v("不要求输出与输入大小相同、块数相同或同时到达。 例如，"),a("code",[e._v("Hash")]),e._v(" 流只会有一个单一的输出块，它在输入结束时提供。 "),a("code",[e._v("zlib")]),e._v(" 流将产生比其输入小得多或大得多的输出。")]),e._v(" "),a("p",[a("code",[e._v("stream.Transform")]),e._v(" 类被扩展以实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流。")]),e._v(" "),a("p",[a("code",[e._v("stream.Transform")]),e._v(" 类原型上继承自 "),a("code",[e._v("stream.Duplex")]),e._v(" 并实现其自己版本的 "),a("code",[e._v("writable._write()")]),e._v(" 和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable._read()")]),a("OutboundLink")],1),e._v(" 方法。 自定义的 "),a("code",[e._v("Transform")]),e._v(" 实现必须实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_transform_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("transform._transform()")]),a("OutboundLink")],1),e._v(" 方法，也可以实现 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_flush_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("transform._flush()")]),a("OutboundLink")],1),e._v(" 方法。")]),e._v(" "),a("p",[e._v("使用 "),a("code",[e._v("Transform")]),e._v(" 流时必须小心，因为如果不消耗 "),a("code",[e._v("Readable")]),e._v(" 端的输出，写入流的数据可能导致流的 "),a("code",[e._v("Writable")]),e._v(" 端暂停。")]),e._v(" "),a("h5",{attrs:{id:"new-stream-transform-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-stream-transform-options"}},[e._v("#")]),e._v(" "),a("code",[e._v("new stream.Transform([options])")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#new-streamtransformoptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/new_stream_transform_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("options")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[a("Object",[a("OutboundLink")],1)],1),e._v(" 传给 "),a("code",[e._v("Writable")]),e._v(" 和 "),a("code",[e._v("Readable")]),e._v(" 构造函数。 还具有以下字段：\n"),a("ul",[a("li",[a("code",[e._v("transform")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_transform_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._transform()")]),a("OutboundLink")],1),e._v(" 方法的实现。")]),e._v(" "),a("li",[a("code",[e._v("flush")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_flush_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._flush()")]),a("OutboundLink")],1),e._v(" 方法的实现。")])])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Transform } = require('stream');\n\nclass MyTransform extends Transform {\n  constructor(options) {\n    super(options);\n    // ...\n  }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("或者，当使用 ES6 之前的风格构造函数时：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Transform } = require('stream');\nconst util = require('util');\n\nfunction MyTransform(options) {\n  if (!(this instanceof MyTransform))\n    return new MyTransform(options);\n  Transform.call(this, options);\n}\nutil.inherits(MyTransform, Transform);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("或者，使用简化的构造函数方法：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Transform } = require('stream');\n\nconst myTransform = new Transform({\n  transform(chunk, encoding, callback) {\n    // ...\n  }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h5",{attrs:{id:"finish-与-end-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finish-与-end-事件"}},[e._v("#")]),e._v(" 'finish' 与 'end' 事件"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#events-finish-and-end",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/events_finish_and_end.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("'finish'")]),e._v(" 事件在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_end_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.end()")]),a("OutboundLink")],1),e._v(" 并且所有块都已被 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_transform_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._transform()")]),a("OutboundLink")],1),e._v(" 处理后触发。 "),a("code",[e._v("'end'")]),e._v(" 事件在所有数据输出后触发，该事件发生在调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_transform_flush_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("transform._flush()")]),a("OutboundLink")],1),e._v(" 中的回调之后。")]),e._v(" "),a("h5",{attrs:{id:"transform-flush-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform-flush-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("transform._flush(callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#transform_flushcallback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/transform_flush_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 在刷新剩余数据时调用的回调函数（可选地带有错误参数和数据）。")])]),e._v(" "),a("p",[e._v("此函数不得由应用程序代码直接调用。 它应该由子类实现，并且只能由内部 "),a("code",[e._v("Readable")]),e._v(" 类方法调用。")]),e._v(" "),a("p",[e._v("在某些情况下，转换操作可能需要在流的末尾触发额外的数据位。 例如，"),a("code",[e._v("zlib")]),e._v(" 压缩流将存储用于优化压缩输出的内部状态量。 但是，当流结束时，需要刷新额外的数据，以便完成压缩数据。")]),e._v(" "),a("p",[e._v("自定义的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 实现可以实现 "),a("code",[e._v("transform._flush()")]),e._v(" 方法。 当没有更多的写入数据被消耗时，但在触发 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_end",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'end'")]),a("OutboundLink")],1),e._v(" 事件以表示 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 流结束之前，将调用此方法。")]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("transform._flush()")]),e._v(" 实现中，"),a("code",[e._v("transform.push()")]),e._v(" 方法可以被调用零次或多次，视情况而定。 必须在刷新操作完成时调用 "),a("code",[e._v("callback")]),e._v(" 函数。")]),e._v(" "),a("p",[a("code",[e._v("transform._flush()")]),e._v(" 方法以下划线为前缀，因为它是定义它的类的内部方法，不应由用户程序直接调用。")]),e._v(" "),a("h5",{attrs:{id:"transform-transform-chunk-encoding-callback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform-transform-chunk-encoding-callback"}},[e._v("#")]),e._v(" "),a("code",[e._v("transform._transform(chunk, encoding, callback)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#transform_transformchunk-encoding-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/transform_transform_chunk_encoding_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("chunk")]),e._v(" "),a("a",{attrs:{href:"http://nodejs.cn/api/buffer.html#class-buffer",target:"_blank",rel:"noopener noreferrer"}},[a("Buffer",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" | "),a("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[a("any",[a("OutboundLink")],1)],1),e._v(" 要转换的 "),a("code",[e._v("Buffer")]),e._v("，从 "),a("code",[e._v("string")]),e._v(" 转换为 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v("。 如果流的 "),a("code",[e._v("decodeStrings")]),e._v(" 选项是 "),a("code",[e._v("false")]),e._v(" 或者流在对象模式下运行，则块将不会被转换，而是传给 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_writable_write_chunk_encoding_callback",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.write()")]),a("OutboundLink")],1),e._v(" 的任何内容。")]),e._v(" "),a("li",[a("code",[e._v("encoding")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[a("string",[a("OutboundLink")],1)],1),e._v(" 如果块是字符串，则这是编码类型。 如果块是缓冲区，则这是特殊值 "),a("code",[e._v("'buffer'")]),e._v("。 在这种情况下忽略它。")]),e._v(" "),a("li",[a("code",[e._v("callback")]),e._v(" "),a("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[a("Function",[a("OutboundLink")],1)],1),e._v(" 在处理提供的 "),a("code",[e._v("chunk")]),e._v(" 后调用的回调函数（可选地带有错误参数和数据）。")])]),e._v(" "),a("p",[e._v("此函数不得由应用程序代码直接调用。 它应该由子类实现，并且只能由内部 "),a("code",[e._v("Readable")]),e._v(" 类方法调用。")]),e._v(" "),a("p",[e._v("所有 "),a("code",[e._v("Transform")]),e._v(" 流实现都必须提供 "),a("code",[e._v("_transform()")]),e._v(" 方法来接受输入并产生输出。 "),a("code",[e._v("transform._transform()")]),e._v(" 实现处理写入的字节，计算输出，然后使用 "),a("code",[e._v("transform.push()")]),e._v(" 方法将该输出传给可读部分。")]),e._v(" "),a("p",[a("code",[e._v("transform.push()")]),e._v(" 方法可以被调用零次或多次以从单个输入块生成输出，这取决于作为块的结果要输出多少。")]),e._v(" "),a("p",[e._v("任何给定的输入数据块都可能不会产生任何输出。")]),e._v(" "),a("p",[a("code",[e._v("callback")]),e._v(" 函数必须在当前块被完全消耗时才被调用。 如果在处理输入时发生错误，则传给 "),a("code",[e._v("callback")]),e._v(" 的第一个参数必须是 "),a("code",[e._v("Error")]),e._v(" 对象，否则传给 "),a("code",[e._v("null")]),e._v("。 如果将第二个参数传给 "),a("code",[e._v("callback")]),e._v("，它将被转发到 "),a("code",[e._v("transform.push()")]),e._v(" 方法。 换句话说，以下内容是等效的：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("transform.prototype._transform = function(data, encoding, callback) {\n  this.push(data);\n  callback();\n};\n\ntransform.prototype._transform = function(data, encoding, callback) {\n  callback(null, data);\n};\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[a("code",[e._v("transform._transform()")]),e._v(" 方法以下划线为前缀，因为它是定义它的类的内部方法，不应由用户程序直接调用。")]),e._v(" "),a("p",[a("code",[e._v("transform._transform()")]),e._v(" 永远不会被并行调用；流实现了一个队列机制，为了接收下一个块，必须同步或异步调用 "),a("code",[e._v("callback")]),e._v("。")]),e._v(" "),a("h5",{attrs:{id:"stream-passthrough-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-passthrough-类"}},[e._v("#")]),e._v(" "),a("code",[e._v("stream.PassThrough")]),e._v(" 类"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#class-streampassthrough",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/class_stream_passthrough.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("stream.PassThrough")]),e._v(" 类是 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_transform",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Transform")]),a("OutboundLink")],1),e._v(" 流的简单实现，它只是将输入字节传到输出。 它的目的主要是用于示例和测试，但在某些用例中，"),a("code",[e._v("stream.PassThrough")]),e._v(" 可用作新型流的构建块。")]),e._v(" "),a("h3",{attrs:{id:"其他注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他注意事项"}},[e._v("#")]),e._v(" 其他注意事项"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#additional-notes",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"流与异步生成器和异步迭代器的兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流与异步生成器和异步迭代器的兼容性"}},[e._v("#")]),e._v(" 流与异步生成器和异步迭代器的兼容性"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#streams-compatibility-with-async-generators-and-async-iterators",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/streams_compatibility_with_async_generators_and_async_iterators.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("在 JavaScript 中异步生成器和迭代器的支持下，异步生成器在这一点上实际上是一流的语言级流构造。")]),e._v(" "),a("p",[e._v("下面提供了一些将 Node.js 流与异步生成器和异步迭代器一起使用的常见互操作案例。")]),e._v(" "),a("h5",{attrs:{id:"使用异步迭代器消费可读流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用异步迭代器消费可读流"}},[e._v("#")]),e._v(" 使用异步迭代器消费可读流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#consuming-readable-streams-with-async-iterators",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/consuming_readable_streams_with_async_iterators.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(async function() {\n  for await (const chunk of readable) {\n    console.log(chunk);\n  }\n})();\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("异步迭代器在流上注册一个永久的错误句柄，以防止任何未处理的销毁后错误。")]),e._v(" "),a("h5",{attrs:{id:"使用异步生成器创建可读流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用异步生成器创建可读流"}},[e._v("#")]),e._v(" 使用异步生成器创建可读流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#creating-readable-streams-with-async-generators",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/creating_readable_streams_with_async_generators.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("可以使用 "),a("code",[e._v("Readable.from()")]),e._v(" 实用方法从异步生成器构建 Node.js 可读流：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { Readable } = require('stream');\n\nasync function * generate() {\n  yield 'a';\n  yield 'b';\n  yield 'c';\n}\n\nconst readable = Readable.from(generate());\n\nreadable.on('data', (chunk) => {\n  console.log(chunk);\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("h5",{attrs:{id:"从异步迭代器管道到可写流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从异步迭代器管道到可写流"}},[e._v("#")]),e._v(" 从异步迭代器管道到可写流"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#piping-to-writable-streams-from-async-iterators",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("In the scenario of writing to a writable stream from an async iterator, ensure the correct handling of backpressure and errors.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { once } = require('events');\nconst finished = util.promisify(stream.finished);\n\nconst writable = fs.createWriteStream('./file');\n\nfunction drain(writable) {\n  if (writable.destroyed) {\n    return Promise.reject(new Error('premature close'));\n  }\n  return Promise.race([\n    once(writable, 'drain'),\n    once(writable, 'close')\n      .then(() => Promise.reject(new Error('premature close')))\n  ]);\n}\n\nasync function pump(iterable, writable) {\n  for await (const chunk of iterable) {\n    // Handle backpressure on write().\n    if (!writable.write(chunk)) {\n      await drain(writable);\n    }\n  }\n  writable.end();\n}\n\n(async function() {\n  // Ensure completion without errors.\n  await Promise.all([\n    pump(iterable, writable),\n    finished(writable)\n  ]);\n})();\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br")])]),a("p",[e._v("In the above, errors on "),a("code",[e._v("write()")]),e._v(" would be caught and thrown by the "),a("code",[e._v("once()")]),e._v(" listener for the "),a("code",[e._v("'drain'")]),e._v(" event, since "),a("code",[e._v("once()")]),e._v(" will also handle the "),a("code",[e._v("'error'")]),e._v(" event. To ensure completion of the write stream without errors, it is safer to use the "),a("code",[e._v("finished()")]),e._v(" method as above, instead of using the "),a("code",[e._v("once()")]),e._v(" listener for the "),a("code",[e._v("'finish'")]),e._v(" event. Under certain cases, an "),a("code",[e._v("'error'")]),e._v(" event could be emitted by the writable stream after "),a("code",[e._v("'finish'")]),e._v(" and as "),a("code",[e._v("once()")]),e._v(" will release the "),a("code",[e._v("'error'")]),e._v(" handler on handling the "),a("code",[e._v("'finish'")]),e._v(" event, it could result in an unhandled error.")]),e._v(" "),a("p",[e._v("Alternatively, the readable stream could be wrapped with "),a("code",[e._v("Readable.from()")]),e._v(" and then piped via "),a("code",[e._v(".pipe()")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const finished = util.promisify(stream.finished);\n\nconst writable = fs.createWriteStream('./file');\n\n(async function() {\n  const readable = Readable.from(iterable);\n  readable.pipe(writable);\n  // Ensure completion without errors.\n  await finished(writable);\n})();\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("Or, using "),a("code",[e._v("stream.pipeline()")]),e._v(" to pipe streams:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const pipeline = util.promisify(stream.pipeline);\n\nconst writable = fs.createWriteStream('./file');\n\n(async function() {\n  const readable = Readable.from(iterable);\n  await pipeline(readable, writable);\n})();\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h4",{attrs:{id:"兼容旧版本的-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兼容旧版本的-node-js"}},[e._v("#")]),e._v(" 兼容旧版本的 Node.js"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#compatibility-with-older-nodejs-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/compatibility_with_older_node_js_versions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("在 Node.js 0.10 之前，"),a("code",[e._v("Readable")]),e._v(" 流接口更简单，但功能更弱，实用性也更低。")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件将立即开始触发，而不是等待对 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v(" 方法的调用。 需要执行一些工作来决定如何处理数据的应用程序需要将读取数据存储到缓冲区中，这样数据就不会丢失。")]),e._v(" "),a("li",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_pause",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.pause()")]),a("OutboundLink")],1),e._v(" 方法是建议性的，而不是保证性的。 这意味着即使流处于暂停状态，仍然需要准备接收 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件。")])]),e._v(" "),a("p",[e._v("在 Node.js 0.10 中，添加了 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Readable")]),a("OutboundLink")],1),e._v(" 类。 为了与旧的 Node.js 程序向后兼容，当添加 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件处理程序或调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_resume",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.resume()")]),a("OutboundLink")],1),e._v(" 方法时，"),a("code",[e._v("Readable")]),e._v(" 流会切换到“流动模式”。 效果是，即使不使用新的 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.read()")]),a("OutboundLink")],1),e._v(" 方法和 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_readable",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'readable'")]),a("OutboundLink")],1),e._v(" 事件，也不再需要担心丢失 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 块。")]),e._v(" "),a("p",[e._v("虽然大多数应用程序将继续正常运行，但这会在以下情况下引入边缘情况：")]),e._v(" "),a("ul",[a("li",[e._v("未添加 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_event_data",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("'data'")]),a("OutboundLink")],1),e._v(" 事件监听器。")]),e._v(" "),a("li",[e._v("永远不会调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_resume",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.resume()")]),a("OutboundLink")],1),e._v(" 方法。")]),e._v(" "),a("li",[e._v("流不会通过管道传输到任何可写目的地。")])]),e._v(" "),a("p",[e._v("例如，考虑以下代码：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 警告！破碎的！\nnet.createServer((socket) => {\n\n  // 添加了 'end' 监听器，但从不使用数据。\n  socket.on('end', () => {\n    // 它永远不会到达这里。\n    socket.end('The message was received but was not processed.\\n');\n  });\n\n}).listen(1337);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("在 Node.js 0.10 之前，传入的消息数据将被简单地丢弃。 但是，在 Node.js 0.10 及更高版本中，套接字永远处于暂停状态。")]),e._v(" "),a("p",[e._v("这种情况下的解决方法是调用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_resume",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream.resume()")]),a("OutboundLink")],1),e._v(" 方法开始数据流：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 解决方法。\nnet.createServer((socket) => {\n  socket.on('end', () => {\n    socket.end('The message was received but was not processed.\\n');\n  });\n\n  // 启动数据流，丢弃它。\n  socket.resume();\n}).listen(1337);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[e._v("除了新的 "),a("code",[e._v("Readable")]),e._v(" 流切换到流动模式之外，0.10 之前的样式流可以使用 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_wrap_stream",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.wrap()")]),a("OutboundLink")],1),e._v(" 方法封装在 "),a("code",[e._v("Readable")]),e._v(" 类中。")]),e._v(" "),a("h4",{attrs:{id:"readable-read-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-read-0"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.read(0)")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readableread0",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_read_0.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("在某些情况下，需要触发底层可读流机制的刷新，而不实际消耗任何数据。 在这种情况下，可以调用 "),a("code",[e._v("readable.read(0)")]),e._v("，它总是返回 "),a("code",[e._v("null")]),e._v("。")]),e._v(" "),a("p",[e._v("如果内部读取缓冲区在 "),a("code",[e._v("highWaterMark")]),e._v(" 之下，并且当前没有读取流，那么调用 "),a("code",[e._v("stream.read(0)")]),e._v(" 将触发低级 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_read_size_1",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("stream._read()")]),a("OutboundLink")],1),e._v(" 调用。")]),e._v(" "),a("p",[e._v("虽然大多数应用程序几乎不需要这样做，但在 Node.js 中也有这样做的情况，特别是在 "),a("code",[e._v("Readable")]),e._v(" 流类内部。")]),e._v(" "),a("h4",{attrs:{id:"readable-push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readable-push"}},[e._v("#")]),e._v(" "),a("code",[e._v("readable.push('')")]),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#readablepush",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/readable_push.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("不推荐使用 "),a("code",[e._v("readable.push('')")]),e._v("。")]),e._v(" "),a("p",[e._v("将零字节字符串 "),a("code",[e._v("Buffer")]),e._v(" 或 "),a("code",[e._v("Uint8Array")]),e._v(" 推送到非对象模式的流有一个有趣的副作用。 因为是对 "),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#stream_readable_push_chunk_encoding",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("readable.push()")]),a("OutboundLink")],1),e._v(" 的调用，所以调用会结束读取过程。 然而，因为参数是空字符串，没有数据被添加到可读缓冲区，所以用户没有任何东西可以消费。")]),e._v(" "),a("h4",{attrs:{id:"调用-readable-setencoding-之后-highwatermark-的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用-readable-setencoding-之后-highwatermark-的差异"}},[e._v("#")]),e._v(" 调用 `readable.setEncoding()` 之后 `highWaterMark` 的差异"),a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream.html#highwatermark-discrepancy-after-calling-readablesetencoding",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"http://nodejs.cn/api-v12/stream/highwatermark_discrepancy_after_calling_readable_setencoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("readable.setEncoding()")]),e._v(" 的使用将改变 "),a("code",[e._v("highWaterMark")]),e._v(" 在非对象模式下的操作方式。")]),e._v(" "),a("p",[e._v("通常，当前缓冲区的大小是根据 "),a("code",[e._v("highWaterMark")]),e._v(" 以字节为单位来衡量的。 但是，在调用 "),a("code",[e._v("setEncoding()")]),e._v(" 之后，比较函数将开始以字符为单位测量缓冲区的大小。")]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("latin1")]),e._v(" 或 "),a("code",[e._v("ascii")]),e._v(" 的常见情况下，这不是问题。 但建议在处理可能包含多字节字符的字符串时注意这种行为。")])])}),[],!1,null,null,null);r.default=n.exports}}]);