(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{598:function(e,r,n){"use strict";n.r(r);var t=n(18),s=Object(t.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"cluster-集群-node-js-api-文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-集群-node-js-api-文档"}},[e._v("#")]),e._v(" cluster 集群 | Node.js API 文档")]),e._v(" "),n("blockquote",[n("h2",{attrs:{id:"excerpt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),n("p",[e._v("中英对照")])]),e._v(" "),n("hr"),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("strong",[e._v("源代码:")]),e._v(" "),n("a",{attrs:{href:"https://github.com/nodejs/node/blob/v12.22.12/lib/cluster.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/cluster.js"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("Node.js 的单个实例在单个线程中运行。 为了利用多核系统，用户有时会想要启动 Node.js 进程的集群来处理负载。")]),e._v(" "),n("p",[e._v("集群模块可以轻松创建共享服务器端口的子进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const cluster = require('cluster');\nconst http = require('http');\nconst numCPUs = require('os').cpus().length;\n\nif (cluster.isMaster) {\n  console.log(`Master ${process.pid} is running`);\n\n  // 衍生工作进程。\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork();\n  }\n\n  cluster.on('exit', (worker, code, signal) => {\n    console.log(`worker ${worker.process.pid} died`);\n  });\n} else {\n  // 工作进程可以共享任何 TCP 连接\n  // 在本示例中，其是 HTTP 服务器\n  http.createServer((req, res) => {\n    res.writeHead(200);\n    res.end('hello world\\n');\n  }).listen(8000);\n\n  console.log(`Worker ${process.pid} started`);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br")])]),n("p",[e._v("运行 Node.js 现在将在工作进程之间共享端口 8000：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ node server.js\nMaster 3596 is running\nWorker 4324 started\nWorker 4520 started\nWorker 6056 started\nWorker 5644 started\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[e._v("在 Windows 上，还不能在工作进程中设置命名管道服务器。")]),e._v(" "),n("h3",{attrs:{id:"工作原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[e._v("#")]),e._v(" 工作原理"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#how-it-works",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/how_it_works.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("工作进程使用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_child_process_fork_modulepath_args_options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("child_process.fork()")]),n("OutboundLink")],1),e._v(" 方法衍生，因此它们可以通过 IPC 与父进程通信并且来回传递服务器句柄。")]),e._v(" "),n("p",[e._v("集群模块支持两种分发传入连接的方法。")]),e._v(" "),n("p",[e._v("第一种方法（也是除 Windows 之外的所有平台上的默认方法）是循环法，主进程监听端口，接受新连接并以循环方式将它们分发给工作进程，其中使用一些内置智能以避免使工作进程过载。")]),e._v(" "),n("p",[e._v("第二种方法是，主进程创建监听套接字并将其发送给感兴趣的工作进程。 然后工作进程直接接受传入的连接。")]),e._v(" "),n("p",[e._v("理论上，第二种方法具有最好的性能。 但是，在实践中，由于操作系统调度机制难以捉摸，分发往往非常不平衡。 可能会出现八个进程中的两个进程分担了所有连接超过 70% 的负载。")]),e._v(" "),n("p",[e._v("由于 "),n("code",[e._v("server.listen()")]),e._v(" 将大部分工作交给了主进程，因此普通的 Node.js 进程和集群工作进程之间的行为在三种情况下会有所不同：")]),e._v(" "),n("ol",[n("li",[n("code",[e._v("server.listen({fd: 7})")]),e._v(" 因为消息传给主进程，所以父进程中的文件描述符 7 将被监听，并将句柄传给工作进程，而不是监听文件描述符 7 引用的工作进程。")]),e._v(" "),n("li",[n("code",[e._v("server.listen(handle)")]),e._v(" 显式地监听句柄，将使工作进程使用提供的句柄，而不是与主进程对话。")]),e._v(" "),n("li",[n("code",[e._v("server.listen(0)")]),e._v(" 通常，这会使服务器监听随机端口。 但是，在集群中，每个工作进程每次执行 "),n("code",[e._v("listen(0)")]),e._v(' 时都会接收到相同的"随机"端口。 实质上，端口第一次是随机的，但之后是可预测的。 要监听唯一的端口，则根据集群工作进程 ID 生成端口号。')])]),e._v(" "),n("p",[e._v("Node.js 不提供路由逻辑。 因此，重要的是设计一个应用程序，使其在会话和登录等方面不会过于依赖内存中的数据对象。")]),e._v(" "),n("p",[e._v("因为工作进程都是独立的进程，所以它们可以根据程序的需要被杀死或重新衍生，而不会影响其他工作进程。 只要还有工作进程仍然活动，服务器就会继续接受连接。 如果没有工作进程活动，则现有的连接将被丢弃，且新的连接将被拒绝。 但是，Node.js 不会自动管理工作进程的数量。 应用程序有责任根据自己的需要管理工作进程池。")]),e._v(" "),n("p",[e._v("尽管 "),n("code",[e._v("cluster")]),e._v(" 模块的主要使用场景是网络，但它也可用于需要工作进程的其他使用场景。")]),e._v(" "),n("h3",{attrs:{id:"worker-类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-类"}},[e._v("#")]),e._v(" "),n("code",[e._v("Worker")]),e._v(" 类"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/class_worker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[e._v("继承自: "),n("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[n("EventEmitter",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[n("code",[e._v("Worker")]),e._v(" 对象包含了工作进程的所有公共的信息和方法。 在主进程中，可以使用 "),n("code",[e._v("cluster.workers")]),e._v(" 来获取它。 在工作进程中，可以使用 "),n("code",[e._v("cluster.worker")]),e._v(" 来获取它。")]),e._v(" "),n("h4",{attrs:{id:"disconnect-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#disconnect-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'disconnect'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-disconnect",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_disconnect.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.7")]),e._v(" "),n("p",[e._v("类似于 "),n("code",[e._v("cluster.on('disconnect')")]),e._v(" 事件，但特定于此工作进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.fork().on('disconnect', () => {\n  // 工作进程已断开连接\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h4",{attrs:{id:"error-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#error-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'error'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-error",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_error.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.3")]),e._v(" "),n("p",[e._v("此事件与 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_child_process_fork_modulepath_args_options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("child_process.fork()")]),n("OutboundLink")],1),e._v(" 提供的相同。")]),e._v(" "),n("p",[e._v("在工作进程中，也可以使用 "),n("code",[e._v("process.on('error')")]),e._v("。")]),e._v(" "),n("h4",{attrs:{id:"exit-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exit-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'exit'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-exit",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_exit.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.11.2")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("code")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[n("number",[n("OutboundLink")],1)],1),e._v(" 如果其正常退出，则为退出码。")]),e._v(" "),n("li",[n("code",[e._v("signal")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1),e._v(" 造成进程被终止的信号的名称（例如 "),n("code",[e._v("'SIGHUP'")]),e._v("）。")])]),e._v(" "),n("p",[e._v("类似于 "),n("code",[e._v("cluster.on('exit')")]),e._v(" 事件，但特定于此工作进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const worker = cluster.fork();\nworker.on('exit', (code, signal) => {\n  if (signal) {\n    console.log(`worker was killed by signal: ${signal}`);\n  } else if (code !== 0) {\n    console.log(`worker exited with error code: ${code}`);\n  } else {\n    console.log('worker success!');\n  }\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("h4",{attrs:{id:"listening-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#listening-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'listening'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-listening",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_listening.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("address")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("类似于 "),n("code",[e._v("cluster.on('listening')")]),e._v(" 事件，但特定于此工作进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.fork().on('listening', (address) => {\n  // 工作进程正在监听\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("它不会在工作进程中触发。")]),e._v(" "),n("h4",{attrs:{id:"message-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#message-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'message'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("message")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)]),e._v(" "),n("li",[n("code",[e._v("handle")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/8ym6ow",target:"_blank",rel:"noopener noreferrer"}},[n("undefined",[n("OutboundLink")],1)],1),e._v(" | "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("类似于 "),n("code",[e._v("cluster")]),e._v(" 的 "),n("code",[e._v("'message'")]),e._v(" 事件，但特定于此工作线程。")]),e._v(" "),n("p",[e._v("在工作进程中，也可以使用 "),n("code",[e._v("process.on('message')")]),e._v("。")]),e._v(" "),n("p",[e._v("参见 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_event_message",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("process")]),e._v(" 事件: "),n("code",[e._v("'message'")]),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("这是使用消息系统的示例。 它在主进程中记录工作进程接收到的 HTTP 请求数：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const cluster = require('cluster');\nconst http = require('http');\n\nif (cluster.isMaster) {\n\n  // 跟踪 http 请求\n  let numReqs = 0;\n  setInterval(() => {\n    console.log(`numReqs = ${numReqs}`);\n  }, 1000);\n\n  // 计数请求\n  function messageHandler(msg) {\n    if (msg.cmd && msg.cmd === 'notifyRequest') {\n      numReqs += 1;\n    }\n  }\n\n  // 启动工作进程并监听包含 notifyRequest 的消息\n  const numCPUs = require('os').cpus().length;\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork();\n  }\n\n  for (const id in cluster.workers) {\n    cluster.workers[id].on('message', messageHandler);\n  }\n\n} else {\n\n  // 工作进程具有 http 服务器。\n  http.Server((req, res) => {\n    res.writeHead(200);\n    res.end('hello world\\n');\n\n    // 通知主进程关于请求\n    process.send({ cmd: 'notifyRequest' });\n  }).listen(8000);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br")])]),n("h4",{attrs:{id:"online-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#online-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'online'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-online",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_online.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("p",[e._v("类似于 "),n("code",[e._v("cluster.on('online')")]),e._v(" 事件，但特定于此工作进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.fork().on('online', () => {\n  // 工作进程在线\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("它不会在工作进程中触发。")]),e._v(" "),n("h4",{attrs:{id:"worker-disconnect"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-disconnect"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.disconnect()")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workerdisconnect",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_disconnect.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[e._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1),e._v(" "),n("code",[e._v("worker")]),e._v(" 的引用。")])]),e._v(" "),n("p",[e._v("在工作进程中，此函数将关闭所有服务器，等待那些服务器上的 "),n("code",[e._v("'close'")]),e._v(" 事件，然后断开 IPC 通道。")]),e._v(" "),n("p",[e._v("在主进程中，内部的消息被发送给工作进程，使其调用自身的 "),n("code",[e._v(".disconnect()")]),e._v("。")]),e._v(" "),n("p",[e._v("使 "),n("code",[e._v(".exitedAfterDisconnect")]),e._v(" 被设置。")]),e._v(" "),n("p",[e._v("服务器关闭后，它将不再接受新连接，但连接可能会被任何其他监听的工作进程接受。 现有的连接将被允许像往常一样关闭。 当不再存在连接时（参见 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/net.html#net_event_close",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("server.close()")]),n("OutboundLink")],1),e._v("），到工作进程的 IPC 通道将关闭，允许其正常地死亡。")]),e._v(" "),n("p",[e._v("以上仅适用于服务器连接，客户端连接不会被工作进程自动关闭，并且断开连接不会等待它们关闭才退出。")]),e._v(" "),n("p",[e._v("在工作进程中，"),n("code",[e._v("process.disconnect")]),e._v(" 是存在的，但不是这个函数；它是 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_subprocess_disconnect",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("disconnect()")]),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("因为长期存在的服务器连接可能会阻止工作进程断开连接，所以发送消息可能很有用，因此可以采取特定于应用程序的操作来关闭它们。 实现超时也可能很有用，如果 "),n("code",[e._v("'disconnect'")]),e._v(" 事件在一段时间后没有触发，则杀死工作进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("if (cluster.isMaster) {\n  const worker = cluster.fork();\n  let timeout;\n\n  worker.on('listening', (address) => {\n    worker.send('shutdown');\n    worker.disconnect();\n    timeout = setTimeout(() => {\n      worker.kill();\n    }, 2000);\n  });\n\n  worker.on('disconnect', () => {\n    clearTimeout(timeout);\n  });\n\n} else if (cluster.isWorker) {\n  const net = require('net');\n  const server = net.createServer((socket) => {\n    // 连接永远不会结束\n  });\n\n  server.listen(8000);\n\n  process.on('message', (msg) => {\n    if (msg === 'shutdown') {\n      // 发起正常关闭与服务器的任何连接\n    }\n  });\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br")])]),n("h4",{attrs:{id:"worker-exitedafterdisconnect"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-exitedafterdisconnect"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.exitedAfterDisconnect")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workerexitedafterdisconnect",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_exitedafterdisconnect.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v6.0.0")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[n("boolean",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("如果工作进程由于 "),n("code",[e._v(".kill()")]),e._v(" 或 "),n("code",[e._v(".disconnect()")]),e._v(" 退出，则此属性为 "),n("code",[e._v("true")]),e._v("。 如果工作进程以任何其他方式退出，则为 "),n("code",[e._v("false")]),e._v("。 如果工作进程没有退出，则为 "),n("code",[e._v("undefined")]),e._v("。")]),e._v(" "),n("p",[e._v("布尔值 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_worker_exitedafterdisconnect",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("worker.exitedAfterDisconnect")]),n("OutboundLink")],1),e._v(" 可以区分自愿退出和意外退出，主进程可以根据此值选择不重新衍生工作进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.on('exit', (worker, code, signal) => {\n  if (worker.exitedAfterDisconnect === true) {\n    console.log('Oh, it was just voluntary – no need to worry');\n  }\n});\n\n// 杀死工作进程\nworker.kill();\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("h4",{attrs:{id:"worker-id"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-id"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.id")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workerid",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_id.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.8.0")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[n("number",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("每个新的工作进程都被赋予了自己唯一的 id，此 id 存储在 "),n("code",[e._v("id")]),e._v(".")]),e._v(" "),n("p",[e._v("当工作进程存活时，这是在 "),n("code",[e._v("cluster.workers")]),e._v(" 中索引它的键。")]),e._v(" "),n("h4",{attrs:{id:"worker-isconnected"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-isconnected"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.isConnected()")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workerisconnected",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_isconnected.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.11.14")]),e._v(" "),n("p",[e._v("如果工作进程通过其 IPC 通道连接到其主进程，则此函数返回 "),n("code",[e._v("true")]),e._v("，否则返回 "),n("code",[e._v("false")]),e._v("。 工作进程在创建后连接到其主进程。 触发 "),n("code",[e._v("'disconnect'")]),e._v(" 事件后断开连接。")]),e._v(" "),n("h4",{attrs:{id:"worker-isdead"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-isdead"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.isDead()")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workerisdead",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_isdead.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.11.14")]),e._v(" "),n("p",[e._v("如果工作进程已终止（由于退出或收到信号），则此函数返回 "),n("code",[e._v("true")]),e._v("。 否则，它返回 "),n("code",[e._v("false")]),e._v("。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const cluster = require('cluster');\nconst http = require('http');\nconst numCPUs = require('os').cpus().length;\n\nif (cluster.isMaster) {\n  console.log(`Master ${process.pid} is running`);\n\n  // 衍生工作进程。\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork();\n  }\n\n  cluster.on('fork', (worker) => {\n    console.log('worker is dead:', worker.isDead());\n  });\n\n  cluster.on('exit', (worker, code, signal) => {\n    console.log('worker is dead:', worker.isDead());\n  });\n} else {\n  // 工作进程可以共享任何 TCP 连接。在此示例中，它是 HTTP 服务器。\n  http.createServer((req, res) => {\n    res.writeHead(200);\n    res.end(`Current process\\n ${process.pid}`);\n    process.kill(process.pid);\n  }).listen(8000);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br")])]),n("h4",{attrs:{id:"worker-kill-signal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-kill-signal"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.kill([signal])")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workerkillsignal",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_kill_signal.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.9.12")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("signal")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1),e._v(" 发送给工作进程的终止信号的名称。 "),n("strong",[e._v("默认值")]),e._v(": "),n("code",[e._v("'SIGTERM'")])])]),e._v(" "),n("p",[e._v("此函数会杀死工作进程。 在主进程中，它通过断开 "),n("code",[e._v("worker.process")]),e._v(" 来实现这一点，一旦断开连接，就使用 "),n("code",[e._v("signal")]),e._v(" 杀死。 在工作进程中，它通过断开通道来完成，然后以代码 "),n("code",[e._v("0")]),e._v(" 退出。")]),e._v(" "),n("p",[e._v("由于 "),n("code",[e._v("kill()")]),e._v(" 尝试正常断开工作进程，因此很容易无限期地等待断开连接完成。 例如，如果工作进程进入无限循环，则永远不会发生正常的断开连接。 如果不需要正常的断开连接行为，则使用 "),n("code",[e._v("worker.process.kill()")]),e._v("。")]),e._v(" "),n("p",[e._v("使 "),n("code",[e._v(".exitedAfterDisconnect")]),e._v(" 被设置。")]),e._v(" "),n("p",[e._v("为了向后兼容，此方法别名为 "),n("code",[e._v("worker.destroy()")]),e._v("。")]),e._v(" "),n("p",[e._v("在工作进程中，"),n("code",[e._v("process.kill()")]),e._v(" 是存在的，但不是这个函数；它是 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_kill_pid_signal",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("kill()")]),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("h4",{attrs:{id:"worker-process"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-process"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.process")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workerprocess",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_process.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://nodejs.cn/api/child_process.html#class-childprocess",target:"_blank",rel:"noopener noreferrer"}},[n("ChildProcess",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("所有工作进程都是使用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_child_process_fork_modulepath_args_options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("child_process.fork()")]),n("OutboundLink")],1),e._v(" 创建，此函数返回的对象存储为 "),n("code",[e._v(".process")]),e._v("。 在工作进程中，存储了全局的 "),n("code",[e._v("process")]),e._v("。")]),e._v(" "),n("p",[e._v("请参阅："),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_child_process_fork_modulepath_args_options",target:"_blank",rel:"noopener noreferrer"}},[e._v("子进程模块"),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("p",[e._v("如果 "),n("code",[e._v("'disconnect'")]),e._v(" 事件发生在 "),n("code",[e._v("process")]),e._v(" 并且 "),n("code",[e._v(".exitedAfterDisconnect")]),e._v(" 不是 "),n("code",[e._v("true")]),e._v("，则工作进程将调用 "),n("code",[e._v("process.exit(0)")]),e._v("。 这可以防止意外断开连接。")]),e._v(" "),n("h4",{attrs:{id:"worker-send-message-sendhandle-options-callback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#worker-send-message-sendhandle-options-callback"}},[e._v("#")]),e._v(" "),n("code",[e._v("worker.send(message[, sendHandle[, options]][, callback])")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#workersendmessage-sendhandle-options-callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/worker_send_message_sendhandle_options_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[n("code",[e._v("message")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)]),e._v(" "),n("li",[n("code",[e._v("sendHandle")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/net.html#serverlistenhandle-backlog-callback",target:"_blank",rel:"noopener noreferrer"}},[n("Handle",[n("OutboundLink")],1)],1)]),e._v(" "),n("li",[n("code",[e._v("options")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1),e._v(" "),n("code",[e._v("options")]),e._v(" 参数（如果存在）是用于参数化某些类型句柄的发送的对象。 "),n("code",[e._v("options")]),e._v(" 支持以下属性：\n"),n("ul",[n("li",[n("code",[e._v("keepOpen")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[n("boolean",[n("OutboundLink")],1)],1),e._v(" 当传入 "),n("code",[e._v("net.Socket")]),e._v(" 实例时可以使用的值。 当为 "),n("code",[e._v("true")]),e._v(" 时，套接字在发送过程中保持打开状态。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("false")]),e._v("。")])])]),e._v(" "),n("li",[n("code",[e._v("callback")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[n("Function",[n("OutboundLink")],1)],1)]),e._v(" "),n("li",[e._v("返回: "),n("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[n("boolean",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("向工作进程或主进程发送消息，可选择使用句柄。")]),e._v(" "),n("p",[e._v("在主进程中，这会向特定的工作进程发送消息。 它与 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_subprocess_send_message_sendhandle_options_callback",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ChildProcess.send()")]),n("OutboundLink")],1),e._v(" 相同。")]),e._v(" "),n("p",[e._v("在工作进程中，这会向主进程发送消息。 它与 "),n("code",[e._v("process.send()")]),e._v(" 相同。")]),e._v(" "),n("p",[e._v("此示例将回显来自主进程的所有消息：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("if (cluster.isMaster) {\n  const worker = cluster.fork();\n  worker.send('hi there');\n\n} else if (cluster.isWorker) {\n  process.on('message', (msg) => {\n    process.send(msg);\n  });\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h3",{attrs:{id:"disconnect-事件-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#disconnect-事件-2"}},[e._v("#")]),e._v(" "),n("code",[e._v("'disconnect'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-disconnect_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_disconnect_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.9")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("worker")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("在工作进程 IPC 通道断开连接后触发。 当工作进程正常退出、被杀死、或手动断开连接（例如使用 "),n("code",[e._v("worker.disconnect()")]),e._v("）时，可能会发生这种情况。")]),e._v(" "),n("p",[n("code",[e._v("'disconnect'")]),e._v(" 和 "),n("code",[e._v("'exit'")]),e._v(" 事件之间可能存在延迟。 这些事件可用于检测进程是否陷入清理或是否存在长期连接。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.on('disconnect', (worker) => {\n  console.log(`The worker #${worker.id} has disconnected`);\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h3",{attrs:{id:"exit-事件-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exit-事件-2"}},[e._v("#")]),e._v(" "),n("code",[e._v("'exit'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-exit_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_exit_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.9")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("worker")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("code",[e._v("code")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[n("number",[n("OutboundLink")],1)],1),e._v(" 如果其正常退出，则为退出码。")]),e._v(" "),n("li",[n("code",[e._v("signal")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1),e._v(" 造成进程被终止的信号的名称（例如 "),n("code",[e._v("'SIGHUP'")]),e._v("）。")])]),e._v(" "),n("p",[e._v("当任何工作进程死亡时，则集群模块将触发 "),n("code",[e._v("'exit'")]),e._v(" 事件。")]),e._v(" "),n("p",[e._v("这可用于通过再次调用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_fork_env",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".fork()")]),n("OutboundLink")],1),e._v(" 来重新启动工作进程。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.on('exit', (worker, code, signal) => {\n  console.log('worker %d died (%s). restarting...',\n              worker.process.pid, signal || code);\n  cluster.fork();\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("p",[e._v("参见 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_event_exit",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("child_process")]),e._v(" 事件: "),n("code",[e._v("'exit'")]),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"fork-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fork-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'fork'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-fork",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_fork.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("worker")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("当新的工作进程被衍生时，则集群模块将触发 "),n("code",[e._v("'fork'")]),e._v(" 事件。 这可用于记录工作进程的活动，并创建自定义的超时。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const timeouts = [];\nfunction errorMsg() {\n  console.error('Something must be wrong with the connection ...');\n}\n\ncluster.on('fork', (worker) => {\n  timeouts[worker.id] = setTimeout(errorMsg, 2000);\n});\ncluster.on('listening', (worker, address) => {\n  clearTimeout(timeouts[worker.id]);\n});\ncluster.on('exit', (worker, code, signal) => {\n  clearTimeout(timeouts[worker.id]);\n  errorMsg();\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br")])]),n("h3",{attrs:{id:"listening-事件-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#listening-事件-2"}},[e._v("#")]),e._v(" "),n("code",[e._v("'listening'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-listening_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_listening_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("worker")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("code",[e._v("address")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("从工作线程调用 "),n("code",[e._v("listen()")]),e._v(" 后，当服务器上触发 "),n("code",[e._v("'listening'")]),e._v(" 事件时，则主进程中的 "),n("code",[e._v("cluster")]),e._v(" 事件也将触发 "),n("code",[e._v("'listening'")]),e._v(" 事件。")]),e._v(" "),n("p",[e._v("事件句柄使用两个参数执行，"),n("code",[e._v("worker")]),e._v(" 包含工作进程对象，"),n("code",[e._v("address")]),e._v(" 对象包含以下连接属性："),n("code",[e._v("address")]),e._v("、"),n("code",[e._v("port")]),e._v(" 和 "),n("code",[e._v("addressType")]),e._v("。 如果工作进程正在监听多个地址，则这将非常有用。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.on('listening', (worker, address) => {\n  console.log(\n    `A worker is now connected to ${address.address}:${address.port}`);\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[n("code",[e._v("addressType")]),e._v(" 是以下之一：")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("4")]),e._v(" (TCPv4)")]),e._v(" "),n("li",[n("code",[e._v("6")]),e._v(" (TCPv6)")]),e._v(" "),n("li",[n("code",[e._v("-1")]),e._v(" (Unix 域套接字)")]),e._v(" "),n("li",[n("code",[e._v("'udp4'")]),e._v(" or "),n("code",[e._v("'udp6'")]),e._v(" (UDP v4 或 v6)")])]),e._v(" "),n("h3",{attrs:{id:"message-事件-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#message-事件-2"}},[e._v("#")]),e._v(" "),n("code",[e._v("'message'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-message_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_message_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[n("code",[e._v("worker")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("code",[e._v("message")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)]),e._v(" "),n("li",[n("code",[e._v("handle")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/8ym6ow",target:"_blank",rel:"noopener noreferrer"}},[n("undefined",[n("OutboundLink")],1)],1),e._v(" | "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("当集群主进程接收到来自任何工作进程的消息时触发。")]),e._v(" "),n("p",[e._v("参见 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_event_message",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("child_process")]),e._v(" 事件: "),n("code",[e._v("'message'")]),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"online-事件-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#online-事件-2"}},[e._v("#")]),e._v(" "),n("code",[e._v("'online'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-online_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_online_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("worker")]),e._v(" "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("衍生新的工作进程之后，工作进程应该使用在线消息进行响应。 当主进程接收到在线消息时，它将触发此事件。 "),n("code",[e._v("'fork'")]),e._v(" 和 "),n("code",[e._v("'online'")]),e._v(" 的区别在于主进程衍生工作进程时触发衍生，而 "),n("code",[e._v("'online'")]),e._v(" 在工作进程运行时触发。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("cluster.on('online', (worker) => {\n  console.log('Yay, the worker responded after it was forked');\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h3",{attrs:{id:"setup-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setup-事件"}},[e._v("#")]),e._v(" "),n("code",[e._v("'setup'")]),e._v(" 事件"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#event-setup",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/event_setup.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.1")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("settings")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("每次调用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_setupmaster_settings",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".setupMaster()")]),n("OutboundLink")],1),e._v(" 时触发。")]),e._v(" "),n("p",[n("code",[e._v("settings")]),e._v(" 对象是调用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_setupmaster_settings",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".setupMaster()")]),n("OutboundLink")],1),e._v(" 时的 "),n("code",[e._v("cluster.settings")]),e._v(" 对象，并且只是建议性的，因为可以在单个滴答中对 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_setupmaster_settings",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".setupMaster()")]),n("OutboundLink")],1),e._v(" 进行多次调用。")]),e._v(" "),n("p",[e._v("如果准确性很重要，则使用 "),n("code",[e._v("cluster.settings")]),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"cluster-disconnect-callback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-disconnect-callback"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.disconnect([callback])")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clusterdisconnectcallback",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_disconnect_callback.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.7")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("callback")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[n("Function",[n("OutboundLink")],1)],1),e._v(" 当所有工作进程断开连接并关闭句柄时调用。")])]),e._v(" "),n("p",[e._v("对 "),n("code",[e._v("cluster.workers")]),e._v(" 中的每个工作进程调用 "),n("code",[e._v(".disconnect()")]),e._v("。")]),e._v(" "),n("p",[e._v("当它们断开连接时，所有的内部句柄都将关闭，如果没有其他事件在等待，则允许主进程正常终止。")]),e._v(" "),n("p",[e._v("该方法采用可选的回调参数，当完成时将被调用。")]),e._v(" "),n("p",[e._v("这只能从主进程调用。")]),e._v(" "),n("h3",{attrs:{id:"cluster-fork-env"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-fork-env"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.fork([env])")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clusterforkenv",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_fork_env.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.6.0")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("env")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1),e._v(" 要添加到工作进程环境变量的键/值对。")]),e._v(" "),n("li",[e._v("返回: "),n("a",{attrs:{href:"http://nodejs.cn/api/cluster.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("<cluster.Worker>"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("衍生新的工作进程。")]),e._v(" "),n("p",[e._v("这只能从主进程调用。")]),e._v(" "),n("h3",{attrs:{id:"cluster-ismaster"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-ismaster"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.isMaster")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clusterismaster",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_ismaster.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.8.1")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[n("boolean",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("如果进程是主进程，则为真。 这是由 "),n("code",[e._v("process.env.NODE_UNIQUE_ID")]),e._v(" 决定的。 如果 "),n("code",[e._v("process.env.NODE_UNIQUE_ID")]),e._v(" 未定义，则 "),n("code",[e._v("isMaster")]),e._v(" 为 "),n("code",[e._v("true")]),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"cluster-isworker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-isworker"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.isWorker")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clusterisworker",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_isworker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.6.0")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[n("boolean",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("如果进程不是主进程，则为真（与 "),n("code",[e._v("cluster.isMaster")]),e._v(" 相反）。")]),e._v(" "),n("h3",{attrs:{id:"cluster-schedulingpolicy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-schedulingpolicy"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.schedulingPolicy")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clusterschedulingpolicy",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_schedulingpolicy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.11.2")]),e._v(" "),n("p",[e._v("调度策略，"),n("code",[e._v("cluster.SCHED_RR")]),e._v(" 用于循环或 "),n("code",[e._v("cluster.SCHED_NONE")]),e._v(" 将其留给操作系统。 这是全局的设置，一旦衍生第一个工作进程或调用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_setupmaster_settings",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".setupMaster()")]),n("OutboundLink")],1),e._v("（以先到者为准），就会有效地冻结。")]),e._v(" "),n("p",[n("code",[e._v("SCHED_RR")]),e._v(" 是除 Windows 之外的所有操作系统的默认值。 一旦 libuv 能够有效地分发 IOCP 句柄而不会导致大量性能损失，则 Windows 将更改为 "),n("code",[e._v("SCHED_RR")]),e._v("。")]),e._v(" "),n("p",[n("code",[e._v("cluster.schedulingPolicy")]),e._v(" 也可以通过 "),n("code",[e._v("NODE_CLUSTER_SCHED_POLICY")]),e._v(" 环境变量设置。 有效值为 "),n("code",[e._v("'rr'")]),e._v(" 和 "),n("code",[e._v("'none'")]),e._v("。")]),e._v(" "),n("h3",{attrs:{id:"cluster-settings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-settings"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.settings")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clustersettings",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_settings.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1),e._v(" "),n("ul",[n("li",[n("code",[e._v("execArgv")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[e._v("<string[]>"),n("OutboundLink")],1),e._v(" 传给 Node.js 可执行文件的字符串参数列表。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("process.execArgv")]),e._v("。")]),e._v(" "),n("li",[n("code",[e._v("exec")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1),e._v(" 工作进程文件的文件路径。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("process.argv[1]")]),e._v("。")]),e._v(" "),n("li",[n("code",[e._v("args")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[e._v("<string[]>"),n("OutboundLink")],1),e._v(" 传给工作进程的字符串参数。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("process.argv.slice(2)")]),e._v("。")]),e._v(" "),n("li",[n("code",[e._v("cwd")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1),e._v(" 工作进程的当前工作目录。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("undefined")]),e._v(" （从父进程继承）。")]),e._v(" "),n("li",[n("code",[e._v("serialization")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[n("string",[n("OutboundLink")],1)],1),e._v(" 指定用于在进程之间发送消息的序列化类型。 可能的值为 "),n("code",[e._v("'json'")]),e._v(" 和 "),n("code",[e._v("'advanced'")]),e._v("。 有关更多详细信息，请参阅"),n("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html#child_process_advanced_serialization",target:"_blank",rel:"noopener noreferrer"}},[e._v("子进程的高级序列化"),n("OutboundLink")],1),e._v("。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("false")]),e._v("。")]),e._v(" "),n("li",[n("code",[e._v("silent")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[n("boolean",[n("OutboundLink")],1)],1),e._v(" 是否将输出发送到父进程的标准输入输出。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("false")]),e._v("。")]),e._v(" "),n("li",[n("code",[e._v("stdio")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/ZJSz23",target:"_blank",rel:"noopener noreferrer"}},[n("Array",[n("OutboundLink")],1)],1),e._v(" 配置衍生进程的标准输入输出。 由于集群模块依赖 IPC 来运行，因此此配置必须包含 "),n("code",[e._v("'ipc'")]),e._v(" 条目。 提供此选项时，它会覆盖 "),n("code",[e._v("silent")]),e._v("。")]),e._v(" "),n("li",[n("code",[e._v("uid")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[n("number",[n("OutboundLink")],1)],1),e._v(" 设置进程的用户标识。 （见 "),n("a",{attrs:{href:"http://url.nodejs.cn/bUGgha",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("setuid(2)")]),n("OutboundLink")],1),e._v("。）")]),e._v(" "),n("li",[n("code",[e._v("gid")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[n("number",[n("OutboundLink")],1)],1),e._v(" 设置进程的群组标识。 （见 "),n("a",{attrs:{href:"http://url.nodejs.cn/64HRVx",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("setgid(2)")]),n("OutboundLink")],1),e._v("。）")]),e._v(" "),n("li",[n("code",[e._v("inspectPort")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[n("number",[n("OutboundLink")],1)],1),e._v(" | "),n("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[n("Function",[n("OutboundLink")],1)],1),e._v(" 设置工作进程的检查器端口。 这可以是数字，也可以是不带参数并返回数字的函数。 默认情况下，每个工作进程都有自己的端口，从主进程的 "),n("code",[e._v("process.debugPort")]),e._v(" 开始递增。")]),e._v(" "),n("li",[n("code",[e._v("windowsHide")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[n("boolean",[n("OutboundLink")],1)],1),e._v(" 隐藏通常在 Windows 系统上创建的衍生进程控制台窗口。 "),n("strong",[e._v("默认值:")]),e._v(" "),n("code",[e._v("false")]),e._v("。")])])])]),e._v(" "),n("p",[e._v("调用 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_setupmaster_settings",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".setupMaster()")]),n("OutboundLink")],1),e._v("（或 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_fork_env",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".fork()")]),n("OutboundLink")],1),e._v("）之后，此设置对象将包含设置，包括默认值。")]),e._v(" "),n("p",[e._v("此对象不应手动更改或设置。")]),e._v(" "),n("h3",{attrs:{id:"cluster-setupmaster-settings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-setupmaster-settings"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.setupMaster([settings])")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clustersetupmastersettings",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_setupmaster_settings.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("ul",[n("li",[n("code",[e._v("settings")]),e._v(" "),n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1),e._v(" 参见 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_settings",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("cluster.settings")]),n("OutboundLink")],1),e._v("。")])]),e._v(" "),n("p",[n("code",[e._v("setupMaster")]),e._v(" 用于更改默认的 'fork' 行为。 调用后，设置将出现在 "),n("code",[e._v("cluster.settings")]),e._v(" 中。")]),e._v(" "),n("p",[e._v("任何设置更改只会影响未来对 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_fork_env",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".fork()")]),n("OutboundLink")],1),e._v(" 的调用，而不会影响已经运行的工作进程。")]),e._v(" "),n("p",[e._v("唯一不能通过 "),n("code",[e._v(".setupMaster()")]),e._v(" 设置的工作进程属性是传给 "),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#cluster_cluster_fork_env",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v(".fork()")]),n("OutboundLink")],1),e._v(" 的 "),n("code",[e._v("env")]),e._v("。")]),e._v(" "),n("p",[e._v("上述默认值仅适用于第一次调用；以后调用的默认值是调用 "),n("code",[e._v("cluster.setupMaster()")]),e._v(" 时的当前值。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const cluster = require('cluster');\ncluster.setupMaster({\n  exec: 'worker.js',\n  args: ['--use', 'https'],\n  silent: true\n});\ncluster.fork(); // https 工作进程\ncluster.setupMaster({\n  exec: 'worker.js',\n  args: ['--use', 'http']\n});\ncluster.fork(); // http 工作进程\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br")])]),n("p",[e._v("这只能从主进程调用。")]),e._v(" "),n("h3",{attrs:{id:"cluster-worker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-worker"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.worker")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clusterworker",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_worker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("对当前工作进程对象的引用。 在主进程中不可用。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const cluster = require('cluster');\n\nif (cluster.isMaster) {\n  console.log('I am master');\n  cluster.fork();\n  cluster.fork();\n} else if (cluster.isWorker) {\n  console.log(`I am worker #${cluster.worker.id}`);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h3",{attrs:{id:"cluster-workers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cluster-workers"}},[e._v("#")]),e._v(" "),n("code",[e._v("cluster.workers")]),n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html#clusterworkers",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster/cluster_workers.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("新增于: v0.7.0")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[n("Object",[n("OutboundLink")],1)],1)])]),e._v(" "),n("p",[e._v("存储活动工作进程对象的哈希，以 "),n("code",[e._v("id")]),e._v(" 字段为键。 使循环遍历所有工作进程变得容易。 它仅在主进程中可用。")]),e._v(" "),n("p",[e._v("在工作进程断开连接并退出后，工作进程会从 "),n("code",[e._v("cluster.workers")]),e._v(" 中删除。 这两个事件之间的顺序无法预先确定。 但是，可以保证从 "),n("code",[e._v("cluster.workers")]),e._v(" 列表中的删除发生在最后一个 "),n("code",[e._v("'disconnect'")]),e._v(" 或 "),n("code",[e._v("'exit'")]),e._v(" 事件触发之前。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 遍历所有工作进程\nfunction eachWorker(callback) {\n  for (const id in cluster.workers) {\n    callback(cluster.workers[id]);\n  }\n}\neachWorker((worker) => {\n  worker.send('big announcement to all workers');\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("使用工作进程的唯一 id 是定位工作进程的最简单方法。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("socket.on('data', (id) => {\n  const worker = cluster.workers[id];\n});\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])])])}),[],!1,null,null,null);r.default=s.exports}}]);