(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{595:function(e,r,s){"use strict";s.r(r);var n=s(18),t=Object(n.a)({},(function(){var e=this,r=e.$createElement,s=e._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"assert-断言-node-js-api-文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-断言-node-js-api-文档"}},[e._v("#")]),e._v(" assert 断言 | Node.js API 文档")]),e._v(" "),s("blockquote",[s("h2",{attrs:{id:"excerpt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),s("p",[e._v("中英对照")])]),e._v(" "),s("hr"),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("strong",[e._v("源代码:")]),e._v(" "),s("a",{attrs:{href:"https://github.com/nodejs/node/blob/v12.22.12/lib/assert.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/assert.js"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("code",[e._v("assert")]),e._v(" 模块提供了一组用于验证不变量的断言函数。")]),e._v(" "),s("h3",{attrs:{id:"严格断言模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#严格断言模式"}},[e._v("#")]),e._v(" 严格断言模式"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#strict-assertion-mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/strict_assertion_mode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("在严格断言模式下，非严格方法的行为与其对应的严格方法相同。 例如，"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepEqual()")]),s("OutboundLink")],1),e._v(" 的行为类似于 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepstrictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepStrictEqual()")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[e._v("在严格断言模式下，对象的错误消息显示差异。 在旧版断言模式下，对象的错误消息显示对象，通常被截断。")]),e._v(" "),s("p",[e._v("使用严格断言模式：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("错误差异的示例：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.deepEqual([[[1, 2, 3]], 4, 5], [[[1, 2, '3']], 4, 5]);\n// AssertionError: Expected inputs to be strictly deep-equal:\n// + actual - expected ... Lines skipped\n//\n//   [\n//     [\n// ...\n//       2,\n// +     3\n// -     '3'\n//     ],\n// ...\n//     5\n//   ]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("p",[e._v("要停用颜色，则使用 "),s("code",[e._v("NO_COLOR")]),e._v(" 或 "),s("code",[e._v("NODE_DISABLE_COLORS")]),e._v(" 环境变量。 这也将停用交互式解释器中的颜色。")]),e._v(" "),s("h3",{attrs:{id:"旧版断言模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#旧版断言模式"}},[e._v("#")]),e._v(" 旧版断言模式"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#legacy-assertion-mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/legacy_assertion_mode.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("旧版断言模式在以下方法中使用"),s("a",{attrs:{href:"http://url.nodejs.cn/tiZhGn",target:"_blank",rel:"noopener noreferrer"}},[e._v("抽象相等比较"),s("OutboundLink")],1),e._v("：")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepEqual()")]),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_equal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.equal()")]),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_notdeepequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.notDeepEqual()")]),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_notequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.notEqual()")]),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("要使用旧版断言模式：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("尽可能改用"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_strict_assertion_mode",target:"_blank",rel:"noopener noreferrer"}},[e._v("严格断言模式"),s("OutboundLink")],1),e._v("。 否则，"),s("a",{attrs:{href:"http://url.nodejs.cn/tiZhGn",target:"_blank",rel:"noopener noreferrer"}},[e._v("抽象相等比较"),s("OutboundLink")],1),e._v("可能会导致意外的结果。 对于 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepEqual()")]),s("OutboundLink")],1),e._v(" 尤其如此，其比较规则很宽松：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 注意：这不会抛出 AssertionError！\nassert.deepEqual(/a/gi, new Date());\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h3",{attrs:{id:"assert-assertionerror-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-assertionerror-类"}},[e._v("#")]),e._v(" assert.AssertionError 类"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#class-assertassertionerror",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/class_assert_assertionerror.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("继承自: "),s("a",{attrs:{href:"http://nodejs.cn/api/errors.html#class-error",target:"_blank",rel:"noopener noreferrer"}},[e._v("<errors.Error>"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("表示断言的失败。 "),s("code",[e._v("assert")]),e._v(" 模块抛出的所有错误都是 "),s("code",[e._v("AssertionError")]),e._v(" 类的实例。")]),e._v(" "),s("h4",{attrs:{id:"new-assert-assertionerror-options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-assert-assertionerror-options"}},[e._v("#")]),e._v(" "),s("code",[e._v("new assert.AssertionError(options)")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#new-assertassertionerroroptions",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/new_assert_assertionerror_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v0.1.21")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("options")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[s("Object",[s("OutboundLink")],1)],1),e._v(" "),s("ul",[s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" 如果提供，则错误消息将设置为此值。")]),e._v(" "),s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1),e._v(" 错误实例上的 "),s("code",[e._v("actual")]),e._v(" 属性。")]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1),e._v(" 错误实例上的 "),s("code",[e._v("expected")]),e._v(" 属性。")]),e._v(" "),s("li",[s("code",[e._v("operator")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" 错误实例上的 "),s("code",[e._v("operator")]),e._v(" 属性。")]),e._v(" "),s("li",[s("code",[e._v("stackStartFn")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" 如果提供，则生成的堆栈跟踪将省略此函数之前的帧。")])])])]),e._v(" "),s("p",[s("code",[e._v("Error")]),e._v(" 的子类，表示断言的失败。")]),e._v(" "),s("p",[e._v("所有实例都包含内置的 "),s("code",[e._v("Error")]),e._v(" 属性（"),s("code",[e._v("message")]),e._v(" 和 "),s("code",[e._v("name")]),e._v("），以及：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1),e._v(" 对于 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_strictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.strictEqual()")]),s("OutboundLink")],1),e._v(" 等方法，设置为 "),s("code",[e._v("actual")]),e._v(" 参数。")]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1),e._v(" 对于 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_strictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.strictEqual()")]),s("OutboundLink")],1),e._v(" 等方法，设置为 "),s("code",[e._v("expected")]),e._v(" 值。")]),e._v(" "),s("li",[s("code",[e._v("generatedMessage")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[s("boolean",[s("OutboundLink")],1)],1),e._v(" 指示消息是否是自动生成的 ("),s("code",[e._v("true")]),e._v(")。")]),e._v(" "),s("li",[s("code",[e._v("code")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" 值始终为 "),s("code",[e._v("ERR_ASSERTION")]),e._v("，以表明该错误是断言错误。")]),e._v(" "),s("li",[s("code",[e._v("operator")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" 设置为传入的运算符值。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\n// 生成 AssertionError，以便稍后比较错误信息：\nconst { message } = new assert.AssertionError({\n  actual: 1,\n  expected: 2,\n  operator: 'strictEqual'\n});\n\n// 验证错误的输出：\ntry {\n  assert.strictEqual(1, 2);\n} catch (err) {\n  assert(err instanceof assert.AssertionError);\n  assert.strictEqual(err.message, message);\n  assert.strictEqual(err.name, 'AssertionError');\n  assert.strictEqual(err.actual, 1);\n  assert.strictEqual(err.expected, 2);\n  assert.strictEqual(err.code, 'ERR_ASSERTION');\n  assert.strictEqual(err.operator, 'strictEqual');\n  assert.strictEqual(err.generatedMessage, true);\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br")])]),s("h3",{attrs:{id:"assert-calltracker-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-calltracker-类"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.CallTracker")]),e._v(" 类"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#class-assertcalltracker",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/class_assert_calltracker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v12.19.0")]),e._v(" "),s("p",[e._v("此功能目前处于实验阶段，行为可能仍会发生变化。")]),e._v(" "),s("h4",{attrs:{id:"new-assert-calltracker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-assert-calltracker"}},[e._v("#")]),e._v(" "),s("code",[e._v("new assert.CallTracker()")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#new-assertcalltracker",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/new_assert_calltracker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v12.19.0")]),e._v(" "),s("p",[e._v("创建新的 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_calltracker",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("CallTracker")]),s("OutboundLink")],1),e._v(" 对象，其可用于跟踪函数是否被调用了特定次数。 必须调用 "),s("code",[e._v("tracker.verify()")]),e._v(" 才能进行验证。 通常的模式是在 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_event_exit",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("process.on('exit')")]),s("OutboundLink")],1),e._v(" 句柄中调用。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\nconst tracker = new assert.CallTracker();\n\nfunction func() {}\n\n// callfunc() 必须在 tracker.verify() 之前恰好被调用 1 次。\nconst callsfunc = tracker.calls(func, 1);\n\ncallsfunc();\n\n// 调用 tracker.verify() 并验证是否所有 tracker.calls() 函数都已被准确调用。\nprocess.on('exit', () => {\n  tracker.verify();\n});\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("h4",{attrs:{id:"tracker-calls-fn-exact"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tracker-calls-fn-exact"}},[e._v("#")]),e._v(" "),s("code",[e._v("tracker.calls([fn][, exact])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#trackercallsfn-exact",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/tracker_calls_fn_exact.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v12.19.0")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("fn")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" "),s("strong",[e._v("Default")]),e._v(" 无操作的函数。")]),e._v(" "),s("li",[s("code",[e._v("exact")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[s("number",[s("OutboundLink")],1)],1),e._v(" "),s("strong",[e._v("Default")]),e._v(" "),s("code",[e._v("1")]),e._v("。")]),e._v(" "),s("li",[e._v("返回: "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" 封装 "),s("code",[e._v("fn")]),e._v("。")])]),e._v(" "),s("p",[e._v("预计封装函数将被精确调用 "),s("code",[e._v("exact")]),e._v(" 次。 如果在调用 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_tracker_verify",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("tracker.verify()")]),s("OutboundLink")],1),e._v(" 时函数没有被精确调用 "),s("code",[e._v("exact")]),e._v(" 次，那么 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_tracker_verify",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("tracker.verify()")]),s("OutboundLink")],1),e._v(" 将抛出错误。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\n// 创建调用跟踪器。\nconst tracker = new assert.CallTracker();\n\nfunction func() {}\n\n// 返回封装 func() 的函数，其必须在 tracker.verify() 之前调用准确次数。\nconst callsfunc = tracker.calls(func);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("h4",{attrs:{id:"tracker-report"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tracker-report"}},[e._v("#")]),e._v(" "),s("code",[e._v("tracker.report()")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#trackerreport",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/tracker_report.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v12.19.0")]),e._v(" "),s("ul",[s("li",[e._v("返回: "),s("a",{attrs:{href:"http://url.nodejs.cn/ZJSz23",target:"_blank",rel:"noopener noreferrer"}},[s("Array",[s("OutboundLink")],1)],1),e._v(" 包含有关 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_tracker_calls_fn_exact",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("tracker.calls()")]),s("OutboundLink")],1),e._v(" 返回的封装函数的信息的对象的数组。")]),e._v(" "),s("li",[e._v("对象 "),s("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[s("Object",[s("OutboundLink")],1)],1),e._v(" "),s("ul",[s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[s("number",[s("OutboundLink")],1)],1),e._v(" 函数被调用的实际次数。")]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[s("number",[s("OutboundLink")],1)],1),e._v(" 函数预期被调用的次数。")]),e._v(" "),s("li",[s("code",[e._v("operator")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" 被封装的函数的名称。")]),e._v(" "),s("li",[s("code",[e._v("stack")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[s("Object",[s("OutboundLink")],1)],1),e._v(" 函数的堆栈跟踪。")])])])]),e._v(" "),s("p",[e._v("数组包含有关未调用预期次数的函数的预期和实际调用次数的信息。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\n// 创建调用跟踪器。\nconst tracker = new assert.CallTracker();\n\nfunction func() {}\n\nfunction foo() {}\n\n// 返回封装 func() 的函数，其必须在 tracker.verify() 之前调用准确次数。\nconst callsfunc = tracker.calls(func, 2);\n\n// 返回包含 callfunc() 信息的数组()\ntracker.report();\n// [\n//  {\n//    message: 'Expected the func function to be executed 2 time(s) but was\n//    executed 0 time(s).',\n//    actual: 0,\n//    expected: 2,\n//    operator: 'func',\n//    stack: stack trace\n//  }\n// ]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br")])]),s("h4",{attrs:{id:"tracker-verify"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tracker-verify"}},[e._v("#")]),e._v(" "),s("code",[e._v("tracker.verify()")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#trackerverify",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/tracker_verify.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v12.19.0")]),e._v(" "),s("p",[e._v("遍历传给 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_tracker_calls_fn_exact",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("tracker.calls()")]),s("OutboundLink")],1),e._v(" 的函数列表，对于未按预期调用次数的函数将抛出错误。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\n// 创建调用跟踪器。\nconst tracker = new assert.CallTracker();\n\nfunction func() {}\n\n// 返回封装 func() 的函数，其必须在 tracker.verify() 之前调用准确次数。\nconst callsfunc = tracker.calls(func, 2);\n\ncallsfunc();\n\n// 会抛出错误，因为 callfunc() 只被调用了一次。\ntracker.verify();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br")])]),s("h3",{attrs:{id:"assert-value-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-value-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert(value[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertvalue-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_value_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v0.5.9")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("value")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1),e._v(" 检查为真的输入。")]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_ok_value_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.ok()")]),s("OutboundLink")],1),e._v(" 的别名。")]),e._v(" "),s("h3",{attrs:{id:"assert-deepequal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-deepequal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.deepEqual(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertdeepequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_deepequal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[s("strong",[e._v("严格断言模式")])]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepstrictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepStrictEqual()")]),s("OutboundLink")],1),e._v(" 的别名。")]),e._v(" "),s("p",[s("strong",[e._v("旧版断言模式")])]),e._v(" "),s("p",[e._v("测试 "),s("code",[e._v("actual")]),e._v(" 和 "),s("code",[e._v("expected")]),e._v(" 参数之间的深度相等。 考虑使用 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepstrictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepStrictEqual()")]),s("OutboundLink")],1),e._v(" 代替。 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepEqual()")]),s("OutboundLink")],1),e._v(" 可能产生意外的结果。")]),e._v(" "),s("p",[e._v('深度相等意味着子对象的可枚举"自有"属性也按照以下规则递归地评估。')]),e._v(" "),s("h4",{attrs:{id:"比较详情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较详情"}},[e._v("#")]),e._v(" 比较详情"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#comparison-details",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/comparison_details.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("对象的"),s("a",{attrs:{href:"http://url.nodejs.cn/NVhBn1",target:"_blank",rel:"noopener noreferrer"}},[e._v("类型标签"),s("OutboundLink")],1),e._v("应该是一样的。")]),e._v(" "),s("li",[e._v("仅考虑"),s("a",{attrs:{href:"http://url.nodejs.cn/hTNJUJ",target:"_blank",rel:"noopener noreferrer"}},[e._v("自有属性"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 名称和消息总是被比较，即使它们不是可枚举的属性。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://url.nodejs.cn/hem2hq",target:"_blank",rel:"noopener noreferrer"}},[e._v("对象封装器"),s("OutboundLink")],1),e._v("作为对象和未封装的值进行比较。")]),e._v(" "),s("li",[s("code",[e._v("Object")]),e._v(" 属性是无序比较的。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://url.nodejs.cn/EnuJtG",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Map")]),s("OutboundLink")],1),e._v(" 键和 "),s("a",{attrs:{href:"http://url.nodejs.cn/yej4PC",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Set")]),s("OutboundLink")],1),e._v(" 项是无序比较的。")]),e._v(" "),s("li",[e._v("当双方不同或双方遇到循环引用时，则递归停止。")]),e._v(" "),s("li",[e._v("实现不测试对象的 "),s("a",{attrs:{href:"http://url.nodejs.cn/yzA3TL",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("[[Prototype]]")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("li",[e._v("不比较 "),s("a",{attrs:{href:"http://url.nodejs.cn/SyrFMg",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Symbol")]),s("OutboundLink")],1),e._v(" 属性。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://url.nodejs.cn/JkfoVY",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("WeakMap")]),s("OutboundLink")],1),e._v(" 和 "),s("a",{attrs:{href:"http://url.nodejs.cn/gsMyy2",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("WeakSet")]),s("OutboundLink")],1),e._v(" 的比较不依赖于它们的值。")])]),e._v(" "),s("p",[e._v("以下示例不会抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，因为"),s("a",{attrs:{href:"http://url.nodejs.cn/tiZhGn",target:"_blank",rel:"noopener noreferrer"}},[e._v("抽象相等比较"),s("OutboundLink")],1),e._v("（"),s("code",[e._v("==")]),e._v("）认为原始值相等。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 注意：这不会抛出 AssertionError！\nassert.deepEqual('+00000000', false);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v('“深度”相等意味着子对象的可枚举"自有"属性也被评估：')]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\nconst obj1 = {\n  a: {\n    b: 1\n  }\n};\nconst obj2 = {\n  a: {\n    b: 2\n  }\n};\nconst obj3 = {\n  a: {\n    b: 1\n  }\n};\nconst obj4 = Object.create(obj1);\n\nassert.deepEqual(obj1, obj1);\n// OK\n\n// b 的值不同：\nassert.deepEqual(obj1, obj2);\n// AssertionError: { a: { b: 1 } } deepEqual { a: { b: 2 } }\n\nassert.deepEqual(obj1, obj3);\n// OK\n\n// 原型被忽略：\nassert.deepEqual(obj1, obj4);\n// AssertionError: { a: { b: 1 } } deepEqual {}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br")])]),s("p",[e._v("如果值不相等，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-deepstrictequal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-deepstrictequal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.deepStrictEqual(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertdeepstrictequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_deepstrictequal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("测试 "),s("code",[e._v("actual")]),e._v(" 和 "),s("code",[e._v("expected")]),e._v(' 参数之间的深度相等。 "深度"相等意味着子对象的可枚举"自有"属性也按照以下规则递归地评估。')]),e._v(" "),s("h4",{attrs:{id:"比较详情-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较详情-2"}},[e._v("#")]),e._v(" 比较详情"),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#comparison-details_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/comparison_details_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("使用 "),s("a",{attrs:{href:"http://url.nodejs.cn/fQqJVi",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Object.is()")]),s("OutboundLink")],1),e._v(" 使用的 "),s("a",{attrs:{href:"http://url.nodejs.cn/25ULs2",target:"_blank",rel:"noopener noreferrer"}},[e._v("SameValue 比较"),s("OutboundLink")],1),e._v("来比较原始值。")]),e._v(" "),s("li",[e._v("对象的"),s("a",{attrs:{href:"http://url.nodejs.cn/NVhBn1",target:"_blank",rel:"noopener noreferrer"}},[e._v("类型标签"),s("OutboundLink")],1),e._v("应该是一样的。")]),e._v(" "),s("li",[e._v("对象的 "),s("a",{attrs:{href:"http://url.nodejs.cn/yzA3TL",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("[[Prototype]]")]),s("OutboundLink")],1),e._v(" 使用"),s("a",{attrs:{href:"http://url.nodejs.cn/jFa5Tv",target:"_blank",rel:"noopener noreferrer"}},[e._v("严格相等比较"),s("OutboundLink")],1),e._v("进行比较。")]),e._v(" "),s("li",[e._v("仅考虑"),s("a",{attrs:{href:"http://url.nodejs.cn/hTNJUJ",target:"_blank",rel:"noopener noreferrer"}},[e._v("自有属性"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 名称和消息总是被比较，即使它们不是可枚举的属性。")]),e._v(" "),s("li",[e._v("也比较了可枚举的自有 "),s("a",{attrs:{href:"http://url.nodejs.cn/SyrFMg",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Symbol")]),s("OutboundLink")],1),e._v(" 属性。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://url.nodejs.cn/hem2hq",target:"_blank",rel:"noopener noreferrer"}},[e._v("对象封装器"),s("OutboundLink")],1),e._v("作为对象和未封装的值进行比较。")]),e._v(" "),s("li",[s("code",[e._v("Object")]),e._v(" 属性是无序比较的。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://url.nodejs.cn/EnuJtG",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Map")]),s("OutboundLink")],1),e._v(" 键和 "),s("a",{attrs:{href:"http://url.nodejs.cn/yej4PC",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Set")]),s("OutboundLink")],1),e._v(" 项是无序比较的。")]),e._v(" "),s("li",[e._v("当双方不同或双方遇到循环引用时，则递归停止。")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://url.nodejs.cn/JkfoVY",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("WeakMap")]),s("OutboundLink")],1),e._v(" 和 "),s("a",{attrs:{href:"http://url.nodejs.cn/gsMyy2",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("WeakSet")]),s("OutboundLink")],1),e._v(" 的比较不依赖于它们的值。 有关更多详细信息，请参见下文。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\n// 这失败了，因为 1 !== '1'。\nassert.deepStrictEqual({ a: 1 }, { a: '1' });\n// AssertionError: Expected inputs to be strictly deep-equal:\n// + actual - expected\n//\n//   {\n// +   a: 1\n// -   a: '1'\n//   }\n\n// 以下对象没有自有的属性\nconst date = new Date();\nconst object = {};\nconst fakeDate = {};\nObject.setPrototypeOf(fakeDate, Date.prototype);\n\n// 不同的原型：\nassert.deepStrictEqual(object, fakeDate);\n// AssertionError: Expected inputs to be strictly deep-equal:\n// + actual - expected\n//\n// + {}\n// - Date {}\n\n// 不同的类型标签：\nassert.deepStrictEqual(date, fakeDate);\n// AssertionError: Expected inputs to be strictly deep-equal:\n// + actual - expected\n//\n// + 2018-04-26T00:49:08.604Z\n// - Date {}\n\nassert.deepStrictEqual(NaN, NaN);\n// OK，因为 SameValue 比较\n\n// 不同的解封装数字：\nassert.deepStrictEqual(new Number(1), new Number(2));\n// AssertionError: Expected inputs to be strictly deep-equal:\n// + actual - expected\n//\n// + [Number: 1]\n// - [Number: 2]\n\nassert.deepStrictEqual(new String('foo'), Object('foo'));\n// OK，因为对象和字符串在解封装时是相同的。\n\nassert.deepStrictEqual(-0, -0);\n// OK\n\n// 使用 SameValue 比较的不同零：\nassert.deepStrictEqual(0, -0);\n// AssertionError: Expected inputs to be strictly deep-equal:\n// + actual - expected\n//\n// + 0\n// - -0\n\nconst symbol1 = Symbol();\nconst symbol2 = Symbol();\nassert.deepStrictEqual({ [symbol1]: 1 }, { [symbol1]: 1 });\n// OK，因为它是两个对象上的相同符号。\n\nassert.deepStrictEqual({ [symbol1]: 1 }, { [symbol2]: 1 });\n// AssertionError [ERR_ASSERTION]: Inputs identical but not reference equal:\n//\n// {\n//   [Symbol()]: 1\n// }\n\nconst weakMap1 = new WeakMap();\nconst weakMap2 = new WeakMap([[{}, {}]]);\nconst weakMap3 = new WeakMap();\nweakMap3.unequal = true;\n\nassert.deepStrictEqual(weakMap1, weakMap2);\n// OK，因为无法比较条目\n\n// 失败，因为 weakMap3 有一个 weakMap1 不包含的属性：\nassert.deepStrictEqual(weakMap1, weakMap3);\n// AssertionError: Expected inputs to be strictly deep-equal:\n// + actual - expected\n//\n//   WeakMap {\n// +   [items unknown]\n// -   [items unknown],\n// -   unequal: true\n//   }\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br"),s("span",{staticClass:"line-number"},[e._v("66")]),s("br"),s("span",{staticClass:"line-number"},[e._v("67")]),s("br"),s("span",{staticClass:"line-number"},[e._v("68")]),s("br"),s("span",{staticClass:"line-number"},[e._v("69")]),s("br"),s("span",{staticClass:"line-number"},[e._v("70")]),s("br"),s("span",{staticClass:"line-number"},[e._v("71")]),s("br"),s("span",{staticClass:"line-number"},[e._v("72")]),s("br"),s("span",{staticClass:"line-number"},[e._v("73")]),s("br"),s("span",{staticClass:"line-number"},[e._v("74")]),s("br"),s("span",{staticClass:"line-number"},[e._v("75")]),s("br"),s("span",{staticClass:"line-number"},[e._v("76")]),s("br"),s("span",{staticClass:"line-number"},[e._v("77")]),s("br"),s("span",{staticClass:"line-number"},[e._v("78")]),s("br"),s("span",{staticClass:"line-number"},[e._v("79")]),s("br"),s("span",{staticClass:"line-number"},[e._v("80")]),s("br"),s("span",{staticClass:"line-number"},[e._v("81")]),s("br"),s("span",{staticClass:"line-number"},[e._v("82")]),s("br"),s("span",{staticClass:"line-number"},[e._v("83")]),s("br"),s("span",{staticClass:"line-number"},[e._v("84")]),s("br"),s("span",{staticClass:"line-number"},[e._v("85")]),s("br"),s("span",{staticClass:"line-number"},[e._v("86")]),s("br"),s("span",{staticClass:"line-number"},[e._v("87")]),s("br"),s("span",{staticClass:"line-number"},[e._v("88")]),s("br"),s("span",{staticClass:"line-number"},[e._v("89")]),s("br")])]),s("p",[e._v("如果值不相等，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("code",[e._v("AssertionError")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-doesnotmatch-string-regexp-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-doesnotmatch-string-regexp-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.doesNotMatch(string, regexp[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertdoesnotmatchstring-regexp-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_doesnotmatch_string_regexp_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v12.16.0")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("string")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("regexp")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/G38byW",target:"_blank",rel:"noopener noreferrer"}},[s("RegExp",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("期望 "),s("code",[e._v("string")]),e._v(" 输入与正则表达式不匹配。")]),e._v(" "),s("p",[e._v("此特性目前处于实验阶段，名称可能会更改，也可能会再次完全删除。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.doesNotMatch('I will fail', /fail/);\n// AssertionError [ERR_ASSERTION]: The input was expected to not match the ...\n\nassert.doesNotMatch(123, /pass/);\n// AssertionError [ERR_ASSERTION]: The \"string\" argument must be of type string.\n\nassert.doesNotMatch('I will pass', /different/);\n// OK\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("如果值匹配，或者 "),s("code",[e._v("string")]),e._v(" 参数的类型不是 "),s("code",[e._v("string")]),e._v("，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-doesnotreject-asyncfn-error-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-doesnotreject-asyncfn-error-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.doesNotReject(asyncFn[, error][, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertdoesnotrejectasyncfn-error-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_doesnotreject_asyncfn_error_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v10.0.0")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("asyncFn")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/ri1kj8",target:"_blank",rel:"noopener noreferrer"}},[s("Promise",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("error")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/G38byW",target:"_blank",rel:"noopener noreferrer"}},[s("RegExp",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("等待 "),s("code",[e._v("asyncFn")]),e._v(" promise，或者，如果 "),s("code",[e._v("asyncFn")]),e._v(" 是函数，则立即调用该函数并等待返回的 promise 完成。 然后会检查 promise 是否没有被拒绝。")]),e._v(" "),s("p",[e._v("如果 "),s("code",[e._v("asyncFn")]),e._v(" 是函数并且它同步抛出错误，则 "),s("code",[e._v("assert.doesNotReject()")]),e._v(" 将返回使用使用该错误拒绝的 "),s("code",[e._v("Promise")]),e._v("。 如果函数没有返回 promise，则 "),s("code",[e._v("assert.doesNotReject()")]),e._v(" 将返回使用 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_invalid_return_value",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("ERR_INVALID_RETURN_VALUE")]),s("OutboundLink")],1),e._v(" 错误拒绝的 "),s("code",[e._v("Promise")]),e._v("。 在这两种情况下，都会跳过错误句柄。")]),e._v(" "),s("p",[e._v("使用 "),s("code",[e._v("assert.doesNotReject()")]),e._v(" 实际上没有用，因为捕获拒绝然后再次拒绝它几乎没有什么好处。 相反，请考虑在特定代码路径旁边添加不应拒绝的注释，并尽可能使错误消息具有表现力。")]),e._v(" "),s("p",[e._v("如果指定，则 "),s("code",[e._v("error")]),e._v(" 可以是 "),s("a",{attrs:{href:"http://url.nodejs.cn/5wDLcp",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Class")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"http://url.nodejs.cn/tbQJCP",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("RegExp")]),s("OutboundLink")],1),e._v(" 或验证函数。 有关详细信息，请参阅 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_throws_fn_error_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.throws()")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[e._v("除了等待完成的异步性质外，其行为与 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_doesnotthrow_fn_error_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.doesNotThrow()")]),s("OutboundLink")],1),e._v(" 相同。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("(async () => {\n  await assert.doesNotReject(\n    async () => {\n      throw new TypeError('Wrong value');\n    },\n    SyntaxError\n  );\n})();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.doesNotReject(Promise.reject(new TypeError('Wrong value')))\n  .then(() => {\n    // ...\n  });\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h3",{attrs:{id:"assert-doesnotthrow-fn-error-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-doesnotthrow-fn-error-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.doesNotThrow(fn[, error][, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertdoesnotthrowfn-error-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_doesnotthrow_fn_error_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("fn")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("error")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/G38byW",target:"_blank",rel:"noopener noreferrer"}},[s("RegExp",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("断言函数 "),s("code",[e._v("fn")]),e._v(" 不会抛出错误。")]),e._v(" "),s("p",[e._v("使用 "),s("code",[e._v("assert.doesNotThrow()")]),e._v(" 实际上没有用，因为捕获错误然后重新抛出它没有任何好处。 相反，请考虑在不应该抛出的特定代码路径旁边添加注释，并尽可能保持错误消息的表现力。")]),e._v(" "),s("p",[e._v("当 "),s("code",[e._v("assert.doesNotThrow()")]),e._v(" 被调用时，它会立即调用 "),s("code",[e._v("fn")]),e._v(" 函数。")]),e._v(" "),s("p",[e._v("如果抛出错误并且它与 "),s("code",[e._v("error")]),e._v(" 参数指定的类型相同，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。 如果错误属于不同类型，或者 "),s("code",[e._v("error")]),e._v(" 参数未定义，则错误将传播回调用者。")]),e._v(" "),s("p",[e._v("如果指定，则 "),s("code",[e._v("error")]),e._v(" 可以是 "),s("a",{attrs:{href:"http://url.nodejs.cn/5wDLcp",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Class")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"http://url.nodejs.cn/tbQJCP",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("RegExp")]),s("OutboundLink")],1),e._v(" 或验证函数。 有关详细信息，请参阅 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_throws_fn_error_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.throws()")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[e._v("例如，以下将抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_typeerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("TypeError")]),s("OutboundLink")],1),e._v("，因为断言中没有匹配的错误类型：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.doesNotThrow(\n  () => {\n    throw new TypeError('Wrong value');\n  },\n  SyntaxError\n);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("但是，以下将导致使用消息 'Got unwanted exception...' 的 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.doesNotThrow(\n  () => {\n    throw new TypeError('Wrong value');\n  },\n  TypeError\n);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("如果抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v(" 并且为 "),s("code",[e._v("message")]),e._v(" 参数提供了值，则 "),s("code",[e._v("message")]),e._v(" 的值将附加到 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v(" 消息：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.doesNotThrow(\n  () => {\n    throw new TypeError('Wrong value');\n  },\n  /Wrong value/,\n  'Whoops'\n);\n// 抛出: AssertionError: Got unwanted exception: Whoops\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("h3",{attrs:{id:"assert-equal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-equal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.equal(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_equal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v0.1.21")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[s("strong",[e._v("严格断言模式")])]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_strictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.strictEqual()")]),s("OutboundLink")],1),e._v(" 的别名。")]),e._v(" "),s("p",[s("strong",[e._v("旧版断言模式")])]),e._v(" "),s("p",[e._v("使用"),s("a",{attrs:{href:"http://url.nodejs.cn/tiZhGn",target:"_blank",rel:"noopener noreferrer"}},[e._v("抽象相等比较"),s("OutboundLink")],1),e._v("（"),s("code",[e._v("==")]),e._v("）测试 "),s("code",[e._v("actual")]),e._v(" 和 "),s("code",[e._v("expected")]),e._v(" 参数之间的浅层强制相等。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\nassert.equal(1, 1);\n// OK, 1 == 1\nassert.equal(1, '1');\n// OK, 1 == '1'\n\nassert.equal(1, 2);\n// AssertionError: 1 == 2\nassert.equal({ a: { b: 1 } }, { a: { b: 1 } });\n// AssertionError: { a: { b: 1 } } == { a: { b: 1 } }\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("p",[e._v("如果值不相等，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("code",[e._v("AssertionError")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-fail-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-fail-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.fail([message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertfailmessage",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_fail_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v0.1.21")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1),e._v(" "),s("strong",[e._v("默认值:")]),e._v(" "),s("code",[e._v("'Failed'")])])]),e._v(" "),s("p",[e._v("抛出带有提供的错误消息或默认错误消息的 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.fail();\n// AssertionError [ERR_ASSERTION]: Failed\n\nassert.fail('boom');\n// AssertionError [ERR_ASSERTION]: boom\n\nassert.fail(new TypeError('need array'));\n// TypeError: need array\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("可以使用带有两个以上参数的 "),s("code",[e._v("assert.fail()")]),e._v("，但不推荐使用。 有关更多详细信息，请参见下文。")]),e._v(" "),s("h3",{attrs:{id:"assert-fail-actual-expected-message-operator-stackstartfn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-fail-actual-expected-message-operator-stackstartfn"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.fail(actual, expected[, message[, operator[, stackStartFn]]])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertfailactual-expected-message-operator-stackstartfn",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_fail_actual_expected_message_operator_stackstartfn.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api/documentation.html#stability-index",target:"_blank",rel:"noopener noreferrer"}},[e._v("稳定性: 0"),s("OutboundLink")],1),e._v(" - 弃用: 改为使用 "),s("code",[e._v("assert.fail([message])")]),e._v(" 或其他 assert 函数。")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("operator")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" "),s("strong",[e._v("默认值:")]),e._v(" "),s("code",[e._v("'!='")])]),e._v(" "),s("li",[s("code",[e._v("stackStartFn")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" "),s("strong",[e._v("默认值:")]),e._v(" "),s("code",[e._v("assert.fail")])])]),e._v(" "),s("p",[e._v("如果 "),s("code",[e._v("message")]),e._v(" 为假，则错误消息设置为由提供的 "),s("code",[e._v("operator")]),e._v(" 分隔的 "),s("code",[e._v("actual")]),e._v(" 和 "),s("code",[e._v("expected")]),e._v(" 的值。 如果只提供了两个 "),s("code",[e._v("actual")]),e._v(" 和 "),s("code",[e._v("expected")]),e._v(" 参数，则 "),s("code",[e._v("operator")]),e._v(" 将默认为 "),s("code",[e._v("'!='")]),e._v("。 如果 "),s("code",[e._v("message")]),e._v(" 作为第三个参数提供，则它将用作错误消息，其他参数将作为抛出对象的属性存储。 如果提供了 "),s("code",[e._v("stackStartFn")]),e._v("，则该函数之上的所有堆栈帧都将从堆栈跟踪中删除（参见 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_error_capturestacktrace_targetobject_constructoropt",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error.captureStackTrace")]),s("OutboundLink")],1),e._v("）。 如果没有给出参数，则将使用默认消息 "),s("code",[e._v("Failed")]),e._v("。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.fail('a', 'b');\n// AssertionError [ERR_ASSERTION]: 'a' != 'b'\n\nassert.fail(1, 2, undefined, '>');\n// AssertionError [ERR_ASSERTION]: 1 > 2\n\nassert.fail(1, 2, 'fail');\n// AssertionError [ERR_ASSERTION]: fail\n\nassert.fail(1, 2, 'whoops', '>');\n// AssertionError [ERR_ASSERTION]: whoops\n\nassert.fail(1, 2, new TypeError('need array'));\n// TypeError: need array\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("p",[e._v("在后三种情况下，"),s("code",[e._v("actual")]),e._v("、"),s("code",[e._v("expected")]),e._v(" 和 "),s("code",[e._v("operator")]),e._v(" 对错误消息没有影响。")]),e._v(" "),s("p",[e._v("使用 "),s("code",[e._v("stackStartFn")]),e._v(" 截断异常堆栈跟踪的示例：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function suppressFrame() {\n  assert.fail('a', 'b', undefined, '!==', suppressFrame);\n}\nsuppressFrame();\n// AssertionError [ERR_ASSERTION]: 'a' !== 'b'\n//     at repl:1:1\n//     at ContextifyScript.Script.runInThisContext (vm.js:44:33)\n//     ...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("h3",{attrs:{id:"assert-iferror-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-iferror-value"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.ifError(value)")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertiferrorvalue",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_iferror_value.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("value")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("如果 "),s("code",[e._v("value")]),e._v(" 不是 "),s("code",[e._v("undefined")]),e._v(" 或 "),s("code",[e._v("null")]),e._v("，则抛出 "),s("code",[e._v("value")]),e._v("。 这在回调中测试 "),s("code",[e._v("error")]),e._v(" 参数时很有用。 堆栈跟踪包含来自传给 "),s("code",[e._v("ifError()")]),e._v(" 的错误的所有帧，包括 "),s("code",[e._v("ifError()")]),e._v(" 本身的潜在新帧。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.ifError(null);\n// OK\nassert.ifError(0);\n// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 0\nassert.ifError('error');\n// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 'error'\nassert.ifError(new Error());\n// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Error\n\n// 创建一些随机错误帧。\nlet err;\n(function errorFrame() {\n  err = new Error('test error');\n})();\n\n(function ifErrorFrame() {\n  assert.ifError(err);\n})();\n// AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error\n//     at ifErrorFrame\n//     at errorFrame\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br")])]),s("h3",{attrs:{id:"assert-match-string-regexp-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-match-string-regexp-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.match(string, regexp[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertmatchstring-regexp-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_match_string_regexp_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v12.16.0")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("string")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("regexp")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/G38byW",target:"_blank",rel:"noopener noreferrer"}},[s("RegExp",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("期望 "),s("code",[e._v("string")]),e._v(" 输入与正则表达式匹配。")]),e._v(" "),s("p",[e._v("此特性目前处于实验阶段，名称可能会更改，也可能会再次完全删除。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.match('I will fail', /pass/);\n// AssertionError [ERR_ASSERTION]: The input did not match the regular ...\n\nassert.match(123, /pass/);\n// AssertionError [ERR_ASSERTION]: The \"string\" argument must be of type string.\n\nassert.match('I will pass', /pass/);\n// OK\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("如果值不匹配，或者 "),s("code",[e._v("string")]),e._v(" 参数的类型不是 "),s("code",[e._v("string")]),e._v("，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-notdeepequal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-notdeepequal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.notDeepEqual(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertnotdeepequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_notdeepequal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[s("strong",[e._v("严格断言模式")])]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_notdeepstrictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.notDeepStrictEqual()")]),s("OutboundLink")],1),e._v(" 的别名。")]),e._v(" "),s("p",[s("strong",[e._v("旧版断言模式")])]),e._v(" "),s("p",[e._v("测试任何深度不相等。 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepEqual()")]),s("OutboundLink")],1),e._v(" 的相反。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\nconst obj1 = {\n  a: {\n    b: 1\n  }\n};\nconst obj2 = {\n  a: {\n    b: 2\n  }\n};\nconst obj3 = {\n  a: {\n    b: 1\n  }\n};\nconst obj4 = Object.create(obj1);\n\nassert.notDeepEqual(obj1, obj1);\n// AssertionError: { a: { b: 1 } } notDeepEqual { a: { b: 1 } }\n\nassert.notDeepEqual(obj1, obj2);\n// OK\n\nassert.notDeepEqual(obj1, obj3);\n// AssertionError: { a: { b: 1 } } notDeepEqual { a: { b: 1 } }\n\nassert.notDeepEqual(obj1, obj4);\n// OK\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br")])]),s("p",[e._v("如果值深度相等，则会抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("code",[e._v("AssertionError")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-notdeepstrictequal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-notdeepstrictequal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.notDeepStrictEqual(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertnotdeepstrictequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_notdeepstrictequal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("检验深度严格不相等。 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_deepstrictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.deepStrictEqual()")]),s("OutboundLink")],1),e._v(" 的相反。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.notDeepStrictEqual({ a: 1 }, { a: '1' });\n// OK\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("如果值是深度且严格相等的，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-notequal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-notequal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.notEqual(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertnotequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_notequal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v0.1.21")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[s("strong",[e._v("严格断言模式")])]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_notstrictequal_actual_expected_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.notStrictEqual()")]),s("OutboundLink")],1),e._v(" 的别名。")]),e._v(" "),s("p",[s("strong",[e._v("旧版断言模式")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert');\n\nassert.notEqual(1, 2);\n// OK\n\nassert.notEqual(1, 1);\n// AssertionError: 1 != 1\n\nassert.notEqual(1, '1');\n// AssertionError: 1 != '1'\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("如果值相等，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("code",[e._v("AssertionError")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-notstrictequal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-notstrictequal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.notStrictEqual(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertnotstrictequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_notstrictequal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("测试由 "),s("a",{attrs:{href:"http://url.nodejs.cn/25ULs2",target:"_blank",rel:"noopener noreferrer"}},[e._v("SameValue 比较"),s("OutboundLink")],1),e._v(" 确定的 "),s("code",[e._v("actual")]),e._v(" 和 "),s("code",[e._v("expected")]),e._v(" 参数之间的严格不相等。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.notStrictEqual(1, 2);\n// OK\n\nassert.notStrictEqual(1, 1);\n// AssertionError [ERR_ASSERTION]: Expected \"actual\" to be strictly unequal to:\n//\n// 1\n\nassert.notStrictEqual(1, '1');\n// OK\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[e._v("如果值严格相等，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("code",[e._v("AssertionError")]),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-ok-value-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-ok-value-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.ok(value[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertokvalue-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_ok_value_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("value")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("测试 "),s("code",[e._v("value")]),e._v(" 是否为真。 相当于 "),s("code",[e._v("assert.equal(!!value, true, message)")]),e._v("。")]),e._v(" "),s("p",[e._v("如果 "),s("code",[e._v("value")]),e._v(" 不是真值，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果 "),s("code",[e._v("message")]),e._v(" 参数为 "),s("code",[e._v("undefined")]),e._v("，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("code",[e._v("AssertionError")]),e._v("。 如果根本没有传入任何参数，则 "),s("code",[e._v("message")]),e._v(" 将设置为字符串："),s("code",[e._v("'No value argument passed to `assert.ok()`'")]),e._v("。")]),e._v(" "),s("p",[e._v("请注意，在 "),s("code",[e._v("repl")]),e._v(" 中，错误消息将与文件中抛出的错误消息不同！ 有关更多详细信息，请参见下文。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.ok(true);\n// OK\nassert.ok(1);\n// OK\n\nassert.ok();\n// AssertionError: No value argument passed to `assert.ok()`\n\nassert.ok(false, 'it\\'s false');\n// AssertionError: it's false\n\n// 在交互式解释器中：\nassert.ok(typeof 123 === 'string');\n// AssertionError: false == true\n\n// 在文件中（例如 test.js）：\nassert.ok(typeof 123 === 'string');\n// AssertionError: The expression evaluated to a falsy value:\n//\n//   assert.ok(typeof 123 === 'string')\n\nassert.ok(false);\n// AssertionError: The expression evaluated to a falsy value:\n//\n//   assert.ok(false)\n\nassert.ok(0);\n// AssertionError: The expression evaluated to a falsy value:\n//\n//   assert.ok(0)\n\n// 使用 `assert()` 的工作一样：\nassert(0);\n// AssertionError: The expression evaluated to a falsy value:\n//\n//   assert(0)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br")])]),s("h3",{attrs:{id:"assert-rejects-asyncfn-error-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-rejects-asyncfn-error-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.rejects(asyncFn[, error][, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertrejectsasyncfn-error-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_rejects_asyncfn_error_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("新增于: v10.0.0")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("asyncFn")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/ri1kj8",target:"_blank",rel:"noopener noreferrer"}},[s("Promise",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("error")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/G38byW",target:"_blank",rel:"noopener noreferrer"}},[s("RegExp",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[s("Object",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("等待 "),s("code",[e._v("asyncFn")]),e._v(" promise，或者，如果 "),s("code",[e._v("asyncFn")]),e._v(" 是函数，则立即调用该函数并等待返回的 promise 完成。 然后将检查 promise 是否被拒绝。")]),e._v(" "),s("p",[e._v("如果 "),s("code",[e._v("asyncFn")]),e._v(" 是函数并且它同步抛出错误，则 "),s("code",[e._v("assert.rejects()")]),e._v(" 将返回使用使用该错误拒绝的 "),s("code",[e._v("Promise")]),e._v("。 如果函数没有返回 promise，则 "),s("code",[e._v("assert.rejects()")]),e._v(" 将返回使用 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_invalid_return_value",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("ERR_INVALID_RETURN_VALUE")]),s("OutboundLink")],1),e._v(" 错误拒绝的 "),s("code",[e._v("Promise")]),e._v("。 在这两种情况下，都会跳过错误句柄。")]),e._v(" "),s("p",[e._v("除了等待完成的异步性质外，其行为与 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_throws_fn_error_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.throws()")]),s("OutboundLink")],1),e._v(" 相同。")]),e._v(" "),s("p",[e._v("如果指定，则 "),s("code",[e._v("error")]),e._v(" 可以是 "),s("a",{attrs:{href:"http://url.nodejs.cn/5wDLcp",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Class")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"http://url.nodejs.cn/tbQJCP",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("RegExp")]),s("OutboundLink")],1),e._v("、验证函数、每个属性将被测试的对象，或者每个属性（包括不可枚举的 "),s("code",[e._v("message")]),e._v(" 和 "),s("code",[e._v("name")]),e._v(" 属性）将被测试的错误实例。")]),e._v(" "),s("p",[e._v("如果指定，则 "),s("code",[e._v("message")]),e._v(" 将是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v(" 提供的消息（如果 "),s("code",[e._v("asyncFn")]),e._v(" 没有被拒绝）。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("(async () => {\n  await assert.rejects(\n    async () => {\n      throw new TypeError('Wrong value');\n    },\n    {\n      name: 'TypeError',\n      message: 'Wrong value'\n    }\n  );\n})();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("(async () => {\n  await assert.rejects(\n    async () => {\n      throw new TypeError('Wrong value');\n    },\n    (err) => {\n      assert.strictEqual(err.name, 'TypeError');\n      assert.strictEqual(err.message, 'Wrong value');\n      return true;\n    }\n  );\n})();\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.rejects(\n  Promise.reject(new Error('Wrong value')),\n  Error\n).then(() => {\n  // ...\n});\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[s("code",[e._v("error")]),e._v(" 不能是字符串。 如果提供字符串作为第二个参数，则假定 "),s("code",[e._v("error")]),e._v(" 被省略，而该字符串将用于 "),s("code",[e._v("message")]),e._v("。 这可能会导致容易遗漏的错误。 如果考虑使用字符串作为第二个参数，则请仔细阅读 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_assert_throws_fn_error_message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("assert.throws()")]),s("OutboundLink")],1),e._v(" 中的示例。")]),e._v(" "),s("h3",{attrs:{id:"assert-strictequal-actual-expected-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-strictequal-actual-expected-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.strictEqual(actual, expected[, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertstrictequalactual-expected-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_strictequal_actual_expected_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("actual")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("expected")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[s("any",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("测试由 "),s("a",{attrs:{href:"http://url.nodejs.cn/25ULs2",target:"_blank",rel:"noopener noreferrer"}},[e._v("SameValue 比较"),s("OutboundLink")],1),e._v(" 确定的 "),s("code",[e._v("actual")]),e._v(" 和 "),s("code",[e._v("expected")]),e._v(" 参数之间的严格相等。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const assert = require('assert').strict;\n\nassert.strictEqual(1, 2);\n// AssertionError [ERR_ASSERTION]: Expected inputs to be strictly equal:\n//\n// 1 !== 2\n\nassert.strictEqual(1, 1);\n// OK\n\nassert.strictEqual('Hello foobar', 'Hello World!');\n// AssertionError [ERR_ASSERTION]: Expected inputs to be strictly equal:\n// + actual - expected\n//\n// + 'Hello foobar'\n// - 'Hello World!'\n//          ^\n\nconst apples = 1;\nconst oranges = 2;\nassert.strictEqual(apples, oranges, `apples ${apples} !== oranges ${oranges}`);\n// AssertionError [ERR_ASSERTION]: apples 1 !== oranges 2\n\nassert.strictEqual(1, '1', new TypeError('Inputs are not identical'));\n// TypeError: Inputs are not identical\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br")])]),s("p",[e._v("如果值不严格相等，则抛出 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("，其 "),s("code",[e._v("message")]),e._v(" 属性设置为等于 "),s("code",[e._v("message")]),e._v(" 参数的值。 如果未定义 "),s("code",[e._v("message")]),e._v(" 参数，则分配默认错误消息。 如果 "),s("code",[e._v("message")]),e._v(" 参数是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_class_error",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Error")]),s("OutboundLink")],1),e._v(" 的实例，则将抛出错误而不是 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"assert-throws-fn-error-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assert-throws-fn-error-message"}},[e._v("#")]),e._v(" "),s("code",[e._v("assert.throws(fn[, error][, message])")]),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assertthrowsfn-error-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert/assert_throws_fn_error_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[s("code",[e._v("fn")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("error")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/G38byW",target:"_blank",rel:"noopener noreferrer"}},[s("RegExp",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/ceTQa6",target:"_blank",rel:"noopener noreferrer"}},[s("Function",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[s("Object",[s("OutboundLink")],1)],1),e._v(" | "),s("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[s("Error",[s("OutboundLink")],1)],1)]),e._v(" "),s("li",[s("code",[e._v("message")]),e._v(" "),s("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[s("string",[s("OutboundLink")],1)],1)])]),e._v(" "),s("p",[e._v("期望函数 "),s("code",[e._v("fn")]),e._v(" 抛出错误。")]),e._v(" "),s("p",[e._v("如果指定，则 "),s("code",[e._v("error")]),e._v(" 可以是 "),s("a",{attrs:{href:"http://url.nodejs.cn/5wDLcp",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("Class")]),s("OutboundLink")],1),e._v("、"),s("a",{attrs:{href:"http://url.nodejs.cn/tbQJCP",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("RegExp")]),s("OutboundLink")],1),e._v("、验证函数、其中每个属性都将进行严格深度相等测试的验证对象，或者其中每个属性（包括不可枚举的 "),s("code",[e._v("message")]),e._v("和 "),s("code",[e._v("name")]),e._v(" 属性）都将进行严格深度相等测试的错误实例。 使用对象时，也可以使用正则表达式来验证字符串属性。 有关示例，请参见下文。")]),e._v(" "),s("p",[e._v("如果指定，且如果 "),s("code",[e._v("fn")]),e._v(" 调用失败或错误验证失败，则 "),s("code",[e._v("message")]),e._v(" 将附加到 "),s("code",[e._v("AssertionError")]),e._v(" 提供的消息。")]),e._v(" "),s("p",[e._v("自定义验证对象/错误实例：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const err = new TypeError('Wrong value');\nerr.code = 404;\nerr.foo = 'bar';\nerr.info = {\n  nested: true,\n  baz: 'text'\n};\nerr.reg = /abc/i;\n\nassert.throws(\n  () => {\n    throw err;\n  },\n  {\n    name: 'TypeError',\n    message: 'Wrong value',\n    info: {\n      nested: true,\n      baz: 'text'\n    }\n    // 只会测试验证对象上的属性。\n    // 使用嵌套对象需要存在所有属性。\n    // 否则验证将失败。\n  }\n);\n\n// 使用正则表达式验证错误属性：\nassert.throws(\n  () => {\n    throw err;\n  },\n  {\n    // `name` 和 `message` 属性是字符串，在这些属性上使用正则表达式将匹配字符串。\n    // 如果失败，则会抛出错误。\n    name: /^TypeError$/,\n    message: /Wrong/,\n    foo: 'bar',\n    info: {\n      nested: true,\n      // 不能对嵌套属性使用正则表达式！\n      baz: 'text'\n    },\n    // `reg` 属性包含正则表达式，只有当验证对象包含相同的正则表达式时，它才会通过。\n    reg: /abc/i\n  }\n);\n\n// 由于不同的 `message` 和 `name` 属性而失败：\nassert.throws(\n  () => {\n    const otherErr = new Error('Not found');\n    // 将所有可枚举属性从 `err` 复制到 `otherErr`。\n    for (const [key, value] of Object.entries(err)) {\n      otherErr[key] = value;\n    }\n    throw otherErr;\n  },\n  // 当使用错误作为验证对象时，错误的 `message` 和 `name` 属性也将被检查。\n  err\n);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br")])]),s("p",[e._v("使用构造函数验证 instanceof：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.throws(\n  () => {\n    throw new Error('Wrong value');\n  },\n  Error\n);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("使用 "),s("a",{attrs:{href:"http://url.nodejs.cn/tbQJCP",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("RegExp")]),s("OutboundLink")],1),e._v(" 验证错误消息：")]),e._v(" "),s("p",[e._v("使用正则表达式在错误对象上运行 "),s("code",[e._v(".toString")]),e._v("，因此还将包含错误名称。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.throws(\n  () => {\n    throw new Error('Wrong value');\n  },\n  /^Error: Wrong value$/\n);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("自定义错误验证：")]),e._v(" "),s("p",[e._v("该函数必须返回 "),s("code",[e._v("true")]),e._v(" 以指示通过了所有内部验证。 否则它将因 "),s("a",{attrs:{href:"http://nodejs.cn/api-v12/assert.html#assert_class_assert_assertionerror",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("AssertionError")]),s("OutboundLink")],1),e._v(" 而失败。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("assert.throws(\n  () => {\n    throw new Error('Wrong value');\n  },\n  (err) => {\n    assert(err instanceof Error);\n    assert(/value/.test(err));\n    // 避免从验证函数返回除 `true` 之外的任何内容。\n    // 否则，不清楚验证的哪一部分失败。而是，抛出有关失败的特定验证的错误（如本示例中所做的那样），并尽可能多地向该错误添加有用的调试信息。\n    return true;\n  },\n  'unexpected error'\n);\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("p",[s("code",[e._v("error")]),e._v(" 不能是字符串。 如果提供字符串作为第二个参数，则假定 "),s("code",[e._v("error")]),e._v(" 被省略，而该字符串将用于 "),s("code",[e._v("message")]),e._v("。 这可能会导致容易遗漏的错误。 使用与抛出的错误消息相同的消息将导致 "),s("code",[e._v("ERR_AMBIGUOUS_ARGUMENT")]),e._v(" 错误。 如果考虑使用字符串作为第二个参数，则请仔细阅读下面的示例：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function throwingFirst() {\n  throw new Error('First');\n}\n\nfunction throwingSecond() {\n  throw new Error('Second');\n}\n\nfunction notThrowing() {}\n\n// 第二个参数是字符串，且输入函数抛出错误。\n// 第一种情况不会抛出错误，因为它与输入函数抛出的错误消息不匹配！\nassert.throws(throwingFirst, 'Second');\n// 在下一个示例中，该消息与错误消息相比没有任何好处，并且由于不清楚用户是否打算实际匹配错误消息，Node.js 会抛出 `ERR_AMBIGUOUS_ARGUMENT` 错误。\nassert.throws(throwingSecond, 'Second');\n// TypeError [ERR_AMBIGUOUS_ARGUMENT]\n\n// 该字符串仅在函数不抛出的情况下（作为消息）使用：\nassert.throws(notThrowing, 'Second');\n// AssertionError [ERR_ASSERTION]: Missing expected exception: Second\n\n// 如果它旨在匹配错误消息，则执行以下操作：\n// 它不会抛出错误，因为错误消息匹配。\nassert.throws(throwingSecond, /Second$/);\n\n// 如果错误消息不匹配，则抛出 AssertionError。\nassert.throws(throwingFirst, /Second$/);\n// AssertionError [ERR_ASSERTION]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br")])]),s("p",[e._v("由于容易混淆的符号，请避免将字符串作为第二个参数。")])])}),[],!1,null,null,null);r.default=t.exports}}]);