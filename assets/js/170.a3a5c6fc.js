(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{637:function(e,r,t){"use strict";t.r(r);var n=t(18),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"worker-threads-工作线程-node-js-api-文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-threads-工作线程-node-js-api-文档"}},[e._v("#")]),e._v(" worker_threads 工作线程 | Node.js API 文档")]),e._v(" "),t("blockquote",[t("h2",{attrs:{id:"excerpt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#excerpt"}},[e._v("#")]),e._v(" Excerpt")]),e._v(" "),t("p",[e._v("中英对照")])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_threads.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("源代码:")]),e._v(" "),t("a",{attrs:{href:"https://github.com/nodejs/node/blob/v12.22.12/lib/worker_threads.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("lib/worker_threads.js"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("worker_threads")]),e._v(" 模块允许使用并行执行 JavaScript 的线程。 要访问它：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const worker = require('worker_threads');\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("工作线程对于执行 CPU 密集型的 JavaScript 操作很有用。 它们对 I/O 密集型工作帮助不大。 Node.js 内置的异步 I/O 操作比工作线程更高效。")]),e._v(" "),t("p",[e._v("与 "),t("code",[e._v("child_process")]),e._v(" 或 "),t("code",[e._v("cluster")]),e._v(" 不同，"),t("code",[e._v("worker_threads")]),e._v(" 可以共享内存。 它们通过传输 "),t("code",[e._v("ArrayBuffer")]),e._v(" 实例或共享 "),t("code",[e._v("SharedArrayBuffer")]),e._v(" 实例来实现。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const {\n  Worker, isMainThread, parentPort, workerData\n} = require('worker_threads');\n\nif (isMainThread) {\n  module.exports = function parseJSAsync(script) {\n    return new Promise((resolve, reject) => {\n      const worker = new Worker(__filename, {\n        workerData: script\n      });\n      worker.on('message', resolve);\n      worker.on('error', reject);\n      worker.on('exit', (code) => {\n        if (code !== 0)\n          reject(new Error(`Worker stopped with exit code ${code}`));\n      });\n    });\n  };\n} else {\n  const { parse } = require('some-js-parsing-library');\n  const script = workerData;\n  parentPort.postMessage(parse(script));\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br")])]),t("p",[e._v("上面的示例为每个 "),t("code",[e._v("parse()")]),e._v(" 调用衍生工作线程。 在实际操作中，请使用工作线程池来代替这些类型的任务 否则，创建工作线程的开销可能会超过其收益。")]),e._v(" "),t("p",[e._v("当实现工作线程池时，使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/async_hooks.html#async_hooks_class_asyncresource",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("AsyncResource")]),t("OutboundLink")],1),e._v(" API 通知诊断工具（例如，为了提供异步堆栈跟踪）任务与其结果之间的相关性。 有关示例实现，请参阅 "),t("code",[e._v("async_hooks")]),e._v(" 文档中的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/async_hooks.html#async-resource-worker-pool",target:"_blank",rel:"noopener noreferrer"}},[e._v("“将 "),t("code",[e._v("AsyncResource")]),e._v(" 用于 "),t("code",[e._v("Worker")]),e._v(" 线程池”"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("默认情况下，工作线程继承非进程特定的选项。 参考 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_new_worker_filename_options",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),e._v(" 构造函数选项"),t("OutboundLink")],1),e._v(" 了解如何自定义工作线程选项，特别是 "),t("code",[e._v("argv")]),e._v(" 和 "),t("code",[e._v("execArgv")]),e._v(" 选项。")]),e._v(" "),t("h3",{attrs:{id:"worker-ismainthread"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-ismainthread"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.isMainThread")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerismainthread",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_ismainthread.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("如果此代码不在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 线程内运行，则为 "),t("code",[e._v("true")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Worker, isMainThread } = require('worker_threads');\n\nif (isMainThread) {\n  // 这会在工作线程实例中重新加载当前文件。\n  new Worker(__filename);\n} else {\n  console.log('Inside Worker!');\n  console.log(isMainThread);  // 打印 'false'。\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("h3",{attrs:{id:"worker-markasuntransferable-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-markasuntransferable-object"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.markAsUntransferable(object)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workermarkasuntransferableobject",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_markasuntransferable_object.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.19.0")]),e._v(" "),t("p",[e._v("将对象标记为不可传输。 如果 "),t("code",[e._v("object")]),e._v(" 出现在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_port_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.postMessage()")]),t("OutboundLink")],1),e._v(" 调用的传输列表中，则它将被忽略。")]),e._v(" "),t("p",[e._v("特别是，这对于可以克隆而不是传输的对象，以及被发送方的其他对象使用的对象来说是有意义的。 例如，Node.js 用这个标记了它用于 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_static_method_buffer_allocunsafe_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),e._v(" 池"),t("OutboundLink")],1),e._v("的 "),t("code",[e._v("ArrayBuffer")]),e._v("。")]),e._v(" "),t("p",[e._v("此操作无法撤消。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { MessageChannel, markAsUntransferable } = require('worker_threads');\n\nconst pooledBuffer = new ArrayBuffer(8);\nconst typedArray1 = new Uint8Array(pooledBuffer);\nconst typedArray2 = new Float64Array(pooledBuffer);\n\nmarkAsUntransferable(pooledBuffer);\n\nconst { port1 } = new MessageChannel();\nport1.postMessage(typedArray1, [ typedArray1.buffer ]);\n\n// 以下行打印 typedArray1 的内容，\n// 它仍然拥有它的内存并且已经被克隆，而不是传输。\n// 没有 `markAsUntransferable()`，这将打印空的 Uint8Array。\n// typedArray2 也完好无损。\nconsole.log(typedArray1);\nconsole.log(typedArray2);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br")])]),t("p",[e._v("浏览器中没有与此 API 等效的 API。")]),e._v(" "),t("h3",{attrs:{id:"worker-movemessageporttocontext-port-contextifiedsandbox"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-movemessageporttocontext-port-contextifiedsandbox"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.moveMessagePortToContext(port, contextifiedSandbox)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workermovemessageporttocontextport-contextifiedsandbox",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_movemessageporttocontext_port_contextifiedsandbox.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.13.0")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("port")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/worker_threads.html#class-messageport",target:"_blank",rel:"noopener noreferrer"}},[t("MessagePort",[t("OutboundLink")],1)],1),e._v(" 将要传输的消息端口。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("contextifiedSandbox")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("code",[e._v("vm.createContext()")]),e._v(" 方法返回的"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/vm.html#vm_what_does_it_mean_to_contextify_an_object",target:"_blank",rel:"noopener noreferrer"}},[e._v("上下文隔离化的"),t("OutboundLink")],1),e._v("对象。")])]),e._v(" "),t("li",[t("p",[e._v("返回: "),t("a",{attrs:{href:"http://nodejs.cn/api/worker_threads.html#class-messageport",target:"_blank",rel:"noopener noreferrer"}},[t("MessagePort",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("p",[e._v("将 "),t("code",[e._v("MessagePort")]),e._v(" 传输到不同的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/vm.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("vm")]),t("OutboundLink")],1),e._v(" 上下文 原始的 "),t("code",[e._v("port")]),e._v(" 对象将无法使用，返回的 "),t("code",[e._v("MessagePort")]),e._v(" 实例将取而代之。")]),e._v(" "),t("p",[e._v("返回的 "),t("code",[e._v("MessagePort")]),e._v(" 将是目标上下文中的对象，并将继承自其全局 "),t("code",[e._v("Object")]),e._v(" 类。 传给 "),t("a",{attrs:{href:"http://url.nodejs.cn/4K42hk",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.onmessage()")]),t("OutboundLink")],1),e._v(" 监听器的对象也将在目标上下文中创建并从其全局 "),t("code",[e._v("Object")]),e._v(" 类继承。")]),e._v(" "),t("p",[e._v("但是，创建的 "),t("code",[e._v("MessagePort")]),e._v(" 将不再继承 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/events.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("EventEmitter")]),t("OutboundLink")],1),e._v("，只能使用 "),t("a",{attrs:{href:"http://url.nodejs.cn/4K42hk",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.onmessage()")]),t("OutboundLink")],1),e._v(" 来接收使用它的事件。")]),e._v(" "),t("h3",{attrs:{id:"worker-parentport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-parentport"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.parentPort")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerparentport",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_parentport.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[t("null",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/worker_threads.html#class-messageport",target:"_blank",rel:"noopener noreferrer"}},[t("MessagePort",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("如果此线程是作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 衍生的，这将是允许与父线程通信的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_messageport",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("MessagePort")]),t("OutboundLink")],1),e._v("。 使用 "),t("code",[e._v("parentPort.postMessage()")]),e._v(" 发送的消息将在使用 "),t("code",[e._v("worker.on('message')")]),e._v(" 的父线程中可用，使用 "),t("code",[e._v("worker.postMessage()")]),e._v(" 从父线程发送的消息将在使用 "),t("code",[e._v("parentPort.on('message')")]),e._v(" 的该线程中可用。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Worker, isMainThread, parentPort } = require('worker_threads');\n\nif (isMainThread) {\n  const worker = new Worker(__filename);\n  worker.once('message', (message) => {\n    console.log(message);  // 打印 'Hello, world!'。\n  });\n  worker.postMessage('Hello, world!');\n} else {\n  // 当收到来自父线程的消息时，则将其发回：\n  parentPort.once('message', (message) => {\n    parentPort.postMessage(message);\n  });\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br")])]),t("h3",{attrs:{id:"worker-receivemessageonport-port"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-receivemessageonport-port"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.receiveMessageOnPort(port)")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerreceivemessageonportport",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_receivemessageonport_port.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.3.0")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("port")]),e._v(" "),t("a",{attrs:{href:"http://nodejs.cn/api/worker_threads.html#class-messageport",target:"_blank",rel:"noopener noreferrer"}},[t("MessagePort",[t("OutboundLink")],1)],1)])]),e._v(" "),t("li",[t("p",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://url.nodejs.cn/8ym6ow",target:"_blank",rel:"noopener noreferrer"}},[t("undefined",[t("OutboundLink")],1)],1)])])]),e._v(" "),t("p",[e._v("从给定的 "),t("code",[e._v("MessagePort")]),e._v(" 接收消息。 如果没有消息可用，则返回 "),t("code",[e._v("undefined")]),e._v("，否则返回具有单个 "),t("code",[e._v("message")]),e._v(" 属性的对象，其中包含消息有效负载，对应于 "),t("code",[e._v("MessagePort")]),e._v(" 队列中最旧的消息。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { MessageChannel, receiveMessageOnPort } = require('worker_threads');\nconst { port1, port2 } = new MessageChannel();\nport1.postMessage({ hello: 'world' });\n\nconsole.log(receiveMessageOnPort(port2));\n// 打印: { message: { hello: 'world' } }\nconsole.log(receiveMessageOnPort(port2));\n// 打印: undefined\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("当使用此函数时，不会触发 "),t("code",[e._v("'message'")]),e._v(" 事件，也不会调用 "),t("code",[e._v("onmessage")]),e._v(" 监听器。")]),e._v(" "),t("h3",{attrs:{id:"worker-resourcelimits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-resourcelimits"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.resourceLimits")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerresourcelimits",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_resourcelimits.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("maxYoungGenerationSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("maxOldGenerationSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("codeRangeSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("stackSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)])])])]),e._v(" "),t("p",[e._v("在这个工作线程中提供了一组 JS 引擎资源约束。 如果将 "),t("code",[e._v("resourceLimits")]),e._v(" 选项传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 构造函数，则这与其值匹配。")]),e._v(" "),t("p",[e._v("如果在主线程中使用此，则其值为空对象。")]),e._v(" "),t("h3",{attrs:{id:"worker-share-env"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-share-env"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.SHARE_ENV")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workershare_env",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_share_env.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v11.14.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/i5E1UH",target:"_blank",rel:"noopener noreferrer"}},[t("symbol",[t("OutboundLink")],1)])])]),e._v(" "),t("p",[e._v("可以作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 构造函数的 "),t("code",[e._v("env")]),e._v(" 选项传入的特殊值，表示当前线程和工作线程应该共享对同一组环境变量的读写访问。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Worker, SHARE_ENV } = require('worker_threads');\nnew Worker('process.env.SET_IN_WORKER = \"foo\"', { eval: true, env: SHARE_ENV })\n  .on('exit', () => {\n    console.log(process.env.SET_IN_WORKER);  // 打印 'foo'。\n  });\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h3",{attrs:{id:"worker-threadid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-threadid"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.threadId")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerthreadid",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_threadid.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("当前线程的整数标识符。 在对应的工作线程对象上（如果有的话），可以作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_threadid_1",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("worker.threadId")]),t("OutboundLink")],1),e._v(" 使用。 此值对于单个进程中的每个 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 实例都是唯一的。")]),e._v(" "),t("h3",{attrs:{id:"worker-workerdata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-workerdata"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.workerData")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerworkerdata",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_workerdata.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("任意 JavaScript 值，其中包含传给该线程的 "),t("code",[e._v("Worker")]),e._v(" 构造函数的数据的副本。")]),e._v(" "),t("p",[e._v("根据 "),t("a",{attrs:{href:"http://url.nodejs.cn/SLsDHc",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML 结构化克隆算法"),t("OutboundLink")],1),e._v("，数据如同使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_port_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("postMessage()")]),t("OutboundLink")],1),e._v(" 一样被克隆。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Worker, isMainThread, workerData } = require('worker_threads');\n\nif (isMainThread) {\n  const worker = new Worker(__filename, { workerData: 'Hello, world!' });\n} else {\n  console.log(workerData);  // 打印 'Hello, world!'。\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("h3",{attrs:{id:"messagechannel-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#messagechannel-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("MessageChannel")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#class-messagechannel",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/class_messagechannel.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[t("code",[e._v("worker.MessageChannel")]),e._v(" 类的实例代表异步的双向通信通道。 "),t("code",[e._v("MessageChannel")]),e._v(" 没有自己的方法。 "),t("code",[e._v("new MessageChannel()")]),e._v(" 产生具有 "),t("code",[e._v("port1")]),e._v(" 和 "),t("code",[e._v("port2")]),e._v(" 属性的对象，其引用链接的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_messageport",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("MessagePort")]),t("OutboundLink")],1),e._v(" 实例。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { MessageChannel } = require('worker_threads');\n\nconst { port1, port2 } = new MessageChannel();\nport1.on('message', (message) => console.log('received', message));\nport2.postMessage({ foo: 'bar' });\n// 从 `port1.on('message')` 监听器打印 received { foo: 'bar' }\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h3",{attrs:{id:"messageport-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#messageport-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("MessagePort")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#class-messageport",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/class_messageport.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[t("code",[e._v("worker.MessagePort")]),e._v(" 类的实例代表异步双向通信通道的一端。 它可以用来在不同的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 之间传输结构化的数据、内存区域和其他 "),t("code",[e._v("MessagePort")])]),e._v(" "),t("h4",{attrs:{id:"close-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#close-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'close'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-close",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_close.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("一旦通道的任一侧断开连接，则会触发 "),t("code",[e._v("'close'")]),e._v(" 事件。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { MessageChannel } = require('worker_threads');\nconst { port1, port2 } = new MessageChannel();\n\n// 打印:\n//   foobar\n//   closed!\nport2.on('message', (message) => console.log(message));\nport2.on('close', () => console.log('closed!'));\n\nport1.postMessage('foobar');\nport1.close();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h4",{attrs:{id:"message-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#message-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'message'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-message",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_message.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[t("any",[t("OutboundLink")],1)],1),e._v(" 传输值")])]),e._v(" "),t("p",[e._v("为任何传入消息触发 "),t("code",[e._v("'message'")]),e._v(" 事件，其中包含 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_port_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.postMessage()")]),t("OutboundLink")],1),e._v(" 的克隆输入。")]),e._v(" "),t("p",[e._v("此事件的监听器将收到传给 "),t("code",[e._v("postMessage()")]),e._v(" 的 "),t("code",[e._v("value")]),e._v(" 参数的副本，并且没有其他参数。")]),e._v(" "),t("h4",{attrs:{id:"messageerror-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#messageerror-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'messageerror'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-messageerror",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_messageerror.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.19.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("error")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1),e._v(" 错误对象")])]),e._v(" "),t("p",[e._v("当反序列化消息失败时，则会触发 "),t("code",[e._v("'messageerror'")]),e._v(" 事件。")]),e._v(" "),t("h4",{attrs:{id:"port-close"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#port-close"}},[e._v("#")]),e._v(" "),t("code",[e._v("port.close()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#portclose",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/port_close.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("禁止在连接的任一端进一步发送消息。 当此 "),t("code",[e._v("MessagePort")]),e._v(" 上不会发生进一步的通信时，可以调用此方法。")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_close",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'close'")]),e._v(" 事件"),t("OutboundLink")],1),e._v("将在作为通道一部分的两个 "),t("code",[e._v("MessagePort")]),e._v(" 实例上触发。")]),e._v(" "),t("h4",{attrs:{id:"port-postmessage-value-transferlist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#port-postmessage-value-transferlist"}},[e._v("#")]),e._v(" "),t("code",[e._v("port.postMessage(value[, transferList])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#portpostmessagevalue-transferlist",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/port_postmessage_value_transferlist.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[t("any",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("transferList")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[e._v("<Object[]>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("向该通道的接收端发送 JavaScript 值。 "),t("code",[e._v("value")]),e._v(" 将以与 "),t("a",{attrs:{href:"http://url.nodejs.cn/SLsDHc",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML 结构化克隆算法"),t("OutboundLink")],1),e._v("兼容的方式传输。")]),e._v(" "),t("p",[e._v("特别是与 "),t("code",[e._v("JSON")]),e._v(" 的显着区别是：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(" 可能包含循环引用。")]),e._v(" "),t("li",[t("code",[e._v("value")]),e._v(" 可能包含内置 JS 类型的实例，例如 "),t("code",[e._v("RegExp")]),e._v("、"),t("code",[e._v("BigInt")]),e._v("、"),t("code",[e._v("Map")]),e._v("、"),t("code",[e._v("Set")]),e._v(" 等。")]),e._v(" "),t("li",[t("code",[e._v("value")]),e._v(" 可能包含类型化数组，都使用 "),t("code",[e._v("ArrayBuffer")]),e._v(" 和 "),t("code",[e._v("SharedArrayBuffer")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("value")]),e._v(" 可能包含 "),t("a",{attrs:{href:"http://url.nodejs.cn/jrrZmy",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("WebAssembly.Module")]),t("OutboundLink")],1),e._v(" 实例。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { MessageChannel } = require('worker_threads');\nconst { port1, port2 } = new MessageChannel();\n\nport1.on('message', (message) => console.log(message));\n\nconst circularData = {};\ncircularData.foo = circularData;\n// 打印: { foo: [Circular] }\nport2.postMessage(circularData);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[t("code",[e._v("transferList")]),e._v(" 可能是 "),t("a",{attrs:{href:"http://url.nodejs.cn/mUbfvF",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ArrayBuffer")]),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_messageport",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("MessagePort")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_class_filehandle",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("FileHandle")]),t("OutboundLink")],1),e._v(" 对象的列表。 传输后，它们将不再能在通道的发送端使用（即使它们不包含在 "),t("code",[e._v("value")]),e._v(" 中） 与"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/child_process.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("子进程"),t("OutboundLink")],1),e._v("不同，当前不支持传输句柄，例如网络套接字。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("value")]),e._v(" 包含 "),t("a",{attrs:{href:"http://url.nodejs.cn/6J6LBy",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("SharedArrayBuffer")]),t("OutboundLink")],1),e._v(" 实例，则可以从任一线程访问这些实例。 它们不能在 "),t("code",[e._v("transferList")]),e._v(" 中列出。")]),e._v(" "),t("p",[t("code",[e._v("value")]),e._v(" 可能仍然包含不在 "),t("code",[e._v("transferList")]),e._v(" 中的 "),t("code",[e._v("ArrayBuffer")]),e._v(" 实例；在这种情况下，底层内存被复制而不是移动。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { MessageChannel } = require('worker_threads');\nconst { port1, port2 } = new MessageChannel();\n\nport1.on('message', (message) => console.log(message));\n\nconst uint8Array = new Uint8Array([ 1, 2, 3, 4 ]);\n// 此发送 `uint8Array` 的副本：\nport2.postMessage(uint8Array);\n// 这不会复制数据，但会使 `uint8Array` 无法使用：\nport2.postMessage(uint8Array, [ uint8Array.buffer ]);\n\n// `sharedUint8Array` 的内存可以从\n// `.on('message')` 收到的原件和副本中访问：\nconst sharedUint8Array = new Uint8Array(new SharedArrayBuffer(4));\nport2.postMessage(sharedUint8Array);\n\n// 这会将新创建的消息端口传输到接收器。\n// 例如，这可用于在作为同一父线程的子线程的多个 `Worker` 线程之间\n// 创建通信通道。\nconst otherChannel = new MessageChannel();\nport2.postMessage({ port: otherChannel.port1 }, [ otherChannel.port1 ]);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br")])]),t("p",[e._v("因为对象克隆使用结构化克隆算法，不可枚举的属性、属性访问器和对象原型不会被保留。 特别是，"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer")]),t("OutboundLink")],1),e._v(" 对象将在接收方读取为普通的 "),t("a",{attrs:{href:"http://url.nodejs.cn/ZbDkpm",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Uint8Array")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("消息对象会被立即克隆，发布后可以修改，没有副作用。")]),e._v(" "),t("p",[e._v("关于此 API 背后的序列化和反序列化机制的更多信息，请参见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/v8.html#v8_serialization_api",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v8")]),e._v(" 模块的序列化 API"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h5",{attrs:{id:"传输-typedarray-和-buffer-时的注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传输-typedarray-和-buffer-时的注意事项"}},[e._v("#")]),e._v(" 传输 TypedArray 和 Buffer 时的注意事项"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#considerations-when-transferring-typedarrays-and-buffers",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/considerations_when_transferring_typedarrays_and_buffers.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("所有 "),t("code",[e._v("TypedArray")]),e._v(" 和 "),t("code",[e._v("Buffer")]),e._v(" 实例都是对底层 "),t("code",[e._v("ArrayBuffer")]),e._v(" 的视图。 也就是说，实际存储原始数据的是 "),t("code",[e._v("ArrayBuffer")]),e._v("，而 "),t("code",[e._v("TypedArray")]),e._v(" 和 "),t("code",[e._v("Buffer")]),e._v(" 对象提供了查看和操作数据的方式。 在同一个 "),t("code",[e._v("ArrayBuffer")]),e._v(" 实例上创建多个视图是可能且常见的。 使用传输列表传输 "),t("code",[e._v("ArrayBuffer")]),e._v(" 时必须非常小心，因为这样做会导致共享同一个 "),t("code",[e._v("ArrayBuffer")]),e._v(" 的所有 "),t("code",[e._v("TypedArray")]),e._v(" 和 "),t("code",[e._v("Buffer")]),e._v(" 实例变得不可用。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const ab = new ArrayBuffer(10);\n\nconst u1 = new Uint8Array(ab);\nconst u2 = new Uint16Array(ab);\n\nconsole.log(u2.length);  // 打印 5\n\nport.postMessage(u1, [u1.buffer]);\n\nconsole.log(u2.length);  // 打印 0\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("p",[e._v("对于 "),t("code",[e._v("Buffer")]),e._v(" 实例，具体来说，底层 "),t("code",[e._v("ArrayBuffer")]),e._v(" 是否可以被传输或克隆完全取决于实例是如何创建的，这通常无法可靠地确定。")]),e._v(" "),t("p",[t("code",[e._v("ArrayBuffer")]),e._v(" 可以用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_markasuntransferable_object",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("markAsUntransferable()")]),t("OutboundLink")],1),e._v(" 标记来表示它应该总是被克隆并且永远不会被传输。")]),e._v(" "),t("p",[e._v("根据 "),t("code",[e._v("Buffer")]),e._v(" 实例的创建方式，它可能拥有也可能不拥有其底层 "),t("code",[e._v("ArrayBuffer")]),e._v("。 除非知道 "),t("code",[e._v("Buffer")]),e._v(" 实例拥有它，否则不得传输 "),t("code",[e._v("ArrayBuffer")]),e._v("。 特别是，对于从内部 "),t("code",[e._v("Buffer")]),e._v(" 池（使用，例如 "),t("code",[e._v("Buffer.from()")]),e._v(" 或 "),t("code",[e._v("Buffer.alloc()")]),e._v("）创建的 "),t("code",[e._v("Buffer")]),e._v("，传输它们是不可能的，它们将始终被克隆，这会发送整个 "),t("code",[e._v("Buffer")]),e._v(" 池的副本。 此行为可能会带来意想不到的更高内存使用率和可能的安全问题。")]),e._v(" "),t("p",[e._v("有关 "),t("code",[e._v("Buffer")]),e._v(" 池化的更多详细信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/buffer.html#buffer_static_method_buffer_allocunsafe_size",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Buffer.allocUnsafe()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("使用 "),t("code",[e._v("Buffer.alloc()")]),e._v(" 或 "),t("code",[e._v("Buffer.allocUnsafeSlow()")]),e._v(" 创建的 "),t("code",[e._v("Buffer")]),e._v(" 实例的 "),t("code",[e._v("ArrayBuffer")]),e._v(" 始终可以传输，但这样做会使那些 "),t("code",[e._v("ArrayBuffer")]),e._v(" 的所有其他现有视图无法使用。")]),e._v(" "),t("h4",{attrs:{id:"port-ref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#port-ref"}},[e._v("#")]),e._v(" "),t("code",[e._v("port.ref()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#portref",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/port_ref.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[t("code",[e._v("unref()")]),e._v(" 的相反。 如果它是唯一剩下的活动句柄（默认行为），则在以前的 "),t("code",[e._v("unref()")]),e._v(" 的端口上调用 "),t("code",[e._v("ref()")]),e._v(" 不会让程序退出。 如果端口是 "),t("code",[e._v("ref()")]),e._v(" 的，则再次调用 "),t("code",[e._v("ref()")]),e._v(" 将无效。")]),e._v(" "),t("p",[e._v("如果使用 "),t("code",[e._v(".on('message')")]),e._v(" 绑定或删除监听器，则端口将根据事件的监听器是否存在自动进行 "),t("code",[e._v("ref()")]),e._v(" 和 "),t("code",[e._v("unref()")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"port-start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#port-start"}},[e._v("#")]),e._v(" "),t("code",[e._v("port.start()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#portstart",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/port_start.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("开始在此 "),t("code",[e._v("MessagePort")]),e._v(" 上接收消息。 当将此端口用作事件触发器时，一旦绑定了 "),t("code",[e._v("'message'")]),e._v(" 监听器，则就会自动调用它。")]),e._v(" "),t("p",[e._v("此方法与 Web "),t("code",[e._v("MessagePort")]),e._v(" API 相同。 在 Node.js 中，只有在没有事件监听器时才用于忽略消息。 Node.js 在处理 "),t("code",[e._v(".onmessage")]),e._v(" 方面也有分歧。 设置它会自动调用 "),t("code",[e._v(".start()")]),e._v("，但取消设置它会让消息排队直到设置新的句柄或端口被丢弃。")]),e._v(" "),t("h4",{attrs:{id:"port-unref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#port-unref"}},[e._v("#")]),e._v(" "),t("code",[e._v("port.unref()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#portunref",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/port_unref.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("如果这是事件系统中唯一的活动句柄，则在端口上调用 "),t("code",[e._v("unref()")]),e._v(" 将允许线程退出。 如果端口已经 "),t("code",[e._v("unref()")]),e._v("，则再次调用 "),t("code",[e._v("unref()")]),e._v(" 将无效。")]),e._v(" "),t("p",[e._v("如果使用 "),t("code",[e._v(".on('message')")]),e._v(" 绑定或删除监听器，则端口将根据事件的监听器是否存在自动进行 "),t("code",[e._v("ref()")]),e._v(" 和 "),t("code",[e._v("unref()")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"worker-类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-类"}},[e._v("#")]),e._v(" "),t("code",[e._v("Worker")]),e._v(" 类"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#class-worker",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/class_worker.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[e._v("继承自: "),t("a",{attrs:{href:"http://nodejs.cn/api/events.html#class-eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t("EventEmitter",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[t("code",[e._v("Worker")]),e._v(" 类代表独立的 JavaScript 执行线程。 大多数 Node.js API 都可以在其中使用。")]),e._v(" "),t("p",[e._v("工作线程环境中的显着差异是：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdin",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stdin")]),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdout",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stdout")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stderr",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stderr")]),t("OutboundLink")],1),e._v(" 可能被父线程重定向。")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_ismainthread",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("require('worker_threads').isMainThread")]),t("OutboundLink")],1),e._v(" 属性被设置为 "),t("code",[e._v("false")]),e._v("。")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_parentport",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("require('worker_threads').parentPort")]),t("OutboundLink")],1),e._v(" 消息端口可用。")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_exit_code",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.exit()")]),t("OutboundLink")],1),e._v(" 不会停止整个程序，只是单个线程，且 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_abort",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.abort()")]),t("OutboundLink")],1),e._v(" 不可用。")]),e._v(" "),t("li",[e._v("设置群组或用户标识的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_chdir_directory",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.chdir()")]),t("OutboundLink")],1),e._v(" 和 "),t("code",[e._v("process")]),e._v(" 方法不可用。")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_env",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.env")]),t("OutboundLink")],1),e._v(" 是父线程的环境变量的副本，除非另有说明。 对副本的更改在其他线程中不可见，对原生插件也不可见（除非 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_share_env",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("worker.SHARE_ENV")]),t("OutboundLink")],1),e._v(" 已作为 "),t("code",[e._v("env")]),e._v(" 选项传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 构造函数）。")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_title",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.title")]),t("OutboundLink")],1),e._v(" 不能修改。")]),e._v(" "),t("li",[e._v("信号不会通过 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_signal_events",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.on('...')")]),t("OutboundLink")],1),e._v(" 传送。")]),e._v(" "),t("li",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_terminate",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("worker.terminate()")]),t("OutboundLink")],1),e._v(" 被调用时，执行可能在任何时候停止。")]),e._v(" "),t("li",[e._v("来自父进程的进程间通信通道不可访问。")]),e._v(" "),t("li",[e._v("不支持 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/tracing.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("trace_events")]),t("OutboundLink")],1),e._v(" 模块。")]),e._v(" "),t("li",[e._v("如果满足"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/addons.html#addons_worker_support",target:"_blank",rel:"noopener noreferrer"}},[e._v("某些条件"),t("OutboundLink")],1),e._v("，则原生插件只能从多个线程加载。")])]),e._v(" "),t("p",[e._v("可以在其他 "),t("code",[e._v("Worker")]),e._v(" 内部创建 "),t("code",[e._v("Worker")]),e._v(" 实例。")]),e._v(" "),t("p",[e._v("和"),t("a",{attrs:{href:"http://url.nodejs.cn/skL7X7",target:"_blank",rel:"noopener noreferrer"}},[e._v("网络工作线程"),t("OutboundLink")],1),e._v("和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/cluster.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("cluster")]),e._v(" 模块"),t("OutboundLink")],1),e._v("一样，可以通过线程间消息传递来实现双向通信。 在内部，"),t("code",[e._v("Worker")]),e._v(" 有一对内置的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_messageport",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("MessagePort")]),t("OutboundLink")],1),e._v("，在创建 "),t("code",[e._v("Worker")]),e._v(" 时它们已经相互关联。 虽然父端的 "),t("code",[e._v("MessagePort")]),e._v(" 对象没有直接暴露，但其功能通过父线程 "),t("code",[e._v("Worker")]),e._v(" 对象上的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("worker.postMessage()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_message_1",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("worker.on('message')")]),t("OutboundLink")],1),e._v(" 事件暴露。")]),e._v(" "),t("p",[e._v("要创建自定义的消息通道（鼓励使用默认的全局通道，因为它有助于分离关注点），用户可以在任一线程上创建 "),t("code",[e._v("MessageChannel")]),e._v(" 对象，并通过预先存在的通道（例如全局通道）将该 "),t("code",[e._v("MessageChannel")]),e._v(" 上的 "),t("code",[e._v("MessagePort")]),e._v(" 之一传给另一个线程。")]),e._v(" "),t("p",[e._v("有关如何传递消息以及可以成功通过线程屏障传输的 JavaScript 值类型的更多信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_port_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.postMessage()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const assert = require('assert');\nconst {\n  Worker, MessageChannel, MessagePort, isMainThread, parentPort\n} = require('worker_threads');\nif (isMainThread) {\n  const worker = new Worker(__filename);\n  const subChannel = new MessageChannel();\n  worker.postMessage({ hereIsYourPort: subChannel.port1 }, [subChannel.port1]);\n  subChannel.port2.on('message', (value) => {\n    console.log('received:', value);\n  });\n} else {\n  parentPort.once('message', (value) => {\n    assert(value.hereIsYourPort instanceof MessagePort);\n    value.hereIsYourPort.postMessage('the worker is sending this');\n    value.hereIsYourPort.close();\n  });\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br")])]),t("h4",{attrs:{id:"new-worker-filename-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-worker-filename-options"}},[e._v("#")]),e._v(" "),t("code",[e._v("new Worker(filename[, options])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#new-workerfilename-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/new_worker_filename_options.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("filename")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[t("string",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/url.html#the-whatwg-url-api",target:"_blank",rel:"noopener noreferrer"}},[t("URL",[t("OutboundLink")],1)],1),e._v(" 工作线程主脚本或模块的路径。")]),e._v(" "),t("p",[e._v("如果 "),t("code",[e._v("options.eval")]),e._v(" 是 "),t("code",[e._v("true")]),e._v("，则这是包含 JavaScript 代码（而不是路径）的字符串。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("options")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1)]),e._v(" "),t("ul",[t("li",[t("code",[e._v("argv")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[e._v("<any[]>"),t("OutboundLink")],1),e._v(" 将被字符串化并附加到工作线程中的 "),t("code",[e._v("process.argv")]),e._v(" 的参数列表。 这与 "),t("code",[e._v("workerData")]),e._v(" 非常相似，但这些值将在全局 "),t("code",[e._v("process.argv")]),e._v(" 上可用，就像它们作为命令行选项传给脚本一样。")]),e._v(" "),t("li",[t("code",[e._v("env")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 如果设置，则指定工作线程内 "),t("code",[e._v("process.env")]),e._v(" 的初始值。 作为特殊值，"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_share_env",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("worker.SHARE_ENV")]),t("OutboundLink")],1),e._v(" 可用于指定父线程和子线程应该共享它们的环境变量；在这种情况下，对一个线程的 "),t("code",[e._v("process.env")]),e._v(" 对象的更改也会影响另一个线程。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("process.env")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("eval")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 如果 "),t("code",[e._v("true")]),e._v(" 并且第一个参数是 "),t("code",[e._v("string")]),e._v("，则将构造函数的第一个参数解释为一旦工作线程在线就执行的脚本。")]),e._v(" "),t("li",[t("code",[e._v("execArgv")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/9Tw2bK",target:"_blank",rel:"noopener noreferrer"}},[e._v("<string[]>"),t("OutboundLink")],1),e._v(" 传给工作线程的 node CLI 选项的列表。 不支持 V8 选项（如 "),t("code",[e._v("--max-old-space-size")]),e._v("）和影响进程的选项（如 "),t("code",[e._v("--title")]),e._v("）。 如果设置，则这将在工作线程内部提供为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_execargv",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.execArgv")]),t("OutboundLink")],1),e._v("。 默认情况下，选项将从父线程继承。")]),e._v(" "),t("li",[t("code",[e._v("stdin")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 如果设置为 "),t("code",[e._v("true")]),e._v("，则 "),t("code",[e._v("worker.stdin")]),e._v(" 将提供其内容将在工作线程中显示为 "),t("code",[e._v("process.stdin")]),e._v(" 的可写流。 默认情况下，不提供任何数据。")]),e._v(" "),t("li",[t("code",[e._v("stdout")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 如果设置为 "),t("code",[e._v("true")]),e._v("，则 "),t("code",[e._v("worker.stdout")]),e._v(" 将不会自动通过管道传输到父线程中的 "),t("code",[e._v("process.stdout")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("stderr")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 如果设置为 "),t("code",[e._v("true")]),e._v("，则 "),t("code",[e._v("worker.stderr")]),e._v(" 将不会自动通过管道传输到父线程中的 "),t("code",[e._v("process.stderr")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("workerData")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[t("any",[t("OutboundLink")],1)],1),e._v(" 任何将被克隆并作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_workerdata",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("require('worker_threads').workerData")]),t("OutboundLink")],1),e._v(" 可用的 JavaScript 值。 克隆将按照 "),t("a",{attrs:{href:"http://url.nodejs.cn/SLsDHc",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML 结构化克隆算法"),t("OutboundLink")],1),e._v("中的描述进行，如果无法克隆对象（例如，因为它包含 "),t("code",[e._v("function")]),e._v("），则会抛出错误。")]),e._v(" "),t("li",[t("code",[e._v("trackUnmanagedFds")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jFbvuT",target:"_blank",rel:"noopener noreferrer"}},[t("boolean",[t("OutboundLink")],1)],1),e._v(" 如果设置为 "),t("code",[e._v("true")]),e._v("，则工作线程将跟踪通过 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_fs_open_path_flags_mode_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("fs.open()")]),t("OutboundLink")],1),e._v(" 和 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_fs_close_fd_callback",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("fs.close()")]),t("OutboundLink")],1),e._v(" 管理的原始文件描述符，并在工作线程退出时关闭它们，类似于网络套接字或通过 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/fs.html#fs_class_filehandle",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("FileHandle")]),t("OutboundLink")],1),e._v(" API 管理的文件描述符等其他资源。 此选项会被所有嵌套的 "),t("code",[e._v("Worker")]),e._v(" 自动继承。 "),t("strong",[e._v("默认值")]),e._v(": "),t("code",[e._v("false")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("transferList")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[e._v("<Object[]>"),t("OutboundLink")],1),e._v(" 如果在 "),t("code",[e._v("workerData")]),e._v(" 中传入了一个或多个类似 "),t("code",[e._v("MessagePort")]),e._v(" 的对象，则这些条目需要 "),t("code",[e._v("transferList")]),e._v("，否则将抛出 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#errors_err_missing_message_port_in_transfer_list",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST")]),t("OutboundLink")],1),e._v("。 有关详细信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_port_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.postMessage()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("resourceLimits")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 新的 JS 引擎实例的一组可选资源限制。 达到这些限制将导致 "),t("code",[e._v("Worker")]),e._v(" 实例终止。 这些限制只影响 JS 引擎，不影响外部数据，不包括 "),t("code",[e._v("ArrayBuffer")]),e._v("。 即使设置了这些限制，如果遇到全局内存不足的情况，进程仍可能会中止。\n"),t("ul",[t("li",[t("code",[e._v("maxOldGenerationSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 主堆的最大大小 (以 MB 为单位)。")]),e._v(" "),t("li",[t("code",[e._v("maxYoungGenerationSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 最近创建的对象的最大堆空间大小。")]),e._v(" "),t("li",[t("code",[e._v("codeRangeSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 用于生成代码的预分配内存范围的大小。")]),e._v(" "),t("li",[t("code",[e._v("stackSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1),e._v(" 线程的默认最大堆栈大小。 较小的值可能会导致工作线程实例无法使用。 "),t("strong",[e._v("默认值:")]),e._v(" "),t("code",[e._v("4")]),e._v("。")])])])])])]),e._v(" "),t("h4",{attrs:{id:"error-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#error-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'error'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-error",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_error.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("err")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("如果工作线程抛出未捕获的异常，则会触发 "),t("code",[e._v("'error'")]),e._v(" 事件。 在这种情况下，工作线程将被终止。")]),e._v(" "),t("h4",{attrs:{id:"exit-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exit-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'exit'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-exit",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_exit.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("exitCode")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("一旦工作线程停止，则会触发 "),t("code",[e._v("'exit'")]),e._v(" 事件。 如果工作线程通过调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_exit_code",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.exit()")]),t("OutboundLink")],1),e._v(" 退出，则 "),t("code",[e._v("exitCode")]),e._v(" 参数将是传入的退出码。 如果工作线程被终止，则 "),t("code",[e._v("exitCode")]),e._v(" 参数将为 "),t("code",[e._v("1")]),e._v("。")]),e._v(" "),t("p",[e._v("这是任何 "),t("code",[e._v("Worker")]),e._v(" 实例触发的最终事件。")]),e._v(" "),t("h4",{attrs:{id:"message-事件-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#message-事件-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("'message'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-message_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_message_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[t("any",[t("OutboundLink")],1)],1),e._v(" 传输值")])]),e._v(" "),t("p",[e._v("当工作线程调用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("require('worker_threads').parentPort.postMessage()")]),t("OutboundLink")],1),e._v(" 时，则会触发 "),t("code",[e._v("'message'")]),e._v(" 事件。 详情请见 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_message",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.on('message')")]),t("OutboundLink")],1),e._v(" 事件。")]),e._v(" "),t("p",[e._v("从工作线程发送的所有消息都将在 "),t("code",[e._v("Worker")]),e._v(" 对象上触发 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_exit",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'exit'")]),e._v(" 事件"),t("OutboundLink")],1),e._v("之前触发。")]),e._v(" "),t("h4",{attrs:{id:"messageerror-事件-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#messageerror-事件-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("'messageerror'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-messageerror_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_messageerror_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.19.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("error")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/qZ873x",target:"_blank",rel:"noopener noreferrer"}},[t("Error",[t("OutboundLink")],1)],1),e._v(" 错误对象")])]),e._v(" "),t("p",[e._v("当反序列化消息失败时，则会触发 "),t("code",[e._v("'messageerror'")]),e._v(" 事件。")]),e._v(" "),t("h4",{attrs:{id:"online-事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#online-事件"}},[e._v("#")]),e._v(" "),t("code",[e._v("'online'")]),e._v(" 事件"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#event-online",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/event_online.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("当工作线程开始执行 JavaScript 代码时，则会触发 "),t("code",[e._v("'online'")]),e._v(" 事件。")]),e._v(" "),t("h4",{attrs:{id:"worker-getheapsnapshot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-getheapsnapshot"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.getHeapSnapshot()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workergetheapsnapshot",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_getheapsnapshot.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.17.0")]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/ri1kj8",target:"_blank",rel:"noopener noreferrer"}},[t("Promise",[t("OutboundLink")],1)],1),e._v(" 对包含 V8 堆快照的可读流的 promise")])]),e._v(" "),t("p",[e._v("返回工作线程当前状态的 V8 快照的可读流。 有关详细信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/v8.html#v8_v8_getheapsnapshot",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v8.getHeapSnapshot()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("如果工作线程不再运行（这可能发生在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_exit",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'exit'")]),e._v(" 事件"),t("OutboundLink")],1),e._v("触发之前），则返回的 "),t("code",[e._v("Promise")]),e._v(" 将立即被使用 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/errors.html#ERR_WORKER_NOT_RUNNING",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ERR_WORKER_NOT_RUNNING")]),t("OutboundLink")],1),e._v(" 错误拒绝。")]),e._v(" "),t("h4",{attrs:{id:"worker-performance"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-performance"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.performance")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerperformance",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_performance.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.22.0")]),e._v(" "),t("p",[e._v("可用于从工作线程实例查询性能信息的对象。 类似于"),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#perf_hooks.md#perf_hooks_perf_hooks_performance",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("perf_hooks.performance")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h5",{attrs:{id:"performance-eventlooputilization-utilization1-utilization2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#performance-eventlooputilization-utilization1-utilization2"}},[e._v("#")]),e._v(" "),t("code",[e._v("performance.eventLoopUtilization([utilization1[, utilization2]])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#performanceeventlooputilizationutilization1-utilization2",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/performance_eventlooputilization_utilization1_utilization2.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.22.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("utilization1")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 上一次调用 "),t("code",[e._v("eventLoopUtilization()")]),e._v(" 的结果。")]),e._v(" "),t("li",[t("code",[e._v("utilization2")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" 在 "),t("code",[e._v("utilization1")]),e._v(" 之前调用 "),t("code",[e._v("eventLoopUtilization()")]),e._v(" 的结果。")]),e._v(" "),t("li",[e._v("返回 "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("idle")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("active")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("utilization")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)])])])]),e._v(" "),t("p",[e._v("与 "),t("a",{attrs:{href:"http://url.nodejs.cn/utFFex",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("perf_hooks")]),e._v(" "),t("code",[e._v("eventLoopUtilization()")]),t("OutboundLink")],1),e._v(" 相同的调用，除了返回工作线程实例的值。")]),e._v(" "),t("p",[e._v("一个区别是，与主线程不同，工作线程内的引导是在事件循环内完成的。 因此，一旦工作线程的脚本开始执行，则事件循环利用率将立即可用。")]),e._v(" "),t("p",[e._v("不增加的 "),t("code",[e._v("idle")]),e._v(" 时间并不表示工作线程卡在引导中。 下面的示例展示了工作线程的整个生命周期永远不会累积任何 "),t("code",[e._v("idle")]),e._v(" 时间，但仍然能够处理消息。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const { Worker, isMainThread, parentPort } = require('worker_threads');\n\nif (isMainThread) {\n  const worker = new Worker(__filename);\n  setInterval(() => {\n    worker.postMessage('hi');\n    console.log(worker.performance.eventLoopUtilization());\n  }, 100).unref();\n  return;\n}\n\nparentPort.on('message', () => console.log('msg')).unref();\n(function r(n) {\n  if (--n < 0) return;\n  const t = Date.now();\n  while (Date.now() - t < 300);\n  setImmediate(r, n);\n})(10);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br")])]),t("p",[e._v("工作线程的事件循环利用率仅在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_online",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'online'")]),e._v(" 事件"),t("OutboundLink")],1),e._v("触发后可用，如果在此之前或在 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_exit",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'exit'")]),e._v(" 事件"),t("OutboundLink")],1),e._v("之后调用，则所有属性的值都为 "),t("code",[e._v("0")]),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"worker-postmessage-value-transferlist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-postmessage-value-transferlist"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.postMessage(value[, transferList])")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerpostmessagevalue-transferlist",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_postmessage_value_transferlist.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("value")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/6sTGdS",target:"_blank",rel:"noopener noreferrer"}},[t("any",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("transferList")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[e._v("<Object[]>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("向将通过 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_message",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("require('worker_threads').parentPort.on('message')")]),t("OutboundLink")],1),e._v(" 接收的工作线程发送消息。 有关详细信息，请参阅 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_port_postmessage_value_transferlist",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("port.postMessage()")]),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h4",{attrs:{id:"worker-ref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-ref"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.ref()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerref",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_ref.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("与 "),t("code",[e._v("unref()")]),e._v(" 相反，如果它是唯一剩下的活动句柄（默认行为），则在先前 "),t("code",[e._v("unref()")]),e._v(" 的工作线程上调用 "),t("code",[e._v("ref()")]),e._v(" 将不会让程序退出。 如果工作线程是 "),t("code",[e._v("ref()")]),e._v(" 的，则再次调用 "),t("code",[e._v("ref()")]),e._v(" 将不起作用。")]),e._v(" "),t("h4",{attrs:{id:"worker-resourcelimits-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-resourcelimits-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.resourceLimits")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerresourcelimits_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_resourcelimits_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v12.16.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/jzn6Ao",target:"_blank",rel:"noopener noreferrer"}},[t("Object",[t("OutboundLink")],1)],1),e._v(" "),t("ul",[t("li",[t("code",[e._v("maxYoungGenerationSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("maxOldGenerationSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("codeRangeSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)]),e._v(" "),t("li",[t("code",[e._v("stackSizeMb")]),e._v(" "),t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("number",[t("OutboundLink")],1)],1)])])])]),e._v(" "),t("p",[e._v("为此工作线程提供了一组 JS 引擎资源约束。 如果将 "),t("code",[e._v("resourceLimits")]),e._v(" 选项传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 构造函数，则这与其值匹配。")]),e._v(" "),t("p",[e._v("如果工作线程已经停止，则返回值是空对象。")]),e._v(" "),t("h4",{attrs:{id:"worker-stderr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-stderr"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.stderr")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerstderr",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_stderr.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamreadable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Readable>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("这是包含工作线程内写入 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stderr",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stderr")]),t("OutboundLink")],1),e._v(" 的数据的可读流。 如果 "),t("code",[e._v("stderr: true")]),e._v(" 没有传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 构造函数，则数据将通过管道传输到父线程的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stderr",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stderr")]),t("OutboundLink")],1),e._v(" 流。")]),e._v(" "),t("h4",{attrs:{id:"worker-stdin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-stdin"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.stdin")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerstdin",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_stdin.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/334hvC",target:"_blank",rel:"noopener noreferrer"}},[t("null",[t("OutboundLink")],1)],1),e._v(" | "),t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamwritable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Writable>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("如果将 "),t("code",[e._v("stdin: true")]),e._v(" 传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 构造函数，则这是可写流。 写入此流的数据将在工作线程中作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdin",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stdin")]),t("OutboundLink")],1),e._v(" 可用。")]),e._v(" "),t("h4",{attrs:{id:"worker-stdout"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-stdout"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.stdout")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerstdout",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_stdout.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://nodejs.cn/api/stream.html#class-streamreadable",target:"_blank",rel:"noopener noreferrer"}},[e._v("<stream.Readable>"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("这是包含工作线程内写入 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdout",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stdout")]),t("OutboundLink")],1),e._v(" 的数据的可读流。 如果 "),t("code",[e._v("stdout: true")]),e._v(" 没有传给 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_class_worker",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Worker")]),t("OutboundLink")],1),e._v(" 构造函数，则数据将通过管道传输到父线程的 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/process.html#process_process_stdout",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("process.stdout")]),t("OutboundLink")],1),e._v(" 流。")]),e._v(" "),t("h4",{attrs:{id:"worker-terminate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-terminate"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.terminate()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerterminate",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_terminate.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("返回: "),t("a",{attrs:{href:"http://url.nodejs.cn/ri1kj8",target:"_blank",rel:"noopener noreferrer"}},[t("Promise",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("尽快停止工作线程中的所有 JavaScript 执行。 返回在触发 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_event_exit",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("'exit'")]),e._v(" 事件"),t("OutboundLink")],1),e._v("时履行退出码的 Promise。")]),e._v(" "),t("h4",{attrs:{id:"worker-threadid-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-threadid-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.threadId")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerthreadid_1",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_threadid_1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://url.nodejs.cn/SXbo1v",target:"_blank",rel:"noopener noreferrer"}},[t("integer",[t("OutboundLink")],1)],1)])]),e._v(" "),t("p",[e._v("引用线程的整数标识符。 在工作线程内部，它作为 "),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#worker_threads_worker_threadid",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("require('worker_threads').threadId")]),t("OutboundLink")],1),e._v(" 可用。 此值对于单个进程中的每个 "),t("code",[e._v("Worker")]),e._v(" 实例都是唯一的。")]),e._v(" "),t("h4",{attrs:{id:"worker-unref"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-unref"}},[e._v("#")]),e._v(" "),t("code",[e._v("worker.unref()")]),t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads.html#workerunref",target:"_blank",rel:"noopener noreferrer"}},[e._v("#"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nodejs.cn/api-v12/worker_threads/worker_unref.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("中英对照"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("新增于: v10.5.0")]),e._v(" "),t("p",[e._v("如果这是事件系统中唯一的活动句柄，则在工作线程上调用 "),t("code",[e._v("unref()")]),e._v(" 将允许线程退出。 如果工作线程已经 "),t("code",[e._v("unref()")]),e._v("，则再次调用 "),t("code",[e._v("unref()")]),e._v(" 将无效。")])])}),[],!1,null,null,null);r.default=a.exports}}]);