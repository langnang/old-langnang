<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>API — Vue.js | Hello Langnang</title>
    <meta name="generator" content="VuePress 1.9.7">
    
    <meta name="description" content="Welcome to langnang">
    
    <link rel="preload" href="/langnang/assets/css/0.styles.8911c2d2.css" as="style"><link rel="preload" href="/langnang/assets/js/app.d31b4f67.js" as="script"><link rel="preload" href="/langnang/assets/js/3.4862c1a5.js" as="script"><link rel="preload" href="/langnang/assets/js/180.78baa277.js" as="script"><link rel="prefetch" href="/langnang/assets/js/10.775593e7.js"><link rel="prefetch" href="/langnang/assets/js/100.3b42a1b3.js"><link rel="prefetch" href="/langnang/assets/js/101.f90544bb.js"><link rel="prefetch" href="/langnang/assets/js/102.5948090a.js"><link rel="prefetch" href="/langnang/assets/js/103.646bae3d.js"><link rel="prefetch" href="/langnang/assets/js/104.388c68f6.js"><link rel="prefetch" href="/langnang/assets/js/105.3dc547ce.js"><link rel="prefetch" href="/langnang/assets/js/106.711f4951.js"><link rel="prefetch" href="/langnang/assets/js/107.8c7375e5.js"><link rel="prefetch" href="/langnang/assets/js/108.06de7dc8.js"><link rel="prefetch" href="/langnang/assets/js/109.5b31d5ad.js"><link rel="prefetch" href="/langnang/assets/js/11.0a5dae33.js"><link rel="prefetch" href="/langnang/assets/js/110.009ec9bb.js"><link rel="prefetch" href="/langnang/assets/js/111.bac229c8.js"><link rel="prefetch" href="/langnang/assets/js/112.c418e9e1.js"><link rel="prefetch" href="/langnang/assets/js/113.24a8ee24.js"><link rel="prefetch" href="/langnang/assets/js/114.8fe6afae.js"><link rel="prefetch" href="/langnang/assets/js/115.d2df2dc5.js"><link rel="prefetch" href="/langnang/assets/js/116.b5ccbd12.js"><link rel="prefetch" href="/langnang/assets/js/117.d172ce1f.js"><link rel="prefetch" href="/langnang/assets/js/118.6db473b1.js"><link rel="prefetch" href="/langnang/assets/js/119.19ec0599.js"><link rel="prefetch" href="/langnang/assets/js/12.0af39c0b.js"><link rel="prefetch" href="/langnang/assets/js/120.3c6dfea3.js"><link rel="prefetch" href="/langnang/assets/js/121.72a9adf6.js"><link rel="prefetch" href="/langnang/assets/js/122.75b8b13f.js"><link rel="prefetch" href="/langnang/assets/js/123.f5011de7.js"><link rel="prefetch" href="/langnang/assets/js/124.7a73b968.js"><link rel="prefetch" href="/langnang/assets/js/125.2fd0f7a8.js"><link rel="prefetch" href="/langnang/assets/js/126.56416ba6.js"><link rel="prefetch" href="/langnang/assets/js/127.ccd25ff4.js"><link rel="prefetch" href="/langnang/assets/js/128.8edc62a9.js"><link rel="prefetch" href="/langnang/assets/js/129.216fd032.js"><link rel="prefetch" href="/langnang/assets/js/13.c03d4d79.js"><link rel="prefetch" href="/langnang/assets/js/130.c57710d0.js"><link rel="prefetch" href="/langnang/assets/js/131.35330210.js"><link rel="prefetch" href="/langnang/assets/js/132.ec0bf031.js"><link rel="prefetch" href="/langnang/assets/js/133.c6a81315.js"><link rel="prefetch" href="/langnang/assets/js/134.9e3141d7.js"><link rel="prefetch" href="/langnang/assets/js/135.111242f1.js"><link rel="prefetch" href="/langnang/assets/js/136.ef67c601.js"><link rel="prefetch" href="/langnang/assets/js/137.bb3e40a9.js"><link rel="prefetch" href="/langnang/assets/js/138.80a1b191.js"><link rel="prefetch" href="/langnang/assets/js/139.608bdbfe.js"><link rel="prefetch" href="/langnang/assets/js/14.050f82cf.js"><link rel="prefetch" href="/langnang/assets/js/140.e736bed7.js"><link rel="prefetch" href="/langnang/assets/js/141.8bb3e423.js"><link rel="prefetch" href="/langnang/assets/js/142.599583d1.js"><link rel="prefetch" href="/langnang/assets/js/143.1b03e7c9.js"><link rel="prefetch" href="/langnang/assets/js/144.d59da5cd.js"><link rel="prefetch" href="/langnang/assets/js/145.69f830c2.js"><link rel="prefetch" href="/langnang/assets/js/146.f1d0d249.js"><link rel="prefetch" href="/langnang/assets/js/147.6ffe2b0a.js"><link rel="prefetch" href="/langnang/assets/js/148.a23cb0f6.js"><link rel="prefetch" href="/langnang/assets/js/149.fc2d720e.js"><link rel="prefetch" href="/langnang/assets/js/15.52373675.js"><link rel="prefetch" href="/langnang/assets/js/150.fde1fdfc.js"><link rel="prefetch" href="/langnang/assets/js/151.ad337b6b.js"><link rel="prefetch" href="/langnang/assets/js/152.c27a6a8b.js"><link rel="prefetch" href="/langnang/assets/js/153.d1df63e4.js"><link rel="prefetch" href="/langnang/assets/js/154.37e8d179.js"><link rel="prefetch" href="/langnang/assets/js/155.20a7bd1e.js"><link rel="prefetch" href="/langnang/assets/js/156.3eb0c337.js"><link rel="prefetch" href="/langnang/assets/js/157.b439abfe.js"><link rel="prefetch" href="/langnang/assets/js/158.e27914da.js"><link rel="prefetch" href="/langnang/assets/js/159.e2c81e4d.js"><link rel="prefetch" href="/langnang/assets/js/16.d39a414a.js"><link rel="prefetch" href="/langnang/assets/js/160.be13652a.js"><link rel="prefetch" href="/langnang/assets/js/161.bb2944ac.js"><link rel="prefetch" href="/langnang/assets/js/162.03f5841b.js"><link rel="prefetch" href="/langnang/assets/js/163.ab0cc579.js"><link rel="prefetch" href="/langnang/assets/js/164.d1c5018d.js"><link rel="prefetch" href="/langnang/assets/js/165.6041bd7d.js"><link rel="prefetch" href="/langnang/assets/js/166.4007cfdb.js"><link rel="prefetch" href="/langnang/assets/js/167.60edd5dc.js"><link rel="prefetch" href="/langnang/assets/js/168.6c3f208e.js"><link rel="prefetch" href="/langnang/assets/js/169.c0440ecf.js"><link rel="prefetch" href="/langnang/assets/js/17.742bbdba.js"><link rel="prefetch" href="/langnang/assets/js/170.a3a5c6fc.js"><link rel="prefetch" href="/langnang/assets/js/171.9da19196.js"><link rel="prefetch" href="/langnang/assets/js/172.81335ae9.js"><link rel="prefetch" href="/langnang/assets/js/173.eff4c653.js"><link rel="prefetch" href="/langnang/assets/js/174.067a131c.js"><link rel="prefetch" href="/langnang/assets/js/175.d9f2d29c.js"><link rel="prefetch" href="/langnang/assets/js/176.9160d186.js"><link rel="prefetch" href="/langnang/assets/js/177.961ca383.js"><link rel="prefetch" href="/langnang/assets/js/178.f6a50663.js"><link rel="prefetch" href="/langnang/assets/js/179.32053b51.js"><link rel="prefetch" href="/langnang/assets/js/18.c296e2e1.js"><link rel="prefetch" href="/langnang/assets/js/181.fd6da4b7.js"><link rel="prefetch" href="/langnang/assets/js/182.409f2a7a.js"><link rel="prefetch" href="/langnang/assets/js/183.5a920d84.js"><link rel="prefetch" href="/langnang/assets/js/184.105cf2a5.js"><link rel="prefetch" href="/langnang/assets/js/185.a58308b2.js"><link rel="prefetch" href="/langnang/assets/js/186.0e5bd82d.js"><link rel="prefetch" href="/langnang/assets/js/187.4fa04382.js"><link rel="prefetch" href="/langnang/assets/js/188.97d376e0.js"><link rel="prefetch" href="/langnang/assets/js/189.80b00f18.js"><link rel="prefetch" href="/langnang/assets/js/19.1c5a6ebf.js"><link rel="prefetch" href="/langnang/assets/js/190.69690b18.js"><link rel="prefetch" href="/langnang/assets/js/191.0e3e1b72.js"><link rel="prefetch" href="/langnang/assets/js/192.9bd72dc2.js"><link rel="prefetch" href="/langnang/assets/js/193.56adf4dc.js"><link rel="prefetch" href="/langnang/assets/js/194.93bc1c26.js"><link rel="prefetch" href="/langnang/assets/js/195.b22b4646.js"><link rel="prefetch" href="/langnang/assets/js/196.7ab4c9c4.js"><link rel="prefetch" href="/langnang/assets/js/20.cb8b7c79.js"><link rel="prefetch" href="/langnang/assets/js/21.fa864efa.js"><link rel="prefetch" href="/langnang/assets/js/22.f9b2bb9e.js"><link rel="prefetch" href="/langnang/assets/js/23.f1d633b3.js"><link rel="prefetch" href="/langnang/assets/js/24.d48086ba.js"><link rel="prefetch" href="/langnang/assets/js/25.fae94c8a.js"><link rel="prefetch" href="/langnang/assets/js/26.0a794c38.js"><link rel="prefetch" href="/langnang/assets/js/27.3ab27b41.js"><link rel="prefetch" href="/langnang/assets/js/28.04cb9534.js"><link rel="prefetch" href="/langnang/assets/js/29.e736eb74.js"><link rel="prefetch" href="/langnang/assets/js/30.21343d23.js"><link rel="prefetch" href="/langnang/assets/js/31.46d8bc29.js"><link rel="prefetch" href="/langnang/assets/js/32.adbfd3d7.js"><link rel="prefetch" href="/langnang/assets/js/33.a652cb4a.js"><link rel="prefetch" href="/langnang/assets/js/34.a7cbf3be.js"><link rel="prefetch" href="/langnang/assets/js/35.682fcd4d.js"><link rel="prefetch" href="/langnang/assets/js/36.cf77b46c.js"><link rel="prefetch" href="/langnang/assets/js/37.72bb2cea.js"><link rel="prefetch" href="/langnang/assets/js/38.1f71af35.js"><link rel="prefetch" href="/langnang/assets/js/39.44ae3ca7.js"><link rel="prefetch" href="/langnang/assets/js/4.0015768f.js"><link rel="prefetch" href="/langnang/assets/js/40.d5c32fc6.js"><link rel="prefetch" href="/langnang/assets/js/41.b76618fa.js"><link rel="prefetch" href="/langnang/assets/js/42.f86242dc.js"><link rel="prefetch" href="/langnang/assets/js/43.762e6005.js"><link rel="prefetch" href="/langnang/assets/js/44.1d3f1771.js"><link rel="prefetch" href="/langnang/assets/js/45.0489851f.js"><link rel="prefetch" href="/langnang/assets/js/46.111d0911.js"><link rel="prefetch" href="/langnang/assets/js/47.089ce059.js"><link rel="prefetch" href="/langnang/assets/js/48.797a6840.js"><link rel="prefetch" href="/langnang/assets/js/49.bcf6b30e.js"><link rel="prefetch" href="/langnang/assets/js/5.a912fbe1.js"><link rel="prefetch" href="/langnang/assets/js/50.ec9ff8bb.js"><link rel="prefetch" href="/langnang/assets/js/51.da32bd2c.js"><link rel="prefetch" href="/langnang/assets/js/52.9ac7037d.js"><link rel="prefetch" href="/langnang/assets/js/53.913a149f.js"><link rel="prefetch" href="/langnang/assets/js/54.a39f0290.js"><link rel="prefetch" href="/langnang/assets/js/55.ce2fd45a.js"><link rel="prefetch" href="/langnang/assets/js/56.f95f2056.js"><link rel="prefetch" href="/langnang/assets/js/57.9641f8db.js"><link rel="prefetch" href="/langnang/assets/js/58.9e0bd9f9.js"><link rel="prefetch" href="/langnang/assets/js/59.ff799c4d.js"><link rel="prefetch" href="/langnang/assets/js/6.a83dfbde.js"><link rel="prefetch" href="/langnang/assets/js/60.e148b970.js"><link rel="prefetch" href="/langnang/assets/js/61.297c39ea.js"><link rel="prefetch" href="/langnang/assets/js/62.3f65914a.js"><link rel="prefetch" href="/langnang/assets/js/63.820344bb.js"><link rel="prefetch" href="/langnang/assets/js/64.e6d80ada.js"><link rel="prefetch" href="/langnang/assets/js/65.6645abf1.js"><link rel="prefetch" href="/langnang/assets/js/66.83b70802.js"><link rel="prefetch" href="/langnang/assets/js/67.c7861816.js"><link rel="prefetch" href="/langnang/assets/js/68.7bd18b26.js"><link rel="prefetch" href="/langnang/assets/js/69.51bc914a.js"><link rel="prefetch" href="/langnang/assets/js/7.c49c916e.js"><link rel="prefetch" href="/langnang/assets/js/70.adb07203.js"><link rel="prefetch" href="/langnang/assets/js/71.166ddd79.js"><link rel="prefetch" href="/langnang/assets/js/72.f3f769b7.js"><link rel="prefetch" href="/langnang/assets/js/73.a2cebf9d.js"><link rel="prefetch" href="/langnang/assets/js/74.31312659.js"><link rel="prefetch" href="/langnang/assets/js/75.c8eaec5f.js"><link rel="prefetch" href="/langnang/assets/js/76.9dcdecdd.js"><link rel="prefetch" href="/langnang/assets/js/77.7c23270e.js"><link rel="prefetch" href="/langnang/assets/js/78.f3e0ecf5.js"><link rel="prefetch" href="/langnang/assets/js/79.2179f40d.js"><link rel="prefetch" href="/langnang/assets/js/8.63d120fa.js"><link rel="prefetch" href="/langnang/assets/js/80.89a31bb9.js"><link rel="prefetch" href="/langnang/assets/js/81.f95bb1af.js"><link rel="prefetch" href="/langnang/assets/js/82.cab0e3cc.js"><link rel="prefetch" href="/langnang/assets/js/83.c8ba333b.js"><link rel="prefetch" href="/langnang/assets/js/84.46b333b4.js"><link rel="prefetch" href="/langnang/assets/js/85.e8942270.js"><link rel="prefetch" href="/langnang/assets/js/86.f4fba564.js"><link rel="prefetch" href="/langnang/assets/js/87.7f45a780.js"><link rel="prefetch" href="/langnang/assets/js/88.9fc00189.js"><link rel="prefetch" href="/langnang/assets/js/89.e4e6e356.js"><link rel="prefetch" href="/langnang/assets/js/9.17377351.js"><link rel="prefetch" href="/langnang/assets/js/90.2a30069d.js"><link rel="prefetch" href="/langnang/assets/js/91.d1fffc51.js"><link rel="prefetch" href="/langnang/assets/js/92.6d054837.js"><link rel="prefetch" href="/langnang/assets/js/93.6a2aeb2d.js"><link rel="prefetch" href="/langnang/assets/js/94.dfcb77e8.js"><link rel="prefetch" href="/langnang/assets/js/95.4e7702b3.js"><link rel="prefetch" href="/langnang/assets/js/96.5174433b.js"><link rel="prefetch" href="/langnang/assets/js/97.1afd331d.js"><link rel="prefetch" href="/langnang/assets/js/98.2888b244.js"><link rel="prefetch" href="/langnang/assets/js/99.1b857e0e.js"><link rel="prefetch" href="/langnang/assets/js/vendors~flowchart.d11844ea.js">
    <link rel="stylesheet" href="/langnang/assets/css/0.styles.8911c2d2.css">
  </head>
  <body>
    <div id="app" data-server-rendered="true"><div class="theme-container"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="/langnang/" class="home-link router-link-active"><!----> <span class="site-name">Hello Langnang</span></a> <div class="links"><div class="search-box"><input aria-label="Search" autocomplete="off" spellcheck="false" value=""> <!----></div> <nav class="nav-links can-hide"><div class="nav-item"><a href="/langnang/" class="nav-link">
  Home
</a></div><div class="nav-item"><a href="/langnang/Interview/" class="nav-link">
  面试题
</a></div><div class="nav-item"><a href="/langnang/toolkit/" class="nav-link">
  软件工具&amp;服务
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="计算机科学技术" class="dropdown-title"><span class="title">计算机科学技术</span> <span class="arrow down"></span></button> <button type="button" aria-label="计算机科学技术" class="mobile-dropdown-title"><span class="title">计算机科学技术</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          计算机科学技术基础
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="/langnang/52010/5201040/" class="nav-link">
  算法理论
</a></li><li class="dropdown-subitem"><a href="/langnang/52010/5201050/" class="nav-link">
  数据结构
</a></li><li class="dropdown-subitem"><a href="/langnang/52010/5201060/" class="nav-link">
  数据安全与计算机安全
</a></li></ul></li><li class="dropdown-item"><h4>
          计算机软件
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="/langnang/52040/5204010/" class="nav-link">
  软件理论
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204020/" class="nav-link">
  操作系统与操作环境
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204030/" class="nav-link">
  程序设计及其语言
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204050/" class="nav-link">
  数据库
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204060/HTML/" class="nav-link">
  软件开发环境与开发技术
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204070/" class="nav-link">
  软件工程
</a></li></ul></li></ul></div></div><div class="nav-item"><a href="https://github.com/langnang/langnang" target="_blank" rel="noopener noreferrer" class="nav-link external">
  GitHub
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Langnang" class="dropdown-title"><span class="title">Langnang</span> <span class="arrow down"></span></button> <button type="button" aria-label="Langnang" class="mobile-dropdown-title"><span class="title">Langnang</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><!----> <a href="https://langnang.github.io/langnang" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Langnang
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li><li class="dropdown-item"><!----> <a href="https://langnang-temp.github.io/langnang-temp" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Templates
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li><li class="dropdown-item"><!----> <a href="https://langnang-package.github.io/langnang-package" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Packages
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></div></div> <!----></nav></div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="/langnang/" class="nav-link">
  Home
</a></div><div class="nav-item"><a href="/langnang/Interview/" class="nav-link">
  面试题
</a></div><div class="nav-item"><a href="/langnang/toolkit/" class="nav-link">
  软件工具&amp;服务
</a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="计算机科学技术" class="dropdown-title"><span class="title">计算机科学技术</span> <span class="arrow down"></span></button> <button type="button" aria-label="计算机科学技术" class="mobile-dropdown-title"><span class="title">计算机科学技术</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><h4>
          计算机科学技术基础
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="/langnang/52010/5201040/" class="nav-link">
  算法理论
</a></li><li class="dropdown-subitem"><a href="/langnang/52010/5201050/" class="nav-link">
  数据结构
</a></li><li class="dropdown-subitem"><a href="/langnang/52010/5201060/" class="nav-link">
  数据安全与计算机安全
</a></li></ul></li><li class="dropdown-item"><h4>
          计算机软件
        </h4> <ul class="dropdown-subitem-wrapper"><li class="dropdown-subitem"><a href="/langnang/52040/5204010/" class="nav-link">
  软件理论
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204020/" class="nav-link">
  操作系统与操作环境
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204030/" class="nav-link">
  程序设计及其语言
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204050/" class="nav-link">
  数据库
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204060/HTML/" class="nav-link">
  软件开发环境与开发技术
</a></li><li class="dropdown-subitem"><a href="/langnang/52040/5204070/" class="nav-link">
  软件工程
</a></li></ul></li></ul></div></div><div class="nav-item"><a href="https://github.com/langnang/langnang" target="_blank" rel="noopener noreferrer" class="nav-link external">
  GitHub
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></div><div class="nav-item"><div class="dropdown-wrapper"><button type="button" aria-label="Langnang" class="dropdown-title"><span class="title">Langnang</span> <span class="arrow down"></span></button> <button type="button" aria-label="Langnang" class="mobile-dropdown-title"><span class="title">Langnang</span> <span class="arrow right"></span></button> <ul class="nav-dropdown" style="display:none;"><li class="dropdown-item"><!----> <a href="https://langnang.github.io/langnang" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Langnang
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li><li class="dropdown-item"><!----> <a href="https://langnang-temp.github.io/langnang-temp" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Templates
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li><li class="dropdown-item"><!----> <a href="https://langnang-package.github.io/langnang-package" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Packages
  <span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></div></div> <!----></nav>  <ul class="sidebar-links"><li><a href="/langnang/52040/5204010/" class="sidebar-link">软件理论</a></li><li><a href="/langnang/52040/5204020/" class="sidebar-link">操作系统与操作环境</a></li><li><a href="/langnang/52040/5204030/" class="sidebar-link">程序设计及其语言</a></li><li><a href="/langnang/52040/5204050/" class="sidebar-link">数据库</a></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading open"><span>软件开发环境与开发技术</span> <span class="arrow down"></span></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/langnang/52040/5204060/HTML/" class="sidebar-link">HTML</a></li><li><section class="sidebar-group collapsable is-sub-group depth-1"><a href="/langnang/52040/5204060/CSS/" class="sidebar-heading clickable"><span>CSS</span> <span class="arrow right"></span></a> <!----></section></li><li><section class="sidebar-group collapsable is-sub-group depth-1"><a href="/langnang/52040/5204060/JavaScript/" class="sidebar-heading clickable"><span>JavaScript</span> <span class="arrow right"></span></a> <!----></section></li><li><section class="sidebar-group collapsable is-sub-group depth-1"><a href="/langnang/52040/5204060/ECMAScript/ES6/" class="sidebar-heading clickable"><span>ES2015/ES6</span> <span class="arrow right"></span></a> <!----></section></li><li><section class="sidebar-group collapsable is-sub-group depth-1"><a href="/langnang/52040/5204060/NodeJs/" class="sidebar-heading clickable"><span>NodeJs</span> <span class="arrow right"></span></a> <!----></section></li><li><a href="/langnang/52040/5204060/React/" class="sidebar-link">React</a></li><li><section class="sidebar-group collapsable is-sub-group depth-1"><a href="/langnang/52040/5204060/Vue/" class="sidebar-heading clickable router-link-active open"><span>Vue</span> <span class="arrow down"></span></a> <ul class="sidebar-links sidebar-group-items"><li><section class="sidebar-group collapsable is-sub-group depth-2"><p class="sidebar-heading"><span>面试题</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable is-sub-group depth-2"><p class="sidebar-heading open"><span>参考手册</span> <span class="arrow down"></span></p> <ul class="sidebar-links sidebar-group-items"><li><section class="sidebar-group collapsable is-sub-group depth-3"><p class="sidebar-heading open"><span>Manual</span> <span class="arrow down"></span></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html" class="active sidebar-link">API — Vue.js</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#excerpt" class="sidebar-link">Excerpt</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#全局配置" class="sidebar-link">全局配置</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#全局-api" class="sidebar-link">全局 API</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#选项-数据" class="sidebar-link">选项 / 数据</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#选项-dom" class="sidebar-link">选项 / DOM</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#选项-生命周期钩子" class="sidebar-link">选项 / 生命周期钩子</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#选项-资源" class="sidebar-link">选项 / 资源</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#选项-组合" class="sidebar-link">选项 / 组合</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#选项-其它" class="sidebar-link">选项 / 其它</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#实例-property" class="sidebar-link">实例 property</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#实例方法-数据" class="sidebar-link">实例方法 / 数据</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#实例方法-事件" class="sidebar-link">实例方法 / 事件</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#实例方法-生命周期" class="sidebar-link">实例方法 / 生命周期</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#指令" class="sidebar-link">指令</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#特殊-attribute" class="sidebar-link">特殊 attribute</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#内置的组件" class="sidebar-link">内置的组件</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#vnode-接口" class="sidebar-link">VNode 接口</a></li><li class="sidebar-sub-header"><a href="/langnang/52040/5204060/Vue/Reference/Manual/API.html#服务端渲染" class="sidebar-link">服务端渲染</a></li></ul></li></ul></section></li></ul></section></li></ul></section></li><li><a href="/langnang/52040/5204060/TypeScript/" class="sidebar-link">TypeScript</a></li><li><a href="/langnang/52040/5204060/WeChat/" class="sidebar-link">小程序</a></li><li><section class="sidebar-group collapsable is-sub-group depth-1"><p class="sidebar-heading"><span>NPM Packages</span> <span class="arrow right"></span></p> <!----></section></li></ul></section></li><li><a href="/langnang/52040/5204070/" class="sidebar-link">软件工程</a></li></ul> </aside> <main class="page"> <div class="theme-default-content content__default"><h1 id="api-vue-js"><a href="#api-vue-js" class="header-anchor">#</a> API — Vue.js</h1> <blockquote><h2 id="excerpt"><a href="#excerpt" class="header-anchor">#</a> Excerpt</h2> <p>Vue.js - The Progressive JavaScript Framework</p></blockquote> <hr> <p>您在浏览的是 v2.x 及更早版本的文档。v3.x 的文档<a href="https://v3.cn.vuejs.org/" target="_blank" rel="noopener noreferrer">在这里<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</p> <h2 id="全局配置"><a href="#全局配置" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE" title="全局配置" target="_blank" rel="noopener noreferrer">全局配置<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <p><code>Vue.config</code> 是一个对象，包含 Vue 的全局配置。可以在启动应用之前修改下列 property：</p> <h3 id="silent"><a href="#silent" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#silent" title="silent" target="_blank" rel="noopener noreferrer">silent<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>默认值</strong>：<code>false</code></p></li> <li><p><strong>用法</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.config.silent = true
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>取消 Vue 所有的日志与警告。</p></li></ul> <h3 id="optionmergestrategies"><a href="#optionmergestrategies" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#optionMergeStrategies" title="optionMergeStrategies" target="_blank" rel="noopener noreferrer">optionMergeStrategies<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: Function }</code></p></li> <li><p><strong>默认值</strong>：<code>{}</code></p></li> <li><p><strong>用法</strong>：</p> <div class="language-js line-numbers-mode"><pre class="language-js"><code>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>optionMergeStrategies<span class="token punctuation">.</span><span class="token function-variable function">_my_option</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> child<span class="token punctuation">,</span> vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> child <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Profile <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">_my_option</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Profile.options._my_option = 2</span>
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>自定义合并策略的选项。</p> <p>合并策略选项分别接收在父实例和子实例上定义的该选项的值作为第一个和第二个参数，Vue 实例上下文被作为第三个参数传入。</p></li> <li><p><strong>参考</strong><a href="https://cn.vuejs.org/v2/guide/mixins.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%80%89%E9%A1%B9%E6%B7%B7%E5%85%A5%E7%AD%96%E7%95%A5" target="_blank" rel="noopener noreferrer">自定义选项的混入策略<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="devtools"><a href="#devtools" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#devtools" title="devtools" target="_blank" rel="noopener noreferrer">devtools<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>默认值</strong>：<code>true</code> (生产版为 <code>false</code>)</p></li> <li><p><strong>用法</strong>：</p> <div class="language-js line-numbers-mode"><pre class="language-js"><code><span class="token comment">// 务必在加载 Vue 之后，立即同步设置以下内容</span>
Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>devtools <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>配置是否允许 <a href="https://github.com/vuejs/vue-devtools" target="_blank" rel="noopener noreferrer">vue-devtools<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 检查代码。开发版本默认为 <code>true</code>，生产版本默认为 <code>false</code>。生产版本设为 <code>true</code> 可以启用检查。</p></li></ul> <h3 id="errorhandler"><a href="#errorhandler" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#errorHandler" title="errorHandler" target="_blank" rel="noopener noreferrer">errorHandler<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>默认值</strong>：<code>undefined</code></p></li> <li><p><strong>用法</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.config.errorHandler = function (err, vm, info) {
  // handle error
  // `info` 是 Vue 特定的错误信息，比如错误所在的生命周期钩子
  // 只在 2.2.0+ 可用
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>指定组件的渲染和观察期间未捕获错误的处理函数。这个处理函数被调用时，可获取错误信息和 Vue 实例。</p> <blockquote><p>从 2.2.0 起，这个钩子也会捕获组件生命周期钩子里的错误。同样的，当这个钩子是 <code>undefined</code> 时，被捕获的错误会通过 <code>console.error</code> 输出而避免应用崩溃。</p></blockquote> <blockquote><p>从 2.4.0 起，这个钩子也会捕获 Vue 自定义事件处理函数内部的错误了。</p></blockquote> <blockquote><p>从 2.6.0 起，这个钩子也会捕获 <code>v-on</code> DOM 监听器内部抛出的错误。另外，如果任何被覆盖的钩子或处理函数返回一个 Promise 链 (例如 async 函数)，则来自其 Promise 链的错误也会被处理。</p></blockquote> <blockquote><p>错误追踪服务 <a href="https://sentry.io/" target="_blank" rel="noopener noreferrer">Sentry<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 和 <a href="https://docs.bugsnag.com/platforms/browsers/vue/" target="_blank" rel="noopener noreferrer">Bugsnag<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 都通过此选项提供了官方支持。</p></blockquote></li></ul> <h3 id="warnhandler"><a href="#warnhandler" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#warnHandler" title="warnHandler" target="_blank" rel="noopener noreferrer">warnHandler<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.4.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>默认值</strong>：<code>undefined</code></p></li> <li><p><strong>用法</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.config.warnHandler = function (msg, vm, trace) {
  // `trace` 是组件的继承关系追踪
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>为 Vue 的运行时警告赋予一个自定义处理函数。注意这只会在开发者环境下生效，在生产环境下它会被忽略。</p></li></ul> <h3 id="ignoredelements"><a href="#ignoredelements" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#ignoredElements" title="ignoredElements" target="_blank" rel="noopener noreferrer">ignoredElements<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Array&lt;string | RegExp&gt;</code></p></li> <li><p><strong>默认值</strong>：<code>[]</code></p></li> <li><p><strong>用法</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.config.ignoredElements = [
  'my-custom-web-component',
  'another-web-component',
  // 用一个 `RegExp` 忽略所有“ion-”开头的元素
  // 仅在 2.5+ 支持
  /^ion-/
]
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>须使 Vue 忽略在 Vue 之外的自定义元素 (e.g. 使用了 Web Components APIs)。否则，它会假设你忘记注册全局组件或者拼错了组件名称，从而抛出一个关于 <code>Unknown custom element</code> 的警告。</p></li></ul> <h3 id="keycodes"><a href="#keycodes" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#keyCodes" title="keyCodes" target="_blank" rel="noopener noreferrer">keyCodes<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: number | Array&lt;number&gt; }</code></p></li> <li><p><strong>默认值</strong>：<code>{}</code></p></li> <li><p><strong>用法</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.config.keyCodes = {
  v: 86,
  f1: 112,
  // camelCase 不可用
  mediaPlayPause: 179,
  // 取而代之的是 kebab-case 且用双引号括起来
  &quot;media-play-pause&quot;: 179,
  up: [38, 87]
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;input type=&quot;text&quot; @keyup.media-play-pause=&quot;method&quot;&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>给 <code>v-on</code> 自定义键位别名。</p></li></ul> <h3 id="performance"><a href="#performance" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#performance" title="performance" target="_blank" rel="noopener noreferrer">performance<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.2.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>默认值</strong>：<code>false (自 2.2.3 起)</code></p></li> <li><p><strong>用法</strong>：</p> <p>设置为 <code>true</code> 以在浏览器开发工具的性能/时间线面板中启用对组件初始化、编译、渲染和打补丁的性能追踪。只适用于开发模式和支持 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark" target="_blank" rel="noopener noreferrer"><code>performance.mark</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> API 的浏览器上。</p></li></ul> <h3 id="productiontip"><a href="#productiontip" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#productionTip" title="productionTip" target="_blank" rel="noopener noreferrer">productionTip<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.2.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>默认值</strong>：<code>true</code></p></li> <li><p><strong>用法</strong>：</p> <p>设置为 <code>false</code> 以阻止 vue 在启动时生成生产提示。</p></li></ul> <h2 id="全局-api"><a href="#全局-api" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E5%85%A8%E5%B1%80-API" title="全局 API" target="_blank" rel="noopener noreferrer">全局 API<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="vue-extend-options"><a href="#vue-extend-options" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-extend" title="Vue.extend( options )" target="_blank" rel="noopener noreferrer">Vue.extend( options )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object} options</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>使用基础 Vue 构造器，创建一个“子类”。参数是一个包含组件选项的对象。</p> <p><code>data</code> 选项是特例，需要注意 - 在 <code>Vue.extend()</code> 中它必须是函数</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div id=&quot;mount-point&quot;&gt;&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>// 创建构造器
var Profile = Vue.extend({
  template: '&lt;p&gt;{{firstName}} {{lastName}} aka {{alias}}&lt;/p&gt;',
  data: function () {
    return {
      firstName: 'Walter',
      lastName: 'White',
      alias: 'Heisenberg'
    }
  }
})
// 创建 Profile 实例，并挂载到一个元素上。
new Profile().$mount('#mount-point')
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>结果如下：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;p&gt;Walter White aka Heisenberg&lt;/p&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components.html" target="_blank" rel="noopener noreferrer">组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-nexttick-callback-context"><a href="#vue-nexttick-callback-context" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-nextTick" title="Vue.nextTick( [callback, context] )" target="_blank" rel="noopener noreferrer">Vue.nextTick( [callback, context] )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Function} [callback]</code></li> <li><code>{Object} [context]</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 修改数据
vm.msg = 'Hello'
// DOM 还没有更新
Vue.nextTick(function () {
  // DOM 更新了
})

// 作为一个 Promise 使用 (2.1.0 起新增，详见接下来的提示)
Vue.nextTick()
  .then(function () {
    // DOM 更新了
  })
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>2.1.0 起新增：如果没有提供回调且在支持 Promise 的环境中，则返回一个 Promise。请注意 Vue 不自带 Promise 的 polyfill，所以如果你的目标浏览器不原生支持 Promise (IE：你们都看我干嘛)，你得自己提供 polyfill。</p></blockquote></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/reactivity.html#%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E9%98%9F%E5%88%97" target="_blank" rel="noopener noreferrer">异步更新队列<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-set-target-propertyname-index-value"><a href="#vue-set-target-propertyname-index-value" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-set" title="Vue.set( target, propertyName/index, value )" target="_blank" rel="noopener noreferrer">Vue.set( target, propertyName/index, value )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object | Array} target</code></li> <li><code>{string | number} propertyName/index</code></li> <li><code>{any} value</code></li></ul></li> <li><p><strong>返回值</strong>：设置的值。</p></li> <li><p><strong>用法</strong>：</p> <p>向响应式对象中添加一个 property，并确保这个新 property 同样是响应式的，且触发视图更新。它必须用于向响应式对象上添加新 property，因为 Vue 无法探测普通的新增 property (比如 <code>this.myObject.newProperty = 'hi'</code>)</p> <p>注意对象不能是 Vue 实例，或者 Vue 实例的根数据对象。</p></li></ul> <h3 id="vue-delete-target-propertyname-index"><a href="#vue-delete-target-propertyname-index" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-delete" title="Vue.delete( target, propertyName/index )" target="_blank" rel="noopener noreferrer">Vue.delete( target, propertyName/index )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object | Array} target</code></li> <li><code>{string | number} propertyName/index</code></li></ul> <blockquote><p>仅在 2.2.0+ 版本中支持 Array + index 用法。</p></blockquote></li> <li><p><strong>用法</strong>：</p> <p>删除对象的 property。如果对象是响应式的，确保删除能触发更新视图。这个方法主要用于避开 Vue 不能检测到 property 被删除的限制，但是你应该很少会使用它。</p> <blockquote><p>在 2.2.0+ 中同样支持在数组上工作。</p></blockquote> <p>目标对象不能是一个 Vue 实例或 Vue 实例的根数据对象。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/reactivity.html" target="_blank" rel="noopener noreferrer">深入响应式原理<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-directive-id-definition"><a href="#vue-directive-id-definition" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-directive" title="Vue.directive( id, [definition] )" target="_blank" rel="noopener noreferrer">Vue.directive( id, [definition] )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string} id</code></li> <li><code>{Function | Object} [definition]</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>注册或获取全局指令。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 注册
Vue.directive('my-directive', {
  bind: function () {},
  inserted: function () {},
  update: function () {},
  componentUpdated: function () {},
  unbind: function () {}
})

// 注册 (指令函数)
Vue.directive('my-directive', function () {
  // 这里将会被 `bind` 和 `update` 调用
})

// getter，返回已注册的指令
var myDirective = Vue.directive('my-directive')
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/custom-directive.html" target="_blank" rel="noopener noreferrer">自定义指令<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-filter-id-definition"><a href="#vue-filter-id-definition" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-filter" title="Vue.filter( id, [definition] )" target="_blank" rel="noopener noreferrer">Vue.filter( id, [definition] )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string} id</code></li> <li><code>{Function} [definition]</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>注册或获取全局过滤器。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 注册
Vue.filter('my-filter', function (value) {
  // 返回处理后的值
})

// getter，返回已注册的过滤器
var myFilter = Vue.filter('my-filter')
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/filters.html" target="_blank" rel="noopener noreferrer">过滤器<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-component-id-definition"><a href="#vue-component-id-definition" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-component" title="Vue.component( id, [definition] )" target="_blank" rel="noopener noreferrer">Vue.component( id, [definition] )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string} id</code></li> <li><code>{Function | Object} [definition]</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>注册或获取全局组件。注册还会自动使用给定的 <code>id</code> 设置组件的名称</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 注册组件，传入一个扩展过的构造器
Vue.component('my-component', Vue.extend({ /* ... */ }))

// 注册组件，传入一个选项对象 (自动调用 Vue.extend)
Vue.component('my-component', { /* ... */ })

// 获取注册的组件 (始终返回构造器)
var MyComponent = Vue.component('my-component')
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components.html" target="_blank" rel="noopener noreferrer">组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-use-plugin"><a href="#vue-use-plugin" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-use" title="Vue.use( plugin )" target="_blank" rel="noopener noreferrer">Vue.use( plugin )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object | Function} plugin</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>安装 Vue.js 插件。如果插件是一个对象，必须提供 <code>install</code> 方法。如果插件是一个函数，它会被作为 install 方法。install 方法调用时，会将 Vue 作为参数传入。</p> <p>该方法需要在调用 <code>new Vue()</code> 之前被调用。</p> <p>当 install 方法被同一个插件多次调用，插件将只会被安装一次。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/plugins.html" target="_blank" rel="noopener noreferrer">插件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-mixin-mixin"><a href="#vue-mixin-mixin" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-mixin" title="Vue.mixin( mixin )" target="_blank" rel="noopener noreferrer">Vue.mixin( mixin )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object} mixin</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>全局注册一个混入，影响注册之后所有创建的每个 Vue 实例。插件作者可以使用混入，向组件注入自定义的行为。<strong>不推荐在应用代码中使用</strong>。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/mixins.html#%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5" target="_blank" rel="noopener noreferrer">全局混入<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-compile-template"><a href="#vue-compile-template" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-compile" title="Vue.compile( template )" target="_blank" rel="noopener noreferrer">Vue.compile( template )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string} template</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>将一个模板字符串编译成 render 函数。<strong>只在完整版时可用</strong>。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var res = Vue.compile('&lt;div&gt;&lt;span&gt;{{ msg }}&lt;/span&gt;&lt;/div&gt;')

new Vue({
  data: {
    msg: 'hello'
  },
  render: res.render,
  staticRenderFns: res.staticRenderFns
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener noreferrer">渲染函数<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-observable-object"><a href="#vue-observable-object" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-observable" title="Vue.observable( object )" target="_blank" rel="noopener noreferrer">Vue.observable( object )<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.6.0 新增</p></blockquote> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object} object</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>让一个对象可响应。Vue 内部会用它来处理 <code>data</code> 函数返回的对象。</p> <p>返回的对象可以直接用于<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener noreferrer">渲染函数<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>和<a href="https://cn.vuejs.org/v2/guide/computed.html" target="_blank" rel="noopener noreferrer">计算属性<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>内，并且会在发生变更时触发相应的更新。也可以作为最小化的跨组件状态存储器，用于简单的场景：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>const state = Vue.observable({ count: 0 })

const Demo = {
  render(h) {
    return h('button', {
      on: { click: () =&gt; { state.count++ }}
    }, `count is: ${state.count}`)
  }
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在 Vue 2.x 中，被传入的对象会直接被 <code>Vue.observable</code> 变更，所以如<a href="https://cn.vuejs.org/v2/guide/instance.html#%E6%95%B0%E6%8D%AE%E4%B8%8E%E6%96%B9%E6%B3%95" target="_blank" rel="noopener noreferrer">这里展示的<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>，它和被返回的对象是同一个对象。在 Vue 3.x 中，则会返回一个可响应的代理，而对源对象直接进行变更仍然是不可响应的。因此，为了向前兼容，我们推荐始终操作使用 <code>Vue.observable</code> 返回的对象，而不是传入源对象。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/reactivity.html" target="_blank" rel="noopener noreferrer">深入响应式原理<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vue-version"><a href="#vue-version" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#Vue-version" title="Vue.version" target="_blank" rel="noopener noreferrer">Vue.version<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>细节</strong>：提供字符串形式的 Vue 安装版本号。这对社区的插件和组件来说非常有用，你可以根据不同的版本号采取不同的策略。</p></li> <li><p><strong>用法</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var version = Number(Vue.version.split('.')[0])

if (version === 2) {
  // Vue v2.x.x
} else if (version === 1) {
  // Vue v1.x.x
} else {
  // Unsupported versions of Vue
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul> <h2 id="选项-数据"><a href="#选项-数据" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E6%95%B0%E6%8D%AE" title="选项 / 数据" target="_blank" rel="noopener noreferrer">选项 / 数据<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="data"><a href="#data" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#data" title="data" target="_blank" rel="noopener noreferrer">data<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Object | Function</code></p></li> <li><p><strong>限制</strong>：组件的定义只接受 <code>function</code>。</p></li> <li><p><strong>详细</strong>：</p> <p>Vue 实例的数据对象。Vue 会递归地把 data 的 property 转换为 getter/setter，从而让 data 的 property 能够响应数据变化。<strong>对象必须是纯粹的对象 (含有零个或多个的 key/value 对)</strong>：浏览器 API 创建的原生对象，原型上的 property 会被忽略。大概来说，data 应该只能是数据 - 不推荐观察拥有状态行为的对象。</p> <p>一旦观察过，你就无法在根数据对象上添加响应式 property。因此推荐在创建实例之前，就声明所有的根级响应式 property。</p> <p>实例创建之后，可以通过 <code>vm.$data</code> 访问原始数据对象。Vue 实例也代理了 data 对象上所有的 property，因此访问 <code>vm.a</code> 等价于访问 <code>vm.$data.a</code>。</p> <p>以 <code>_</code> 或 <code>$</code> 开头的 property <strong>不会</strong>被 Vue 实例代理，因为它们可能和 Vue 内置的 property、API 方法冲突。你可以使用例如 <code>vm.$data._property</code> 的方式访问这些 property。</p> <p>当一个<strong>组件</strong>被定义，<code>data</code> 必须声明为返回一个初始数据对象的函数，因为组件可能被用来创建多个实例。如果 <code>data</code> 仍然是一个纯粹的对象，则所有的实例将<strong>共享引用</strong>同一个数据对象！通过提供 <code>data</code> 函数，每次创建一个新实例后，我们能够调用 <code>data</code> 函数，从而返回初始数据的一个全新副本数据对象。</p> <p>如果需要，可以通过将 <code>vm.$data</code> 传入 <code>JSON.parse(JSON.stringify(...))</code> 得到深拷贝的原始数据对象。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var data = { a: 1 }

// 直接创建一个实例
var vm = new Vue({
  data: data
})
vm.a // =&gt; 1
vm.$data === data // =&gt; true

// Vue.extend() 中 data 必须是函数
var Component = Vue.extend({
  data: function () {
    return { a: 1 }
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>注意，如果你为 <code>data</code> property 使用了箭头函数，则 <code>this</code> 不会指向这个组件的实例，不过你仍然可以将其实例作为函数的第一个参数来访问。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>data: vm =&gt; ({ a: vm.myProp })
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/reactivity.html" target="_blank" rel="noopener noreferrer">深入响应式原理<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="props"><a href="#props" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#props" title="props" target="_blank" rel="noopener noreferrer">props<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Array&lt;string&gt; | Object</code></p></li> <li><p><strong>详细</strong>：</p> <p>props 可以是数组或对象，用于接收来自父组件的数据。props 可以是简单的数组，或者使用对象作为替代，对象允许配置高级选项，如类型检测、自定义验证和设置默认值。</p> <p>你可以基于对象的语法使用以下选项：</p> <ul><li><code>type</code>：可以是下列原生构造函数中的一种：<code>String</code>、<code>Number</code>、<code>Boolean</code>、<code>Array</code>、<code>Object</code>、<code>Date</code>、<code>Function</code>、<code>Symbol</code>、任何自定义构造函数、或上述内容组成的数组。会检查一个 prop 是否是给定的类型，否则抛出警告。Prop 类型的<a href="https://cn.vuejs.org/v2/guide/components-props.html#Prop-%E7%B1%BB%E5%9E%8B" target="_blank" rel="noopener noreferrer">更多信息在此<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</li> <li><code>default</code>：<code>any</code><br>
为该 prop 指定一个默认值。如果该 prop 没有被传入，则换做用这个值。对象或数组的默认值必须从一个工厂函数返回。</li> <li><code>required</code>：<code>Boolean</code><br>
定义该 prop 是否是必填项。在非生产环境中，如果这个值为 truthy 且该 prop 没有被传入的，则一个控制台警告将会被抛出。</li> <li><code>validator</code>：<code>Function</code><br>
自定义验证函数会将该 prop 的值作为唯一的参数代入。在非生产环境下，如果该函数返回一个 falsy 的值 (也就是验证失败)，一个控制台警告将会被抛出。你可以在<a href="https://cn.vuejs.org/v2/guide/components-props.html#Prop-%E9%AA%8C%E8%AF%81" target="_blank" rel="noopener noreferrer">这里<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>查阅更多 prop 验证的相关信息。</li></ul></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 简单语法
Vue.component('props-demo-simple', {
  props: ['size', 'myMessage']
})

// 对象语法，提供验证
Vue.component('props-demo-advanced', {
  props: {
    // 检测类型
    height: Number,
    // 检测类型 + 其他验证
    age: {
      type: Number,
      default: 0,
      required: true,
      validator: function (value) {
        return value &gt;= 0
      }
    }
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components-props.html" target="_blank" rel="noopener noreferrer">Props<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="propsdata"><a href="#propsdata" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#propsData" title="propsData" target="_blank" rel="noopener noreferrer">propsData<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: any }</code></p></li> <li><p><strong>限制</strong>：只用于 <code>new</code> 创建的实例中。</p></li> <li><p><strong>详细</strong>：</p> <p>创建实例时传递 props。主要作用是方便测试。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var Comp = Vue.extend({
  props: ['msg'],
  template: '&lt;div&gt;{{ msg }}&lt;/div&gt;'
})

var vm = new Comp({
  propsData: {
    msg: 'hello'
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li></ul> <h3 id="computed"><a href="#computed" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#computed" title="computed" target="_blank" rel="noopener noreferrer">computed<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: Function | { get: Function, set: Function } }</code></p></li> <li><p><strong>详细</strong>：</p> <p>计算属性将被混入到 Vue 实例中。所有 getter 和 setter 的 this 上下文自动地绑定为 Vue 实例。</p> <p>注意如果你为一个计算属性使用了箭头函数，则 <code>this</code> 不会指向这个组件的实例，不过你仍然可以将其实例作为函数的第一个参数来访问。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>computed: {
  aDouble: vm =&gt; vm.a * 2
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>计算属性的结果会被缓存，除非依赖的响应式 property 变化才会重新计算。注意，如果某个依赖 (比如非响应式 property) 在该实例范畴之外，则计算属性是<strong>不会</strong>被更新的。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var vm = new Vue({
  data: { a: 1 },
  computed: {
    // 仅读取
    aDouble: function () {
      return this.a * 2
    },
    // 读取和设置
    aPlus: {
      get: function () {
        return this.a + 1
      },
      set: function (v) {
        this.a = v - 1
      }
    }
  }
})
vm.aPlus   // =&gt; 2
vm.aPlus = 3
vm.a       // =&gt; 2
vm.aDouble // =&gt; 4
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/computed.html" target="_blank" rel="noopener noreferrer">计算属性<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="methods"><a href="#methods" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#methods" title="methods" target="_blank" rel="noopener noreferrer">methods<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: Function }</code></p></li> <li><p><strong>详细</strong>：</p> <p>methods 将被混入到 Vue 实例中。可以直接通过 VM 实例访问这些方法，或者在指令表达式中使用。方法中的 <code>this</code> 自动绑定为 Vue 实例。</p> <p>注意，<strong>不应该使用箭头函数来定义 method 函数</strong> (例如 <code>plus: () =&gt; this.a++</code>)。理由是箭头函数绑定了父级作用域的上下文，所以 <code>this</code> 将不会按照期望指向 Vue 实例，<code>this.a</code> 将是 undefined。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var vm = new Vue({
  data: { a: 1 },
  methods: {
    plus: function () {
      this.a++
    }
  }
})
vm.plus()
vm.a // 2
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/events.html" target="_blank" rel="noopener noreferrer">事件处理器<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="watch"><a href="#watch" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#watch" title="watch" target="_blank" rel="noopener noreferrer">watch<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: string | Function | Object | Array }</code></p></li> <li><p><strong>详细</strong>：</p> <p>一个对象，键是需要观察的表达式，值是对应回调函数。值也可以是方法名，或者包含选项的对象。Vue 实例将会在实例化时调用 <code>$watch()</code>，遍历 watch 对象的每一个 property。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var vm = new Vue({
  data: {
    a: 1,
    b: 2,
    c: 3,
    d: 4,
    e: {
      f: {
        g: 5
      }
    }
  },
  watch: {
    a: function (val, oldVal) {
      console.log('new: %s, old: %s', val, oldVal)
    },
    // 方法名
    b: 'someMethod',
    // 该回调会在任何被侦听的对象的 property 改变时被调用，不论其被嵌套多深
    c: {
      handler: function (val, oldVal) { /* ... */ },
      deep: true
    },
    // 该回调将会在侦听开始之后被立即调用
    d: {
      handler: 'someMethod',
      immediate: true
    },
    // 你可以传入回调数组，它们会被逐一调用
    e: [
      'handle1',
      function handle2 (val, oldVal) { /* ... */ },
      {
        handler: function handle3 (val, oldVal) { /* ... */ },
        /* ... */
      }
    ],
    // watch vm.e.f's value: {g: 5}
    'e.f': function (val, oldVal) { /* ... */ }
  }
})
vm.a = 2 // =&gt; new: 2, old: 1
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>注意，<strong>不应该使用箭头函数来定义 watcher 函数</strong> (例如 <code>searchQuery: newValue =&gt; this.updateAutocomplete(newValue)</code>)。理由是箭头函数绑定了父级作用域的上下文，所以 <code>this</code> 将不会按照期望指向 Vue 实例，<code>this.updateAutocomplete</code> 将是 undefined。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/api/#vm-watch" target="_blank" rel="noopener noreferrer">实例方法 / 数据 - vm.$watch<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h2 id="选项-dom"><a href="#选项-dom" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-DOM" title="选项 / DOM" target="_blank" rel="noopener noreferrer">选项 / DOM<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="el"><a href="#el" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#el" title="el" target="_blank" rel="noopener noreferrer">el<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>string | Element</code></p></li> <li><p><strong>限制</strong>：只在用 <code>new</code> 创建实例时生效。</p></li> <li><p><strong>详细</strong>：</p> <p>提供一个在页面上已存在的 DOM 元素作为 Vue 实例的挂载目标。可以是 CSS 选择器，也可以是一个 HTMLElement 实例。</p> <p>在实例挂载之后，元素可以用 <code>vm.$el</code> 访问。</p> <p>如果在实例化时存在这个选项，实例将立即进入编译过程，否则，需要显式调用 <code>vm.$mount()</code> 手动开启编译。</p> <p>提供的元素只能作为挂载点。不同于 Vue 1.x，所有的挂载元素会被 Vue 生成的 DOM 替换。因此不推荐挂载 root 实例到 <code>&lt;html&gt;</code> 或者 <code>&lt;body&gt;</code> 上。</p> <p>如果 <code>render</code> 函数和 <code>template</code> property 都不存在，挂载 DOM 元素的 HTML 会被提取出来用作模板，此时，必须使用 Runtime + Compiler 构建的 Vue 库。</p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6" target="_blank" rel="noopener noreferrer">运行时 + 编译器 vs. 只包含运行时<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="template"><a href="#template" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#template" title="template" target="_blank" rel="noopener noreferrer">template<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>string</code></p></li> <li><p><strong>详细</strong>：</p> <p>一个字符串模板作为 Vue 实例的标识使用。模板将会<strong>替换</strong>挂载的元素。挂载元素的内容都将被忽略，除非模板的内容有分发插槽。</p> <p>如果值以 <code>#</code> 开始，则它将被用作选择符，并使用匹配元素的 innerHTML 作为模板。常用的技巧是用 <code>&lt;script type=&quot;x-template&quot;&gt;</code> 包含模板。</p> <p>出于安全考虑，你应该只使用你信任的 Vue 模板。避免使用其他人生成的内容作为你的模板。</p> <p>如果 Vue 选项中包含渲染函数，该模板将被忽略。</p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87%E6%8F%92%E6%A7%BD%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9" target="_blank" rel="noopener noreferrer">通过插槽分发内容<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="render"><a href="#render" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#render" title="render" target="_blank" rel="noopener noreferrer">render<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>(createElement: () =&gt; VNode) =&gt; VNode</code></p></li> <li><p><strong>详细</strong>：</p> <p>字符串模板的代替方案，允许你发挥 JavaScript 最大的编程能力。该渲染函数接收一个 <code>createElement</code> 方法作为第一个参数用来创建 <code>VNode</code>。</p> <p>如果组件是一个函数组件，渲染函数还会接收一个额外的 <code>context</code> 参数，为没有实例的函数组件提供上下文信息。</p> <p>Vue 选项中的 <code>render</code> 函数若存在，则 Vue 构造函数不会从 <code>template</code> 选项或通过 <code>el</code> 选项指定的挂载元素中提取出的 HTML 模板编译渲染函数。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener noreferrer">渲染函数<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="rendererror"><a href="#rendererror" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#renderError" title="renderError" target="_blank" rel="noopener noreferrer">renderError<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.2.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>(createElement: () =&gt; VNode, error: Error) =&gt; VNode</code></p></li> <li><p><strong>详细</strong>：</p> <p><strong>只在开发者环境下工作。</strong></p> <p>当 <code>render</code> 函数遭遇错误时，提供另外一种渲染输出。其错误将会作为第二个参数传递到 <code>renderError</code>。这个功能配合 hot-reload 非常实用。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>new Vue({
  render (h) {
    throw new Error('oops')
  },
  renderError (h, err) {
    return h('pre', { style: { color: 'red' }}, err.stack)
  }
}).$mount('#app')
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener noreferrer">渲染函数<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h2 id="选项-生命周期钩子"><a href="#选项-生命周期钩子" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90" title="选项 / 生命周期钩子" target="_blank" rel="noopener noreferrer">选项 / 生命周期钩子<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <p>所有生命周期钩子的 <code>this</code> 上下文将自动绑定至实例中，因此你可以访问 data、computed 和 methods。这意味着<strong>你不应该使用箭头函数来定义一个生命周期方法</strong> (例如 <code>created: () =&gt; this.fetchTodos()</code>)。因为箭头函数绑定了父级上下文，所以 <code>this</code> 不会指向预期的组件实例，并且<code>this.fetchTodos</code> 将会是 undefined。</p> <p><img src="https://cn.vuejs.org/images/lifecycle.png" alt="Vue 实例生命周期"></p> <h3 id="beforecreate"><a href="#beforecreate" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#beforeCreate" title="beforeCreate" target="_blank" rel="noopener noreferrer">beforeCreate<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>在实例初始化之后,进行数据侦听和事件/侦听器的配置之前同步调用。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="created"><a href="#created" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#created" title="created" target="_blank" rel="noopener noreferrer">created<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>在实例创建完成后被立即同步调用。在这一步中，实例已完成对选项的处理，意味着以下内容已被配置完毕：数据侦听、计算属性、方法、事件/侦听器的回调函数。然而，挂载阶段还没开始，且 <code>$el</code> property 目前尚不可用。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="beforemount"><a href="#beforemount" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#beforeMount" title="beforeMount" target="_blank" rel="noopener noreferrer">beforeMount<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>在挂载开始之前被调用：相关的 <code>render</code> 函数首次被调用。</p> <p><strong>该钩子在服务器端渲染期间不被调用。</strong></p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="mounted"><a href="#mounted" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#mounted" title="mounted" target="_blank" rel="noopener noreferrer">mounted<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>实例被挂载后调用，这时 <code>el</code> 被新创建的 <code>vm.$el</code> 替换了。如果根实例挂载到了一个文档内的元素上，当 <code>mounted</code> 被调用时 <code>vm.$el</code> 也在文档内。</p> <p>注意 <code>mounted</code> <strong>不会</strong>保证所有的子组件也都被挂载完成。如果你希望等到整个视图都渲染完毕再执行某些操作，可以在 <code>mounted</code> 内部使用 <a href="https://cn.vuejs.org/v2/api/#vm-nextTick" target="_blank" rel="noopener noreferrer">vm.$nextTick<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>mounted: function () {
  this.$nextTick(function () {
    // 仅在整个视图都被渲染之后才会运行的代码
  })
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>该钩子在服务器端渲染期间不被调用。</strong></p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="beforeupdate"><a href="#beforeupdate" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#beforeUpdate" title="beforeUpdate" target="_blank" rel="noopener noreferrer">beforeUpdate<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>在数据发生改变后，DOM 被更新之前被调用。这里适合在现有 DOM 将要被更新之前访问它，比如移除手动添加的事件监听器。</p> <p><strong>该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务器端进行。</strong></p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="updated"><a href="#updated" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#updated" title="updated" target="_blank" rel="noopener noreferrer">updated<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>在数据更改导致的虚拟 DOM 重新渲染和更新完毕之后被调用。</p> <p>当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用<a href="https://cn.vuejs.org/v2/api/#computed" target="_blank" rel="noopener noreferrer">计算属性<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>或 <a href="https://cn.vuejs.org/v2/api/#watch" target="_blank" rel="noopener noreferrer">watcher<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 取而代之。</p> <p>注意，<code>updated</code> <strong>不会</strong>保证所有的子组件也都被重新渲染完毕。如果你希望等到整个视图都渲染完毕，可以在 <code>updated</code> 里使用 <a href="https://cn.vuejs.org/v2/api/#vm-nextTick" target="_blank" rel="noopener noreferrer">vm.$nextTick<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>updated: function () {
  this.$nextTick(function () {
    //  仅在整个视图都被重新渲染之后才会运行的代码
  })
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>该钩子在服务器端渲染期间不被调用。</strong></p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="activated"><a href="#activated" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#activated" title="activated" target="_blank" rel="noopener noreferrer">activated<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>被 keep-alive 缓存的组件激活时调用。</p> <p><strong>该钩子在服务器端渲染期间不被调用。</strong></p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/api/#keep-alive" target="_blank" rel="noopener noreferrer">构建组件 - keep-alive<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%9C%A8%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-keep-alive" target="_blank" rel="noopener noreferrer">动态组件 - keep-alive<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="deactivated"><a href="#deactivated" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#deactivated" title="deactivated" target="_blank" rel="noopener noreferrer">deactivated<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>被 keep-alive 缓存的组件失活时调用。</p> <p><strong>该钩子在服务器端渲染期间不被调用。</strong></p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/api/#keep-alive" target="_blank" rel="noopener noreferrer">构建组件 - keep-alive<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%9C%A8%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-keep-alive" target="_blank" rel="noopener noreferrer">动态组件 - keep-alive<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="beforedestroy"><a href="#beforedestroy" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#beforeDestroy" title="beforeDestroy" target="_blank" rel="noopener noreferrer">beforeDestroy<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>实例销毁之前调用。在这一步，实例仍然完全可用。</p> <p><strong>该钩子在服务器端渲染期间不被调用。</strong></p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="destroyed"><a href="#destroyed" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#destroyed" title="destroyed" target="_blank" rel="noopener noreferrer">destroyed<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>实例销毁后调用。该钩子被调用后，对应 Vue 实例的所有指令都被解绑，所有的事件监听器被移除，所有的子实例也都被销毁。</p> <p><strong>该钩子在服务器端渲染期间不被调用。</strong></p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="errorcaptured"><a href="#errorcaptured" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#errorCaptured" title="errorCaptured" target="_blank" rel="noopener noreferrer">errorCaptured<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.5.0+ 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>(err: Error, vm: Component, info: string) =&gt; ?boolean</code></p></li> <li><p><strong>详细</strong>：</p> <p>在捕获一个来自后代组件的错误时被调用。此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 <code>false</code> 以阻止该错误继续向上传播。</p> <p>你可以在此钩子中修改组件的状态。因此在捕获错误时，在模板或渲染函数中有一个条件判断来绕过其它内容就很重要；不然该组件可能会进入一个无限的渲染循环。</p> <p><strong>错误传播规则</strong></p> <ul><li>默认情况下，如果全局的 <code>config.errorHandler</code> 被定义，所有的错误仍会发送它，因此这些错误仍然会向单一的分析服务的地方进行汇报。</li> <li>如果一个组件的 inheritance chain (继承链)或 parent chain (父链)中存在多个 <code>errorCaptured</code> 钩子，则它们将会被相同的错误逐个唤起。</li> <li>如果此 <code>errorCaptured</code> 钩子自身抛出了一个错误，则这个新错误和原本被捕获的错误都会发送给全局的 <code>config.errorHandler</code>。</li> <li>一个 <code>errorCaptured</code> 钩子能够返回 <code>false</code> 以阻止错误继续向上传播。本质上是说“这个错误已经被搞定了且应该被忽略”。它会阻止其它任何会被这个错误唤起的 <code>errorCaptured</code> 钩子和全局的 <code>config.errorHandler</code>。</li></ul></li></ul> <h2 id="选项-资源"><a href="#选项-资源" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E8%B5%84%E6%BA%90" title="选项 / 资源" target="_blank" rel="noopener noreferrer">选项 / 资源<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="directives"><a href="#directives" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#directives" title="directives" target="_blank" rel="noopener noreferrer">directives<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><strong>类型</strong>：<code>Object</code></li> <li><strong>详细</strong>：</li></ul> <p>包含 Vue 实例可用指令的哈希表。</p> <ul><li><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/custom-directive.html" target="_blank" rel="noopener noreferrer">自定义指令<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul> <h3 id="filters"><a href="#filters" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#filters" title="filters" target="_blank" rel="noopener noreferrer">filters<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><strong>类型</strong>：<code>Object</code></li> <li><strong>详细</strong>：</li></ul> <p>包含 Vue 实例可用过滤器的哈希表。</p> <ul><li><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/api/#Vue-filter" target="_blank" rel="noopener noreferrer"><code>Vue.filter</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul> <h3 id="components"><a href="#components" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#components" title="components" target="_blank" rel="noopener noreferrer">components<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><strong>类型</strong>：<code>Object</code></li> <li><strong>详细</strong>：</li></ul> <p>包含 Vue 实例可用组件的哈希表。</p> <ul><li><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components.html" target="_blank" rel="noopener noreferrer">组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul> <h2 id="选项-组合"><a href="#选项-组合" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%BB%84%E5%90%88" title="选项 / 组合" target="_blank" rel="noopener noreferrer">选项 / 组合<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="parent"><a href="#parent" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#parent" title="parent" target="_blank" rel="noopener noreferrer">parent<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Vue instance</code></p></li> <li><p><strong>详细</strong>：</p> <p>指定已创建的实例之父实例，在两者之间建立父子关系。子实例可以用 <code>this.$parent</code> 访问父实例，子实例被推入父实例的 <code>$children</code> 数组中。</p> <p>节制地使用 <code>$parent</code> 和 <code>$children</code> - 它们的主要目的是作为访问组件的应急方法。更推荐用 props 和 events 实现父子组件通信</p></li></ul> <h3 id="mixins"><a href="#mixins" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#mixins" title="mixins" target="_blank" rel="noopener noreferrer">mixins<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Array&lt;Object&gt;</code></p></li> <li><p><strong>详细</strong>：</p> <p><code>mixins</code> 选项接收一个混入对象的数组。这些混入对象可以像正常的实例对象一样包含实例选项，这些选项将会被合并到最终的选项中，使用的是和 <code>Vue.extend()</code> 一样的选项合并逻辑。也就是说，如果你的混入包含一个 created 钩子，而创建组件本身也有一个，那么两个函数都会被调用。</p> <p>Mixin 钩子按照传入顺序依次调用，并在调用组件自身的钩子之前被调用。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var mixin = {
  created: function () { console.log(1) }
}
var vm = new Vue({
  created: function () { console.log(2) },
  mixins: [mixin]
})
// =&gt; 1
// =&gt; 2
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/mixins.html" target="_blank" rel="noopener noreferrer">混入<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="extends"><a href="#extends" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#extends" title="extends" target="_blank" rel="noopener noreferrer">extends<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Object | Function</code></p></li> <li><p><strong>详细</strong>：</p> <p>允许声明扩展另一个组件 (可以是一个简单的选项对象或构造函数)，而无需使用 <code>Vue.extend</code>。这主要是为了便于扩展单文件组件。</p> <p>这和 <code>mixins</code> 类似。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var CompA = { ... }

// 在没有调用 `Vue.extend` 时候继承 CompA
var CompB = {
  extends: CompA,
  ...
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul> <h3 id="provide-inject"><a href="#provide-inject" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#provide-inject" title="provide / inject" target="_blank" rel="noopener noreferrer">provide / inject<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.2.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：</p> <ul><li><strong>provide</strong>：<code>Object | () =&gt; Object</code></li> <li><strong>inject</strong>：<code>Array&lt;string&gt; | { [key: string]: string | Symbol | Object }</code></li></ul></li> <li><p><strong>详细</strong>：</p> <p>这对选项需要一起使用，以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在其上下游关系成立的时间里始终生效。如果你熟悉 React，这与 React 的上下文特性很相似。</p> <p><code>provide</code> 选项应该是一个对象或返回一个对象的函数。该对象包含可注入其子孙的 property。在该对象中你可以使用 ES2015 Symbols 作为 key，但是只在原生支持 <code>Symbol</code> 和 <code>Reflect.ownKeys</code> 的环境下可工作。</p> <p><code>inject</code> 选项应该是：</p> <ul><li>一个字符串数组，或</li> <li>一个对象，对象的 key 是本地的绑定名，value 是：
<ul><li>在可用的注入内容中搜索用的 key (字符串或 Symbol)，或</li> <li>一个对象，该对象的：
<ul><li><code>from</code> property 是在可用的注入内容中搜索用的 key (字符串或 Symbol)</li> <li><code>default</code> property 是降级情况下使用的 value</li></ul></li></ul></li></ul> <blockquote><p>提示：<code>provide</code> 和 <code>inject</code> 绑定并不是可响应的。这是刻意为之的。然而，如果你传入了一个可监听的对象，那么其对象的 property 还是可响应的。</p></blockquote></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 父级组件提供 'foo'
var Provider = {
  provide: {
    foo: 'bar'
  },
  // ...
}

// 子组件注入 'foo'
var Child = {
  inject: ['foo'],
  created () {
    console.log(this.foo) // =&gt; &quot;bar&quot;
  }
  // ...
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>利用 ES2015 Symbols、函数 <code>provide</code> 和对象 <code>inject</code>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>const s = Symbol()

const Provider = {
  provide () {
    return {
      [s]: 'foo'
    }
  }
}

const Child = {
  inject: { s },
  // ...
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p>接下来 2 个例子只工作在 Vue 2.2.1 或更高版本。低于这个版本时，注入的值会在 <code>props</code> 和 <code>data</code> 初始化之后得到。</p></blockquote> <p>使用一个注入的值作为一个 property 的默认值：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>const Child = {
  inject: ['foo'],
  props: {
    bar: {
      default () {
        return this.foo
      }
    }
  }
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>使用一个注入的值作为数据入口：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>const Child = {
  inject: ['foo'],
  data () {
    return {
      bar: this.foo
    }
  }
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>在 2.5.0+ 的注入可以通过设置默认值使其变成可选项：</p></blockquote> <div class="language- line-numbers-mode"><pre class="language-text"><code>const Child = {
  inject: {
    foo: { default: 'foo' }
  }
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>如果它需要从一个不同名字的 property 注入，则使用 <code>from</code> 来表示其源 property：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>const Child = {
  inject: {
    foo: {
      from: 'bar',
      default: 'foo'
    }
  }
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>与 prop 的默认值类似，你需要对非原始值使用一个工厂方法：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>const Child = {
  inject: {
    foo: {
      from: 'bar',
      default: () =&gt; [1, 2, 3]
    }
  }
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul> <h2 id="选项-其它"><a href="#选项-其它" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E5%85%B6%E5%AE%83" title="选项 / 其它" target="_blank" rel="noopener noreferrer">选项 / 其它<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="name"><a href="#name" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#name" title="name" target="_blank" rel="noopener noreferrer">name<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>string</code></p></li> <li><p><strong>限制</strong>：只有作为组件选项时起作用。</p></li> <li><p><strong>详细</strong>：</p> <p>允许组件模板递归地调用自身。注意，组件在全局用 <code>Vue.component()</code> 注册时，全局 ID 自动作为组件的 name。</p> <p>指定 <code>name</code> 选项的另一个好处是便于调试。有名字的组件有更友好的警告信息。另外，当在有 <a href="https://github.com/vuejs/vue-devtools" target="_blank" rel="noopener noreferrer">vue-devtools<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>，未命名组件将显示成 <code>&lt;AnonymousComponent&gt;</code>，这很没有语义。通过提供 <code>name</code> 选项，可以获得更有语义信息的组件树。</p></li></ul> <h3 id="delimiters"><a href="#delimiters" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#delimiters" title="delimiters" target="_blank" rel="noopener noreferrer">delimiters<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>Array&lt;string&gt;</code></p></li> <li><p><strong>默认值</strong>：<code>[&quot;, &quot;]</code></p></li> <li><p><strong>限制</strong>：这个选项只在完整构建版本中的浏览器内编译时可用。</p></li> <li><p><strong>详细</strong>：</p> <p>改变纯文本插入分隔符。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>new Vue({
  delimiters: ['${', '}']
})

// 分隔符变成了 ES6 模板字符串的风格
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul> <h3 id="functional"><a href="#functional" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#functional" title="functional" target="_blank" rel="noopener noreferrer">functional<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>详细</strong>：</p> <p>使组件无状态 (没有 <code>data</code>) 和无实例 (没有 <code>this</code> 上下文)。他们用一个简单的 <code>render</code> 函数返回虚拟节点使它们渲染的代价更小。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/render-function.html#%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">函数式组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="model"><a href="#model" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#model" title="model" target="_blank" rel="noopener noreferrer">model<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.2.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>{ prop?: string, event?: string }</code></p></li> <li><p><strong>详细</strong>：</p> <p>允许一个自定义组件在使用 <code>v-model</code> 时定制 prop 和 event。默认情况下，一个组件上的 <code>v-model</code> 会把 <code>value</code> 用作 prop 且把 <code>input</code> 用作 event，但是一些输入类型比如单选框和复选框按钮可能想使用 <code>value</code> prop 来达到不同的目的。使用 <code>model</code> 选项可以回避这些情况产生的冲突。</p></li> <li><p><strong>Example</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.component('my-checkbox', {
  model: {
    prop: 'checked',
    event: 'change'
  },
  props: {
    // this allows using the `value` prop for a different purpose
    value: String,
    // use `checked` as the prop which take the place of `value`
    checked: {
      type: Number,
      default: 0
    }
  },
  // ...
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;my-checkbox v-model=&quot;foo&quot; value=&quot;some value&quot;&gt;&lt;/my-checkbox&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>上述代码相当于：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;my-checkbox
  :checked=&quot;foo&quot;
  @change=&quot;val =&gt; { foo = val }&quot;
  value=&quot;some value&quot;&gt;
&lt;/my-checkbox&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul> <h3 id="inheritattrs"><a href="#inheritattrs" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#inheritAttrs" title="inheritAttrs" target="_blank" rel="noopener noreferrer">inheritAttrs<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.4.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>默认值</strong>：<code>true</code></p></li> <li><p><strong>详细</strong>：</p> <p>默认情况下父作用域的不被认作 props 的 attribute 绑定 (attribute bindings) 将会“回退”且作为普通的 HTML attribute 应用在子组件的根元素上。当撰写包裹一个目标元素或另一个组件的组件时，这可能不会总是符合预期行为。通过设置 <code>inheritAttrs</code> 到 <code>false</code>，这些默认行为将会被去掉。而通过 (同样是 2.4 新增的) 实例 property <code>$attrs</code> 可以让这些 attribute 生效，且可以通过 <code>v-bind</code> 显性的绑定到非根元素上。</p> <p>注意：这个选项<strong>不影响</strong> <code>class</code> 和 <code>style</code> 绑定。</p></li></ul> <blockquote><p>2.4.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>默认值</strong>：<code>false</code></p></li> <li><p><strong>限制</strong>：这个选项只在完整构建版本中的浏览器内编译时可用。</p></li> <li><p><strong>详细</strong>：</p> <p>当设为 <code>true</code> 时，将会保留且渲染模板中的 HTML 注释。默认行为是舍弃它们。</p></li></ul> <h2 id="实例-property"><a href="#实例-property" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B-property" title="实例 property" target="_blank" rel="noopener noreferrer">实例 property<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="vm-data"><a href="#vm-data" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="d"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>data&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>Object</code></p></li> <li><p><strong>详细</strong>：</p> <p>Vue 实例观察的数据对象。Vue 实例代理了对其 data 对象 property 的访问。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/api/#data" target="_blank" rel="noopener noreferrer">选项 / 数据 - data<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vm-props"><a href="#vm-props" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="p"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>props&quot;)</h3> <blockquote><p>2.2.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>Object</code></p></li> <li><p><strong>详细</strong>：</p> <p>当前组件接收到的 props 对象。Vue 实例代理了对其 props 对象 property 的访问。</p></li></ul> <h3 id="vm-el"><a href="#vm-el" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="e"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>el&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>Element</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>Vue 实例使用的根 DOM 元素。</p></li></ul> <h3 id="vm-options"><a href="#vm-options" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>options&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>Object</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>用于当前 Vue 实例的初始化选项。需要在选项中包含自定义 property 时会有用处：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>new Vue({
  customOption: 'foo',
  created: function () {
    console.log(this.$options.customOption) // =&gt; 'foo'
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul> <h3 id="vm-parent"><a href="#vm-parent" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="p"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>parent&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>Vue instance</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>父实例，如果当前实例有的话。</p></li></ul> <h3 id="vm-root"><a href="#vm-root" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>root&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>Vue instance</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>当前组件树的根 Vue 实例。如果当前实例没有父实例，此实例将会是其自己。</p></li></ul> <h3 id="vm-children"><a href="#vm-children" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="c"></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>children&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>Array&lt;Vue instance&gt;</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>当前实例的直接子组件。**需要注意 <code>$children</code> 并不保证顺序，也不是响应式的。**如果你发现自己正在尝试使用 <code>$children</code> 来进行数据绑定，考虑使用一个数组配合 <code>v-for</code> 来生成子组件，并且使用 Array 作为真正的来源。</p></li></ul> <h3 id="vm-slots"><a href="#vm-slots" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="s"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>slots&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>{ [name: string]: ?Array&lt;VNode&gt; }</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>响应性</strong>：否</p></li> <li><p><strong>详细</strong>：</p> <p>用来访问被<a href="https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87%E6%8F%92%E6%A7%BD%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9" target="_blank" rel="noopener noreferrer">插槽分发<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>的内容。每个<a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E5%85%B7%E5%90%8D%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">具名插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>有其相应的 property (例如：<code>v-slot:foo</code> 中的内容将会在 <code>vm.$slots.foo</code> 中被找到)。<code>default</code> property 包括了所有没有被包含在具名插槽中的节点，或 <code>v-slot:default</code> 的内容。</p> <p>请注意插槽<strong>不是</strong>响应性的。如果你需要一个组件可以在被传入的数据发生变化时重渲染，我们建议改变策略，依赖诸如 <code>props</code> 或 <code>data</code> 等响应性实例选项。</p> <p><strong>注意：</strong><code>v-slot:foo</code> 在 2.6 以上的版本才支持。对于之前的版本，你可以使用<a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E5%BA%9F%E5%BC%83%E4%BA%86%E7%9A%84%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener noreferrer">废弃了的语法<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</p> <p>在使用<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener noreferrer">渲染函数<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>书写一个组件时，访问 <code>vm.$slots</code> 最有帮助。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;blog-post&gt;
  &lt;template v-slot:header&gt;
    &lt;h1&gt;About Me&lt;/h1&gt;
  &lt;/template&gt;

  &lt;p&gt;Here's some page content, which will be included in vm.$slots.default, because it's not inside a named slot.&lt;/p&gt;

  &lt;template v-slot:footer&gt;
    &lt;p&gt;Copyright 2016 Evan You&lt;/p&gt;
  &lt;/template&gt;

  &lt;p&gt;If I have some content down here, it will also be included in vm.$slots.default.&lt;/p&gt;.
&lt;/blog-post&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.component('blog-post', {
  render: function (createElement) {
    var header = this.$slots.header
    var body   = this.$slots.default
    var footer = this.$slots.footer
    return createElement('div', [
      createElement('header', header),
      createElement('main', body),
      createElement('footer', footer)
    ])
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/api/#slot" target="_blank" rel="noopener noreferrer"><code>&lt;slot&gt;</code> 组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87%E6%8F%92%E6%A7%BD%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9" target="_blank" rel="noopener noreferrer">通过插槽分发内容<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/render-function.html#%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">渲染函数 - 插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="vm-scopedslots"><a href="#vm-scopedslots" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="s"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="S"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="S"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>scopedSlots&quot;)</h3> <blockquote><p>2.1.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>{ [name: string]: props =&gt; Array&lt;VNode&gt; | undefined }</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>用来访问<a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">作用域插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。对于包括 <code>默认 slot</code> 在内的每一个插槽，该对象都包含一个返回相应 VNode 的函数。</p> <p><code>vm.$scopedSlots</code> 在使用<a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener noreferrer">渲染函数<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>开发一个组件时特别有用。</p> <p><strong>注意</strong>：从 2.6.0 开始，这个 property 有两个变化：</p> <ol><li>作用域插槽函数现在保证返回一个 VNode 数组，除非在返回值无效的情况下返回 <code>undefined</code>。</li> <li>所有的 <code>$slots</code> 现在都会作为函数暴露在 <code>$scopedSlots</code> 中。如果你在使用渲染函数，不论当前插槽是否带有作用域，我们都推荐始终通过 <code>$scopedSlots</code> 访问它们。这不仅仅使得在未来添加作用域变得简单，也可以让你最终轻松迁移到所有插槽都是函数的 Vue 3。</li></ol></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/api/#slot" target="_blank" rel="noopener noreferrer"><code>&lt;slot&gt;</code> 组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">作用域插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/render-function.html#%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">渲染函数 - 插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="vm-refs"><a href="#vm-refs" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="r"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="f"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="f"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>refs&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>Object</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>一个对象，持有注册过 <a href="https://cn.vuejs.org/v2/api/#ref" target="_blank" rel="noopener noreferrer"><code>ref</code> attribute<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 的所有 DOM 元素和组件实例。</p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/components-edge-cases.html#%E8%AE%BF%E9%97%AE%E5%AD%90%E7%BB%84%E4%BB%B6%E5%AE%9E%E4%BE%8B%E6%88%96%E5%AD%90%E5%85%83%E7%B4%A0" target="_blank" rel="noopener noreferrer">子组件 ref<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/api/#ref" target="_blank" rel="noopener noreferrer">特殊 attribute - ref<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="vm-isserver"><a href="#vm-isserver" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="i"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="S"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="S"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>isServer&quot;)</h3> <ul><li><p><strong>类型</strong>：<code>boolean</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>当前 Vue 实例是否运行于服务器。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/ssr.html" target="_blank" rel="noopener noreferrer">服务端渲染<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vm-attrs"><a href="#vm-attrs" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>attrs&quot;)</h3> <blockquote><p>2.4.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: string }</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>包含了父作用域中不作为 prop 被识别 (且获取) 的 attribute 绑定 (<code>class</code> 和 <code>style</code> 除外)。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定 (<code>class</code> 和 <code>style</code> 除外)，并且可以通过 <code>v-bind=&quot;$attrs&quot;</code> 传入内部组件——在创建高级别的组件时非常有用。</p></li></ul> <h3 id="vm-listeners"><a href="#vm-listeners" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="l"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>listeners&quot;)</h3> <blockquote><p>2.4.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>{ [key: string]: Function | Array&lt;Function&gt; }</code></p></li> <li><p><strong>只读</strong></p></li> <li><p><strong>详细</strong>：</p> <p>包含了父作用域中的 (不含 <code>.native</code> 修饰器的) <code>v-on</code> 事件监听器。它可以通过 <code>v-on=&quot;$listeners&quot;</code> 传入内部组件——在创建更高层次的组件时非常有用。</p></li></ul> <h2 id="实例方法-数据"><a href="#实例方法-数据" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95-%E6%95%B0%E6%8D%AE" title="实例方法 / 数据" target="_blank" rel="noopener noreferrer">实例方法 / 数据<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="vm-watch-exporfn-callback-options"><a href="#vm-watch-exporfn-callback-options" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="w"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="x"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="O"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="F"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="b"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="k"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="["></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="w"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="h"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>watch( expOrFn, callback, [options] )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string | Function} expOrFn</code></li> <li><code>{Function | Object} callback</code></li> <li><code>{Object} [options]</code> <ul><li><code>{boolean} deep</code></li> <li><code>{boolean} immediate</code></li></ul></li></ul></li> <li><p><strong>返回值</strong>：<code>{Function} unwatch</code></p></li> <li><p><strong>用法</strong>：</p> <p>观察 Vue 实例上的一个表达式或者一个函数计算结果的变化。回调函数得到的参数为新值和旧值。表达式只接受简单的键路径。对于更复杂的表达式，用一个函数取代。</p> <p>注意：在变更 (不是替换) 对象或数组时，旧值将与新值相同，因为它们的引用指向同一个对象/数组。Vue 不会保留变更之前值的副本。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 键路径
vm.$watch('a.b.c', function (newVal, oldVal) {
  // 做点什么
})

// 函数
vm.$watch(
  function () {
    // 表达式 `this.a + this.b` 每次得出一个不同的结果时
    // 处理函数都会被调用。
    // 这就像监听一个未被定义的计算属性
    return this.a + this.b
  },
  function (newVal, oldVal) {
    // 做点什么
  }
)
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><code>vm.$watch</code> 返回一个取消观察函数，用来停止触发回调：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var unwatch = vm.$watch('a', cb)
// 之后取消观察
unwatch()
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li> <li><p><strong>选项：deep</strong></p> <p>为了发现对象内部值的变化，可以在选项参数中指定 <code>deep: true</code>。注意监听数组的变更不需要这么做。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>vm.$watch('someObject', callback, {
  deep: true
})
vm.someObject.nestedValue = 123
// callback is fired
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li> <li><p><strong>选项：immediate</strong></p> <p>在选项参数中指定 <code>immediate: true</code> 将立即以表达式的当前值触发回调：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>vm.$watch('a', callback, {
  immediate: true
})
// 立即以 `a` 的当前值触发回调
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>注意在带有 <code>immediate</code> 选项时，你不能在第一次回调时取消侦听给定的 property。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>// 这会导致报错
var unwatch = vm.$watch(
  'value',
  function () {
    doSomething()
    unwatch()
  },
  { immediate: true }
)
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>如果你仍然希望在回调内部调用一个取消侦听的函数，你应该先检查其函数的可用性：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var unwatch = vm.$watch(
  'value',
  function () {
    doSomething()
    if (unwatch) {
      unwatch()
    }
  },
  { immediate: true }
)
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li></ul> <h3 id="vm-set-target-propertyname-index-value"><a href="#vm-set-target-propertyname-index-value" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="s"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="y"></mjx-c><mjx-c c="N"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="x"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>set( target, propertyName/index, value )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object | Array} target</code></li> <li><code>{string | number} propertyName/index</code></li> <li><code>{any} value</code></li></ul></li> <li><p><strong>返回值</strong>：设置的值。</p></li> <li><p><strong>用法</strong>：</p> <p>这是全局 <code>Vue.set</code> 的<strong>别名</strong>。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/api/#Vue-set" target="_blank" rel="noopener noreferrer">Vue.set<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="vm-delete-target-propertyname-index"><a href="#vm-delete-target-propertyname-index" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="d"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="y"></mjx-c><mjx-c c="N"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="x"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>delete( target, propertyName/index )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Object | Array} target</code></li> <li><code>{string | number} propertyName/index</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>这是全局 <code>Vue.delete</code> 的<strong>别名</strong>。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/api/#Vue-delete" target="_blank" rel="noopener noreferrer">Vue.delete<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h2 id="实例方法-事件"><a href="#实例方法-事件" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95-%E4%BA%8B%E4%BB%B6" title="实例方法 / 事件" target="_blank" rel="noopener noreferrer">实例方法 / 事件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="vm-on-event-callback"><a href="#vm-on-event-callback" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="o"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="b"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="k"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>on( event, callback )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string | Array&lt;string&gt;} event</code> (数组只在 2.2.0+ 中支持)</li> <li><code>{Function} callback</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>监听当前实例上的自定义事件。事件可以由 <code>vm.$emit</code> 触发。回调函数会接收所有传入事件触发函数的额外参数。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>vm.$on('test', function (msg) {
  console.log(msg)
})
vm.$emit('test', 'hi')
// =&gt; &quot;hi&quot;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul> <h3 id="vm-once-event-callback"><a href="#vm-once-event-callback" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="o"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="b"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="k"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>once( event, callback )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string} event</code></li> <li><code>{Function} callback</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>监听一个自定义事件，但是只触发一次。一旦触发之后，监听器就会被移除。</p></li></ul> <h3 id="vm-off-event-callback"><a href="#vm-off-event-callback" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="o"></mjx-c><mjx-c c="f"></mjx-c><mjx-c c="f"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="["></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="b"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="k"></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="f"></mjx-c><mjx-c c="f"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>off( [event, callback] )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string | Array&lt;string&gt;} event</code> (只在 2.2.2+ 支持数组)</li> <li><code>{Function} [callback]</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>移除自定义事件监听器。</p> <ul><li>如果没有提供参数，则移除所有的事件监听器；</li> <li>如果只提供了事件，则移除该事件所有的监听器；</li> <li>如果同时提供了事件与回调，则只移除这个回调的监听器。</li></ul></li></ul> <h3 id="vm-emit-eventname-args"><a href="#vm-emit-eventname-args" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="e"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="N"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c=","></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="["></mjx-c><mjx-c c="2026"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>emit( eventName, […args] )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{string} eventName</code></li> <li><code>[...args]</code></li></ul> <p>触发当前实例上的事件。附加参数都会传给监听器回调。</p></li> <li><p><strong>示例：</strong></p> <p>只配合一个事件名使用 <code>$emit</code>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.component('welcome-button', {
  template: `
    &lt;button v-on:click=&quot;$emit('welcome')&quot;&gt;
      Click me to be welcomed
    &lt;/button&gt;
  `
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div id=&quot;emit-example-simple&quot;&gt;
  &lt;welcome-button v-on:welcome=&quot;sayHi&quot;&gt;&lt;/welcome-button&gt;
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>new Vue({
  el: '#emit-example-simple',
  methods: {
    sayHi: function () {
      alert('Hi!')
    }
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>配合额外的参数使用 <code>$emit</code>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>Vue.component('magic-eight-ball', {
  data: function () {
    return {
      possibleAdvice: ['Yes', 'No', 'Maybe']
    }
  },
  methods: {
    giveAdvice: function () {
      var randomAdviceIndex = Math.floor(Math.random() * this.possibleAdvice.length)
      this.$emit('give-advice', this.possibleAdvice[randomAdviceIndex])
    }
  },
  template: `
    &lt;button v-on:click=&quot;giveAdvice&quot;&gt;
      Click me for advice
    &lt;/button&gt;
  `
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div id=&quot;emit-example-argument&quot;&gt;
  &lt;magic-eight-ball v-on:give-advice=&quot;showAdvice&quot;&gt;&lt;/magic-eight-ball&gt;
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>new Vue({
  el: '#emit-example-argument',
  methods: {
    showAdvice: function (advice) {
      alert(advice)
    }
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul> <h2 id="实例方法-生命周期"><a href="#实例方法-生命周期" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F" title="实例方法 / 生命周期" target="_blank" rel="noopener noreferrer">实例方法 / 生命周期<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="vm-mount-elementorselector"><a href="#vm-mount-elementorselector" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="m"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="["></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="O"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="S"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>mount( [elementOrSelector] )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Element | string} [elementOrSelector]</code></li> <li><code>{boolean} [hydrating]</code></li></ul></li> <li><p><strong>返回值</strong>：<code>vm</code> - 实例自身</p></li> <li><p><strong>用法</strong>：</p> <p>如果 Vue 实例在实例化时没有收到 el 选项，则它处于“未挂载”状态，没有关联的 DOM 元素。可以使用 <code>vm.$mount()</code> 手动地挂载一个未挂载的实例。</p> <p>如果没有提供 <code>elementOrSelector</code> 参数，模板将被渲染为文档之外的的元素，并且你必须使用原生 DOM API 把它插入文档中。</p> <p>这个方法返回实例自身，因而可以链式调用其它实例方法。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>var MyComponent = Vue.extend({
  template: '&lt;div&gt;Hello!&lt;/div&gt;'
})

// 创建并挂载到 #app (会替换 #app)
new MyComponent().$mount('#app')

// 同上
new MyComponent({ el: '#app' })

// 或者，在文档之外渲染并且随后挂载
var component = new MyComponent().$mount()
document.getElementById('app').appendChild(component.$el)
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/ssr.html" target="_blank" rel="noopener noreferrer">服务端渲染<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="vm-forceupdate"><a href="#vm-forceupdate" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="f"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="U"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="f"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="U"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>forceUpdate()&quot;)</h3> <ul><li><p><strong>示例</strong>：</p> <p>迫使 Vue 实例重新渲染。注意它仅仅影响实例本身和插入插槽内容的子组件，而不是所有子组件。</p></li></ul> <h3 id="vm-nexttick-callback"><a href="#vm-nexttick-callback" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="n"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="x"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="T"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="k"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="["></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="l"></mjx-c><mjx-c c="b"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="k"></mjx-c><mjx-c c="5C"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="x"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="T"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="k"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>nextTick( [callback] )&quot;)</h3> <ul><li><p><strong>参数</strong>：</p> <ul><li><code>{Function} [callback]</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p>将回调延迟到下次 DOM 更新循环之后执行。在修改数据之后立即使用它，然后等待 DOM 更新。它跟全局方法 <code>Vue.nextTick</code> 一样，不同的是回调的 <code>this</code> 自动绑定到调用它的实例上。</p> <blockquote><p>2.1.0 起新增：如果没有提供回调且在支持 Promise 的环境中，则返回一个 Promise。请注意 Vue 不自带 Promise 的 polyfill，所以如果你的目标浏览器不是原生支持 Promise (IE：你们都看我干嘛)，你得自行 polyfill。</p></blockquote></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>new Vue({
  // ...
  methods: {
    // ...
    example: function () {
      // 修改数据
      this.message = 'changed'
      // DOM 还没有更新
      this.$nextTick(function () {
        // DOM 现在更新了
        // `this` 绑定到当前实例
        this.doSomethingElse()
      })
    }
  }
})
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li> <li><p><strong>参考</strong></p> <ul><li><a href="https://cn.vuejs.org/v2/api/#Vue-nextTick" target="_blank" rel="noopener noreferrer">Vue.nextTick<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/reactivity.html#%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E9%98%9F%E5%88%97" target="_blank" rel="noopener noreferrer">异步更新队列<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="vm-destroy"><a href="#vm-destroy" class="header-anchor">#</a> [vm.<mjx-container jax="CHTML" class="MathJax"><mjx-math class=" MJX-TEX"><mjx-merror><mjx-mtext class="mjx-n"><mjx-c c="d"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="y"></mjx-c><mjx-c c="("></mjx-c><mjx-c c=")"></mjx-c><mjx-c c="]"></mjx-c><mjx-c c="("></mjx-c><mjx-c c="h"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c=":"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="c"></mjx-c><mjx-c c="n"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="u"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="j"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="."></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="g"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="2"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="a"></mjx-c><mjx-c c="p"></mjx-c><mjx-c c="i"></mjx-c><mjx-c c="/"></mjx-c><mjx-c c="#"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="-"></mjx-c><mjx-c c="d"></mjx-c><mjx-c c="e"></mjx-c><mjx-c c="s"></mjx-c><mjx-c c="t"></mjx-c><mjx-c c="r"></mjx-c><mjx-c c="o"></mjx-c><mjx-c c="y"></mjx-c><mjx-c c=" "></mjx-c><mjx-c c="22"></mjx-c><mjx-c c="v"></mjx-c><mjx-c c="m"></mjx-c><mjx-c c="."></mjx-c></mjx-mtext></mjx-merror></mjx-math></mjx-container>destroy()&quot;)</h3> <ul><li><p><strong>用法</strong>：</p> <p>完全销毁一个实例。清理它与其它实例的连接，解绑它的全部指令及事件监听器。</p> <p>触发 <code>beforeDestroy</code> 和 <code>destroyed</code> 的钩子。</p> <p>在大多数场景中你不应该调用这个方法。最好使用 <code>v-if</code> 和 <code>v-for</code> 指令以数据驱动的方式控制子组件的生命周期。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA" target="_blank" rel="noopener noreferrer">生命周期图示<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h2 id="指令"><a href="#指令" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E6%8C%87%E4%BB%A4" title="指令" target="_blank" rel="noopener noreferrer">指令<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="v-text"><a href="#v-text" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-text" title="v-text" target="_blank" rel="noopener noreferrer">v-text<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>string</code></p></li> <li><p><strong>详细</strong>：</p> <p>更新元素的 <code>textContent</code>。如果要更新部分的 <code>textContent</code>，需要使用 <code></code> 插值。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;span v-text=&quot;msg&quot;&gt;&lt;/span&gt;
&lt;!-- 和下面的一样 --&gt;
&lt;span&gt;{{msg}}&lt;/span&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/syntax.html#%E6%8F%92%E5%80%BC" target="_blank" rel="noopener noreferrer">数据绑定语法 - 插值<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="v-html"><a href="#v-html" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-html" title="v-html" target="_blank" rel="noopener noreferrer">v-html<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>string</code></p></li> <li><p><strong>详细</strong>：</p> <p>更新元素的 <code>innerHTML</code>。<strong>注意：内容按普通 HTML 插入 - 不会作为 Vue 模板进行编译</strong>。如果试图使用 <code>v-html</code> 组合模板，可以重新考虑是否通过使用组件来替代。</p> <p>在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noopener noreferrer">XSS 攻击<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。只在可信内容上使用 <code>v-html</code>，<strong>永不</strong>用在用户提交的内容上。</p> <p>在<a href="https://cn.vuejs.org/v2/guide/single-file-components.html" target="_blank" rel="noopener noreferrer">单文件组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>里，<code>scoped</code> 的样式不会应用在 <code>v-html</code> 内部，因为那部分 HTML 没有被 Vue 的模板编译器处理。如果你希望针对 <code>v-html</code> 的内容设置带作用域的 CSS，你可以替换为 <a href="https://vue-loader.vuejs.org/en/features/css-modules.html" target="_blank" rel="noopener noreferrer">CSS Modules<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 或用一个额外的全局 <code>&lt;style&gt;</code> 元素手动设置类似 BEM 的作用域策略。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div v-html=&quot;html&quot;&gt;&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/syntax.html#%E7%BA%AF-HTML" target="_blank" rel="noopener noreferrer">数据绑定语法 - 插值<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="v-show"><a href="#v-show" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-show" title="v-show" target="_blank" rel="noopener noreferrer">v-show<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>any</code></p></li> <li><p><strong>用法</strong>：</p> <p>根据表达式之真假值，切换元素的 <code>display</code> CSS property。</p> <p>当条件变化时该指令触发过渡效果。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/conditional.html#v-show" target="_blank" rel="noopener noreferrer">条件渲染 - v-show<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="v-if"><a href="#v-if" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-if" title="v-if" target="_blank" rel="noopener noreferrer">v-if<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>any</code></p></li> <li><p><strong>用法</strong>：</p> <p>根据表达式的值的 <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy" target="_blank" rel="noopener noreferrer">truthiness<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 来有条件地渲染元素。在切换时元素及它的数据绑定 / 组件被销毁并重建。如果元素是 <code>&lt;template&gt;</code>，将提出它的内容作为条件块。</p> <p>当条件变化时该指令触发过渡效果。</p> <p>当和 <code>v-if</code> 一起使用时，<code>v-for</code> 的优先级比 <code>v-if</code> 更高。详见<a href="https://cn.vuejs.org/v2/guide/list.html#v-for-with-v-if" target="_blank" rel="noopener noreferrer">列表渲染教程<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/conditional.html" target="_blank" rel="noopener noreferrer">条件渲染 - v-if<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="v-else"><a href="#v-else" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-else" title="v-else" target="_blank" rel="noopener noreferrer">v-else<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>不需要表达式</strong></p></li> <li><p><strong>限制</strong>：前一兄弟元素必须有 <code>v-if</code> 或 <code>v-else-if</code>。</p></li> <li><p><strong>用法</strong>：</p> <p>为 <code>v-if</code> 或者 <code>v-else-if</code> 添加“else 块”。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div v-if=&quot;Math.random() &gt; 0.5&quot;&gt;
  Now you see me
&lt;/div&gt;
&lt;div v-else&gt;
  Now you don't
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/conditional.html#v-else" target="_blank" rel="noopener noreferrer">条件渲染 - v-else<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="v-else-if"><a href="#v-else-if" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-else-if" title="v-else-if" target="_blank" rel="noopener noreferrer">v-else-if<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <blockquote><p>2.1.0 新增</p></blockquote> <ul><li><p><strong>类型</strong>：<code>any</code></p></li> <li><p><strong>限制</strong>：前一兄弟元素必须有 <code>v-if</code> 或 <code>v-else-if</code>。</p></li> <li><p><strong>用法</strong>：</p> <p>表示 <code>v-if</code> 的“else if 块”。可以链式调用。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div v-if=&quot;type === 'A'&quot;&gt;
  A
&lt;/div&gt;
&lt;div v-else-if=&quot;type === 'B'&quot;&gt;
  B
&lt;/div&gt;
&lt;div v-else-if=&quot;type === 'C'&quot;&gt;
  C
&lt;/div&gt;
&lt;div v-else&gt;
  Not A/B/C
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/conditional.html#v-else-if" target="_blank" rel="noopener noreferrer">条件渲染 - v-else-if<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="v-for"><a href="#v-for" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-for" title="v-for" target="_blank" rel="noopener noreferrer">v-for<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>Array | Object | number | string | Iterable (2.6 新增)</code></p></li> <li><p><strong>用法</strong>：</p> <p>基于源数据多次渲染元素或模板块。此指令之值，必须使用特定语法 <code>alias in expression</code>，为当前遍历的元素提供别名：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div v-for=&quot;item in items&quot;&gt;
  {{ item.text }}
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>另外也可以为数组索引指定别名 (或者用于对象的键)：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div v-for=&quot;(item, index) in items&quot;&gt;&lt;/div&gt;
&lt;div v-for=&quot;(val, key) in object&quot;&gt;&lt;/div&gt;
&lt;div v-for=&quot;(val, name, index) in object&quot;&gt;&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>v-for</code> 的默认行为会尝试原地修改元素而不是移动它们。要强制其重新排序元素，你需要用特殊 attribute <code>key</code> 来提供一个排序提示：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;
  {{ item.text }}
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>从 2.6 起，<code>v-for</code> 也可以在实现了<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols#%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener noreferrer">可迭代协议<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>的值上使用，包括原生的 <code>Map</code> 和 <code>Set</code>。不过应该注意的是 Vue 2.x 目前并不支持可响应的 <code>Map</code> 和 <code>Set</code> 值，所以无法自动探测变更。</p> <p>当和 <code>v-if</code> 一起使用时，<code>v-for</code> 的优先级比 <code>v-if</code> 更高。详见<a href="https://cn.vuejs.org/v2/guide/list.html#v-for-with-v-if" target="_blank" rel="noopener noreferrer">列表渲染教程<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p> <p><code>v-for</code> 的详细用法可以通过以下链接查看教程详细说明。</p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/list.html" target="_blank" rel="noopener noreferrer">列表渲染<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/list.html#key" target="_blank" rel="noopener noreferrer">key<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="v-on"><a href="#v-on" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-on" title="v-on" target="_blank" rel="noopener noreferrer">v-on<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>缩写</strong>：<code>@</code></p></li> <li><p><strong>预期</strong>：<code>Function | Inline Statement | Object</code></p></li> <li><p><strong>参数</strong>：<code>event</code></p></li> <li><p><strong>修饰符</strong>：</p> <ul><li><code>.stop</code> - 调用 <code>event.stopPropagation()</code>。</li> <li><code>.prevent</code> - 调用 <code>event.preventDefault()</code>。</li> <li><code>.capture</code> - 添加事件侦听器时使用 capture 模式。</li> <li><code>.self</code> - 只当事件是从侦听器绑定的元素本身触发时才触发回调。</li> <li><code>.{keyCode | keyAlias}</code> - 只当事件是从特定键触发时才触发回调。</li> <li><code>.native</code> - 监听组件根元素的原生事件。</li> <li><code>.once</code> - 只触发一次回调。</li> <li><code>.left</code> - (2.2.0) 只当点击鼠标左键时触发。</li> <li><code>.right</code> - (2.2.0) 只当点击鼠标右键时触发。</li> <li><code>.middle</code> - (2.2.0) 只当点击鼠标中键时触发。</li> <li><code>.passive</code> - (2.3.0) 以 <code>{ passive: true }</code> 模式添加侦听器</li></ul></li> <li><p><strong>用法</strong>：</p> <p>绑定事件监听器。事件类型由参数指定。表达式可以是一个方法的名字或一个内联语句，如果没有修饰符也可以省略。</p> <p>用在普通元素上时，只能监听<a href="https://developer.mozilla.org/zh-CN/docs/Web/Events" target="_blank" rel="noopener noreferrer"><strong>原生 DOM 事件</strong><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。用在自定义元素组件上时，也可以监听子组件触发的<strong>自定义事件</strong>。</p> <p>在监听原生 DOM 事件时，方法以事件为唯一的参数。如果使用内联语句，语句可以访问一个 <code>$event</code> property：<code>v-on:click=&quot;handle('ok', $event)&quot;</code>。</p> <p>从 <code>2.4.0</code> 开始，<code>v-on</code> 同样支持不带参数绑定一个事件/监听器键值对的对象。注意当使用对象语法时，是不支持任何修饰器的。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 方法处理器 --&gt;
&lt;button v-on:click=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 动态事件 (2.6.0+) --&gt;
&lt;button v-on:[event]=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 内联语句 --&gt;
&lt;button v-on:click=&quot;doThat('hello', $event)&quot;&gt;&lt;/button&gt;

&lt;!-- 缩写 --&gt;
&lt;button @click=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 动态事件缩写 (2.6.0+) --&gt;
&lt;button @[event]=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 停止冒泡 --&gt;
&lt;button @click.stop=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 阻止默认行为 --&gt;
&lt;button @click.prevent=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 阻止默认行为，没有表达式 --&gt;
&lt;form @submit.prevent&gt;&lt;/form&gt;

&lt;!--  串联修饰符 --&gt;
&lt;button @click.stop.prevent=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 键修饰符，键别名 --&gt;
&lt;input @keyup.enter=&quot;onEnter&quot;&gt;

&lt;!-- 键修饰符，键代码 --&gt;
&lt;input @keyup.13=&quot;onEnter&quot;&gt;

&lt;!-- 点击回调只会触发一次 --&gt;
&lt;button v-on:click.once=&quot;doThis&quot;&gt;&lt;/button&gt;

&lt;!-- 对象语法 (2.4.0+) --&gt;
&lt;button v-on=&quot;{ mousedown: doThis, mouseup: doThat }&quot;&gt;&lt;/button&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>在子组件上监听自定义事件 (当子组件触发“my-event”时将调用事件处理器)：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;my-component @my-event=&quot;handleThis&quot;&gt;&lt;/my-component&gt;

&lt;!-- 内联语句 --&gt;
&lt;my-component @my-event=&quot;handleThis(123, $event)&quot;&gt;&lt;/my-component&gt;

&lt;!-- 组件中的原生事件 --&gt;
&lt;my-component @click.native=&quot;onClick&quot;&gt;&lt;/my-component&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/events.html" target="_blank" rel="noopener noreferrer">事件处理器<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components.html#%E7%9B%91%E5%90%AC%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BA%8B%E4%BB%B6" target="_blank" rel="noopener noreferrer">组件 - 自定义事件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="v-bind"><a href="#v-bind" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-bind" title="v-bind" target="_blank" rel="noopener noreferrer">v-bind<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>缩写</strong>：<code>:</code></p></li> <li><p><strong>预期</strong>：<code>any (with argument) | Object (without argument)</code></p></li> <li><p><strong>参数</strong>：<code>attrOrProp (optional)</code></p></li> <li><p><strong>修饰符</strong>：</p> <ul><li><code>.prop</code> - 作为一个 DOM property 绑定而不是作为 attribute 绑定。(<a href="https://stackoverflow.com/questions/6003819/properties-and-attributes-in-html#answer-6004028" target="_blank" rel="noopener noreferrer">差别在哪里？<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>)</li> <li><code>.camel</code> - (2.1.0+) 将 kebab-case attribute 名转换为 camelCase。(从 2.1.0 开始支持)</li> <li><code>.sync</code> (2.3.0+) 语法糖，会扩展成一个更新父组件绑定值的 <code>v-on</code> 侦听器。</li></ul></li> <li><p><strong>用法</strong>：</p> <p>动态地绑定一个或多个 attribute，或一个组件 prop 到表达式。</p> <p>在绑定 <code>class</code> 或 <code>style</code> attribute 时，支持其它类型的值，如数组或对象。可以通过下面的教程链接查看详情。</p> <p>在绑定 prop 时，prop 必须在子组件中声明。可以用修饰符指定不同的绑定类型。</p> <p>没有参数时，可以绑定到一个包含键值对的对象。注意此时 <code>class</code> 和 <code>style</code> 绑定不支持数组和对象。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 绑定一个 attribute --&gt;
&lt;img v-bind:src=&quot;imageSrc&quot;&gt;

&lt;!-- 动态 attribute 名 (2.6.0+) --&gt;
&lt;button v-bind:[key]=&quot;value&quot;&gt;&lt;/button&gt;

&lt;!-- 缩写 --&gt;
&lt;img :src=&quot;imageSrc&quot;&gt;

&lt;!-- 动态 attribute 名缩写 (2.6.0+) --&gt;
&lt;button :[key]=&quot;value&quot;&gt;&lt;/button&gt;

&lt;!-- 内联字符串拼接 --&gt;
&lt;img :src=&quot;'/path/to/images/' + fileName&quot;&gt;

&lt;!-- class 绑定 --&gt;
&lt;div :class=&quot;{ red: isRed }&quot;&gt;&lt;/div&gt;
&lt;div :class=&quot;[classA, classB]&quot;&gt;&lt;/div&gt;
&lt;div :class=&quot;[classA, { classB: isB, classC: isC }]&quot;&gt;&lt;/div&gt;

&lt;!-- style 绑定 --&gt;
&lt;div :style=&quot;{ fontSize: size + 'px' }&quot;&gt;&lt;/div&gt;
&lt;div :style=&quot;[styleObjectA, styleObjectB]&quot;&gt;&lt;/div&gt;

&lt;!-- 绑定一个全是 attribute 的对象 --&gt;
&lt;div v-bind=&quot;{ id: someProp, 'other-attr': otherProp }&quot;&gt;&lt;/div&gt;

&lt;!-- 通过 prop 修饰符绑定 DOM attribute --&gt;
&lt;div v-bind:text-content.prop=&quot;text&quot;&gt;&lt;/div&gt;

&lt;!-- prop 绑定。“prop”必须在 my-component 中声明。--&gt;
&lt;my-component :prop=&quot;someThing&quot;&gt;&lt;/my-component&gt;

&lt;!-- 通过 $props 将父组件的 props 一起传给子组件 --&gt;
&lt;child-component v-bind=&quot;$props&quot;&gt;&lt;/child-component&gt;

&lt;!-- XLink --&gt;
&lt;svg&gt;&lt;a :xlink:special=&quot;foo&quot;&gt;&lt;/a&gt;&lt;/svg&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p><code>.camel</code> 修饰符允许在使用 DOM 模板时将 <code>v-bind</code> property 名称驼峰化，例如 SVG 的 <code>viewBox</code> property：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;svg :view-box.camel=&quot;viewBox&quot;&gt;&lt;/svg&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>在使用字符串模板或通过 <code>vue-loader</code>/<code>vueify</code> 编译时，无需使用 <code>.camel</code>。</p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/class-and-style.html" target="_blank" rel="noopener noreferrer">Class 与 Style 绑定<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87-Prop-%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener noreferrer">组件 - Props<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-%E4%BF%AE%E9%A5%B0%E7%AC%A6" target="_blank" rel="noopener noreferrer">组件 - <code>.sync</code> 修饰符<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="v-model"><a href="#v-model" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-model" title="v-model" target="_blank" rel="noopener noreferrer">v-model<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：随表单控件类型不同而不同。</p></li> <li><p><strong>限制</strong>：</p> <ul><li><code>&lt;input&gt;</code></li> <li><code>&lt;select&gt;</code></li> <li><code>&lt;textarea&gt;</code></li> <li>components</li></ul></li> <li><p><strong>修饰符</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/forms.html#lazy" target="_blank" rel="noopener noreferrer"><code>.lazy</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> - 取代 <code>input</code> 监听 <code>change</code> 事件</li> <li><a href="https://cn.vuejs.org/v2/guide/forms.html#number" target="_blank" rel="noopener noreferrer"><code>.number</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> - 输入字符串转为有效的数字</li> <li><a href="https://cn.vuejs.org/v2/guide/forms.html#trim" target="_blank" rel="noopener noreferrer"><code>.trim</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> - 输入首尾空格过滤</li></ul></li> <li><p><strong>用法</strong>：</p> <p>在表单控件或者组件上创建双向绑定。细节请看下面的教程链接。</p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/forms.html" target="_blank" rel="noopener noreferrer">表单控件绑定<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components-custom-events.html#%E5%B0%86%E5%8E%9F%E7%94%9F%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E5%88%B0%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">组件 - 在输入组件上使用自定义事件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="v-slot"><a href="#v-slot" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-slot" title="v-slot" target="_blank" rel="noopener noreferrer">v-slot<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>缩写</strong>：<code>#</code></p></li> <li><p><strong>预期</strong>：可放置在函数参数位置的 JavaScript 表达式 (在<a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E8%A7%A3%E6%9E%84%E6%8F%92%E6%A7%BD-Props" target="_blank" rel="noopener noreferrer">支持的环境下<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>可使用解构)。可选，即只需要在为插槽传入 prop 的时候使用。</p></li> <li><p><strong>参数</strong>：插槽名 (可选，默认值是 <code>default</code>)</p></li> <li><p><strong>限用于</strong></p> <ul><li><code>&lt;template&gt;</code></li> <li><a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E7%8B%AC%E5%8D%A0%E9%BB%98%E8%AE%A4%E6%8F%92%E6%A7%BD%E7%9A%84%E7%BC%A9%E5%86%99%E8%AF%AD%E6%B3%95" target="_blank" rel="noopener noreferrer">组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> (对于一个单独的带 prop 的默认插槽)</li></ul></li> <li><p><strong>用法</strong>：</p> <p>提供具名插槽或需要接收 prop 的插槽。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 具名插槽 --&gt;
&lt;base-layout&gt;
  &lt;template v-slot:header&gt;
    Header content
  &lt;/template&gt;

  Default slot content

  &lt;template v-slot:footer&gt;
    Footer content
  &lt;/template&gt;
&lt;/base-layout&gt;

&lt;!-- 接收 prop 的具名插槽 --&gt;
&lt;infinite-scroll&gt;
  &lt;template v-slot:item=&quot;slotProps&quot;&gt;
    &lt;div class=&quot;item&quot;&gt;
      {{ slotProps.item.text }}
    &lt;/div&gt;
  &lt;/template&gt;
&lt;/infinite-scroll&gt;

&lt;!-- 接收 prop 的默认插槽，使用了解构 --&gt;
&lt;mouse-position v-slot=&quot;{ x, y }&quot;&gt;
  Mouse position: {{ x }}, {{ y }}
&lt;/mouse-position&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>更多细节请查阅以下链接。</p></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/components-slots.html" target="_blank" rel="noopener noreferrer">组件 - 插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0001-new-slot-syntax.md" target="_blank" rel="noopener noreferrer">RFC-0001<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="v-pre"><a href="#v-pre" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-pre" title="v-pre" target="_blank" rel="noopener noreferrer">v-pre<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>不需要表达式</strong></p></li> <li><p><strong>用法</strong>：</p> <p>跳过这个元素和它的子元素的编译过程。可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;span v-pre&gt;{{ this will not be compiled }}&lt;/span&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div></li></ul> <h3 id="v-cloak"><a href="#v-cloak" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-cloak" title="v-cloak" target="_blank" rel="noopener noreferrer">v-cloak<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>不需要表达式</strong></p></li> <li><p><strong>用法</strong>：</p> <p>这个指令保持在元素上直到关联实例结束编译。和 CSS 规则如 <code>[v-cloak] { display: none }</code> 一起用时，这个指令可以隐藏未编译的 Mustache 标签直到实例准备完毕。</p></li> <li><p><strong>示例</strong>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>[v-cloak] {
  display: none;
}
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;div v-cloak&gt;
  {{ message }}
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不会显示，直到编译结束。</p></li></ul> <h3 id="v-once"><a href="#v-once" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#v-once" title="v-once" target="_blank" rel="noopener noreferrer">v-once<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>不需要表达式</strong></p></li> <li><p><strong>详细</strong>：</p> <p>只渲染元素和组件<strong>一次</strong>。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 单个元素 --&gt;
&lt;span v-once&gt;This will never change: {{msg}}&lt;/span&gt;
&lt;!-- 有子元素 --&gt;
&lt;div v-once&gt;
  &lt;h1&gt;comment&lt;/h1&gt;
  &lt;p&gt;{{msg}}&lt;/p&gt;
&lt;/div&gt;
&lt;!-- 组件 --&gt;
&lt;my-component v-once :comment=&quot;msg&quot;&gt;&lt;/my-component&gt;
&lt;!-- `v-for` 指令--&gt;
&lt;ul&gt;
  &lt;li v-for=&quot;i in list&quot; v-once&gt;{{i}}&lt;/li&gt;
&lt;/ul&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li> <li><p><strong>参考</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/syntax.html#%E6%8F%92%E5%80%BC" target="_blank" rel="noopener noreferrer">数据绑定语法- 插值<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components-edge-cases.html#%E9%80%9A%E8%BF%87-v-once-%E5%88%9B%E5%BB%BA%E4%BD%8E%E5%BC%80%E9%94%80%E7%9A%84%E9%9D%99%E6%80%81%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">组件 - 对低开销的静态组件使用 <code>v-once</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h2 id="特殊-attribute"><a href="#特殊-attribute" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E7%89%B9%E6%AE%8A-attribute" title="特殊 attribute" target="_blank" rel="noopener noreferrer">特殊 attribute<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="key"><a href="#key" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#key" title="key" target="_blank" rel="noopener noreferrer">key<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>number | string | boolean (2.4.2 新增) | symbol (2.5.12 新增)</code></p> <p><code>key</code> 的特殊 attribute 主要用在 Vue 的虚拟 DOM 算法，在新旧 nodes 对比时辨识 VNodes。如果不使用 key，Vue 会使用一种最大限度减少动态元素并且尽可能的尝试就地修改/复用相同类型元素的算法。而使用 key 时，它会基于 key 的变化重新排列元素顺序，并且会移除 key 不存在的元素。</p> <p>有相同父元素的子元素必须有<strong>独特的 key</strong>。重复的 key 会造成渲染错误。</p> <p>最常见的用例是结合 <code>v-for</code>：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;ul&gt;
  &lt;li v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;...&lt;/li&gt;
&lt;/ul&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>它也可以用于强制替换元素/组件而不是重复使用它。当你遇到如下场景时它可能会很有用：</p> <ul><li>完整地触发组件的生命周期钩子</li> <li>触发过渡</li></ul> <p>例如：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;transition&gt;
  &lt;span :key=&quot;text&quot;&gt;{{ text }}&lt;/span&gt;
&lt;/transition&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当 <code>text</code> 发生改变时，<code>&lt;span&gt;</code> 总是会被替换而不是被修改，因此会触发过渡。</p></li></ul> <h3 id="ref"><a href="#ref" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#ref" title="ref" target="_blank" rel="noopener noreferrer">ref<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>string</code></p> <p><code>ref</code> 被用来给元素或子组件注册引用信息。引用信息将会注册在父组件的 <code>$refs</code> 对象上。如果在普通的 DOM 元素上使用，引用指向的就是 DOM 元素；如果用在子组件上，引用就指向组件实例：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- `vm.$refs.p` will be the DOM node --&gt;
&lt;p ref=&quot;p&quot;&gt;hello&lt;/p&gt;

&lt;!-- `vm.$refs.child` will be the child component instance --&gt;
&lt;child-component ref=&quot;child&quot;&gt;&lt;/child-component&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>当 <code>v-for</code> 用于元素或组件的时候，引用信息将是包含 DOM 节点或组件实例的数组。</p> <p>关于 ref 注册时间的重要说明：因为 ref 本身是作为渲染结果被创建的，在初始渲染的时候你不能访问它们 - 它们还不存在！<code>$refs</code> 也不是响应式的，因此你不应该试图用它在模板中做数据绑定。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components-edge-cases.html#%E8%AE%BF%E9%97%AE%E5%AD%90%E7%BB%84%E4%BB%B6%E5%AE%9E%E4%BE%8B%E6%88%96%E5%AD%90%E5%85%83%E7%B4%A0" target="_blank" rel="noopener noreferrer">子组件 ref<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="is"><a href="#is" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#is" title="is" target="_blank" rel="noopener noreferrer">is<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>预期</strong>：<code>string | Object (组件的选项对象)</code></p> <p>用于<a href="https://cn.vuejs.org/v2/guide/components.html#%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">动态组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>且基于 <a href="https://cn.vuejs.org/v2/guide/components.html#%E8%A7%A3%E6%9E%90-DOM-%E6%A8%A1%E6%9D%BF%E6%97%B6%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" target="_blank" rel="noopener noreferrer">DOM 内模板的限制<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>来工作。</p> <p>示例：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 当 `currentView` 改变时，组件也跟着改变 --&gt;
&lt;component v-bind:is=&quot;currentView&quot;&gt;&lt;/component&gt;

&lt;!-- 这样做是有必要的，因为 `&lt;my-row&gt;` 放在一个 --&gt;
&lt;!-- `&lt;table&gt;` 内可能无效且被放置到外面 --&gt;
&lt;table&gt;
  &lt;tr is=&quot;my-row&quot;&gt;&lt;/tr&gt;
&lt;/table&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>更多的使用细节，请移步至下面的链接。</p></li> <li><p><strong>See also</strong>：</p> <ul><li><a href="https://cn.vuejs.org/v2/guide/components.html#%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">动态组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li> <li><a href="https://cn.vuejs.org/v2/guide/components.html#%E8%A7%A3%E6%9E%90-DOM-%E6%A8%A1%E6%9D%BF%E6%97%B6%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" target="_blank" rel="noopener noreferrer">DOM 模板解析说明<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></li></ul></li></ul> <h3 id="slot-废弃"><a href="#slot-废弃" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#slot-%E5%BA%9F%E5%BC%83" title="slot 废弃" target="_blank" rel="noopener noreferrer">slot 废弃<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <p><strong>推荐 2.6.0 新增的 <a href="https://cn.vuejs.org/v2/api/#v-slot" target="_blank" rel="noopener noreferrer">v-slot<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</strong></p> <ul><li><p><strong>预期</strong>：<code>string</code></p> <p>用于标记往哪个具名插槽中插入子组件内容。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E5%85%B7%E5%90%8D%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">具名插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="slot-scope-废弃"><a href="#slot-scope-废弃" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#slot-scope-%E5%BA%9F%E5%BC%83" title="slot-scope 废弃" target="_blank" rel="noopener noreferrer">slot-scope 废弃<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <p><strong>推荐 2.6.0 新增的 <a href="https://cn.vuejs.org/v2/api/#v-slot" target="_blank" rel="noopener noreferrer">v-slot<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</strong></p> <ul><li><p><strong>预期</strong>：<code>function argument expression</code></p></li> <li><p><strong>用法</strong>：</p> <p>用于将元素或组件表示为作用域插槽。attribute 的值应该是可以出现在函数签名的参数位置的合法的 JavaScript 表达式。这意味着在支持的环境中，你还可以在表达式中使用 ES2015 解构。它在 2.5.0+ 中替代了 <a href="https://cn.vuejs.org/v2/api/#scope-replaced" target="_blank" rel="noopener noreferrer"><code>scope</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</p> <p>此 attribute 不支持动态绑定。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD" target="_blank" rel="noopener noreferrer">作用域插槽<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="scope-移除"><a href="#scope-移除" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#scope-%E7%A7%BB%E9%99%A4" title="scope 移除" target="_blank" rel="noopener noreferrer">scope 移除<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <p><strong>被 2.5.0 新增的 <a href="https://cn.vuejs.org/v2/api/#slot-scope" target="_blank" rel="noopener noreferrer">slot-scope<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 取代。推荐 2.6.0 新增的 <a href="https://cn.vuejs.org/v2/api/#v-slot" target="_blank" rel="noopener noreferrer">v-slot<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</strong></p> <p>用于表示一个作为带作用域的插槽的 <code>&lt;template&gt;</code> 元素，它在 2.5.0+ 中被 <a href="https://cn.vuejs.org/v2/api/#slot-scope" target="_blank" rel="noopener noreferrer"><code>slot-scope</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 替代。</p> <ul><li><p><strong>用法：</strong></p> <p>除了 <code>scope</code> 只可以用于 <code>&lt;template&gt;</code> 元素，其它和 <a href="https://cn.vuejs.org/v2/api/#slot-scope" target="_blank" rel="noopener noreferrer"><code>slot-scope</code><span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a> 都相同。</p></li></ul> <h2 id="内置的组件"><a href="#内置的组件" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E5%86%85%E7%BD%AE%E7%9A%84%E7%BB%84%E4%BB%B6" title="内置的组件" target="_blank" rel="noopener noreferrer">内置的组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <h3 id="component"><a href="#component" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#component" title="component" target="_blank" rel="noopener noreferrer">component<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>Props</strong>：</p> <ul><li><code>is</code> - string | ComponentDefinition | ComponentConstructor</li> <li><code>inline-template</code> - boolean</li></ul></li> <li><p><strong>用法</strong>：</p> <p>渲染一个“元组件”为动态组件。依 <code>is</code> 的值，来决定哪个组件被渲染。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 动态组件由 vm 实例的 `componentId` property 控制 --&gt;
&lt;component :is=&quot;componentId&quot;&gt;&lt;/component&gt;

&lt;!-- 也能够渲染注册过的组件或 prop 传入的组件 --&gt;
&lt;component :is=&quot;$options.components.child&quot;&gt;&lt;/component&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components.html#%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">动态组件<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="transition"><a href="#transition" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#transition" title="transition" target="_blank" rel="noopener noreferrer">transition<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>Props</strong>：</p> <ul><li><code>name</code> - string，用于自动生成 CSS 过渡类名。例如：<code>name: 'fade'</code> 将自动拓展为 <code>.fade-enter</code>，<code>.fade-enter-active</code> 等。默认类名为 <code>&quot;v&quot;</code></li> <li><code>appear</code> - boolean，是否在初始渲染时使用过渡。默认为 <code>false</code>。</li> <li><code>css</code> - boolean，是否使用 CSS 过渡类。默认为 <code>true</code>。如果设置为 <code>false</code>，将只通过组件事件触发注册的 JavaScript 钩子。</li> <li><code>type</code> - string，指定过渡事件类型，侦听过渡何时结束。有效值为 <code>&quot;transition&quot;</code> 和 <code>&quot;animation&quot;</code>。默认 Vue.js 将自动检测出持续时间长的为过渡事件类型。</li> <li><code>mode</code> - string，控制离开/进入过渡的时间序列。有效的模式有 <code>&quot;out-in&quot;</code> 和 <code>&quot;in-out&quot;</code>；默认同时进行。</li> <li><code>duration</code> - number | { <code>enter</code>: number, <code>leave</code>: number } 指定过渡的持续时间。默认情况下，Vue 会等待过渡所在根元素的第一个 <code>transitionend</code> 或 <code>animationend</code> 事件。</li> <li><code>enter-class</code> - string</li> <li><code>leave-class</code> - string</li> <li><code>appear-class</code> - string</li> <li><code>enter-to-class</code> - string</li> <li><code>leave-to-class</code> - string</li> <li><code>appear-to-class</code> - string</li> <li><code>enter-active-class</code> - string</li> <li><code>leave-active-class</code> - string</li> <li><code>appear-active-class</code> - string</li></ul></li> <li><p><strong>事件</strong>：</p> <ul><li><code>before-enter</code></li> <li><code>before-leave</code></li> <li><code>before-appear</code></li> <li><code>enter</code></li> <li><code>leave</code></li> <li><code>appear</code></li> <li><code>after-enter</code></li> <li><code>after-leave</code></li> <li><code>after-appear</code></li> <li><code>enter-cancelled</code></li> <li><code>leave-cancelled</code> (<code>v-show</code> only)</li> <li><code>appear-cancelled</code></li></ul></li> <li><p><strong>用法</strong>：</p> <p><code>&lt;transition&gt;</code> 元素作为<strong>单个</strong>元素/组件的过渡效果。<code>&lt;transition&gt;</code> 只会把过渡效果应用到其包裹的内容上，而不会额外渲染 DOM 元素，也不会出现在可被检查的组件层级中。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 简单元素 --&gt;
&lt;transition&gt;
  &lt;div v-if=&quot;ok&quot;&gt;toggled content&lt;/div&gt;
&lt;/transition&gt;

&lt;!-- 动态组件 --&gt;
&lt;transition name=&quot;fade&quot; mode=&quot;out-in&quot; appear&gt;
  &lt;component :is=&quot;view&quot;&gt;&lt;/component&gt;
&lt;/transition&gt;

&lt;!-- 事件钩子 --&gt;
&lt;div id=&quot;transition-demo&quot;&gt;
  &lt;transition @after-enter=&quot;transitionComplete&quot;&gt;
    &lt;div v-show=&quot;ok&quot;&gt;toggled content&lt;/div&gt;
  &lt;/transition&gt;
&lt;/div&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language- line-numbers-mode"><pre class="language-text"><code>new Vue({
  ...
  methods: {
    transitionComplete: function (el) {
      // 传入 'el' 这个 DOM 元素作为参数。
    }
  }
  ...
}).$mount('#transition-demo')
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="noopener noreferrer">过渡：进入，离开和列表<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="transition-group"><a href="#transition-group" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#transition-group" title="transition-group" target="_blank" rel="noopener noreferrer">transition-group<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>Props</strong>：</p> <ul><li><code>tag</code> - string，默认为 <code>span</code></li> <li><code>move-class</code> - 覆盖移动过渡期间应用的 CSS 类。</li> <li>除了 <code>mode</code>，其他 attribute 和 <code>&lt;transition&gt;</code> 相同。</li></ul></li> <li><p><strong>事件</strong>：</p> <ul><li>事件和 <code>&lt;transition&gt;</code> 相同。</li></ul></li> <li><p><strong>用法</strong>：</p> <p><code>&lt;transition-group&gt;</code> 元素作为多个元素/组件的过渡效果。<code>&lt;transition-group&gt;</code> 渲染一个真实的 DOM 元素。默认渲染 <code>&lt;span&gt;</code>，可以通过 <code>tag</code> attribute 配置哪个元素应该被渲染。</p> <p>注意，每个 <code>&lt;transition-group&gt;</code> 的子节点必须有<strong>独立的 key</strong>，动画才能正常工作</p> <p><code>&lt;transition-group&gt;</code> 支持通过 CSS transform 过渡移动。当一个子节点被更新，从屏幕上的位置发生变化，它会被应用一个移动中的 CSS 类 (通过 <code>name</code> attribute 或配置 <code>move-class</code> attribute 自动生成)。如果 CSS <code>transform</code> property 是“可过渡”property，当应用移动类时，将会使用 <a href="https://aerotwist.com/blog/flip-your-animations/" target="_blank" rel="noopener noreferrer">FLIP 技术<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>使元素流畅地到达动画终点。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;transition-group tag=&quot;ul&quot; name=&quot;slide&quot;&gt;
  &lt;li v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;
    {{ item.text }}
  &lt;/li&gt;
&lt;/transition-group&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="noopener noreferrer">过渡：进入，离开和列表<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="keep-alive"><a href="#keep-alive" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#keep-alive" title="keep-alive" target="_blank" rel="noopener noreferrer">keep-alive<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>Props</strong>：</p> <ul><li><code>include</code> - 字符串或正则表达式。只有名称匹配的组件会被缓存。</li> <li><code>exclude</code> - 字符串或正则表达式。任何名称匹配的组件都不会被缓存。</li> <li><code>max</code> - 数字。最多可以缓存多少组件实例。</li></ul></li> <li><p><strong>用法</strong>：</p> <p><code>&lt;keep-alive&gt;</code> 包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们。和 <code>&lt;transition&gt;</code> 相似，<code>&lt;keep-alive&gt;</code> 是一个抽象组件：它自身不会渲染一个 DOM 元素，也不会出现在组件的父组件链中。</p> <p>当组件在 <code>&lt;keep-alive&gt;</code> 内被切换，它的 <code>activated</code> 和 <code>deactivated</code> 这两个生命周期钩子函数将会被对应执行。</p> <blockquote><p>在 2.2.0 及其更高版本中，<code>activated</code> 和 <code>deactivated</code> 将会在 <code>&lt;keep-alive&gt;</code> 树内的所有嵌套组件中触发。</p></blockquote> <p>主要用于保留组件状态或避免重新渲染。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 基本 --&gt;
&lt;keep-alive&gt;
  &lt;component :is=&quot;view&quot;&gt;&lt;/component&gt;
&lt;/keep-alive&gt;

&lt;!-- 多个条件判断的子组件 --&gt;
&lt;keep-alive&gt;
  &lt;comp-a v-if=&quot;a &gt; 1&quot;&gt;&lt;/comp-a&gt;
  &lt;comp-b v-else&gt;&lt;/comp-b&gt;
&lt;/keep-alive&gt;

&lt;!-- 和 `&lt;transition&gt;` 一起使用 --&gt;
&lt;transition&gt;
  &lt;keep-alive&gt;
    &lt;component :is=&quot;view&quot;&gt;&lt;/component&gt;
  &lt;/keep-alive&gt;
&lt;/transition&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>注意，<code>&lt;keep-alive&gt;</code> 是用在其一个直属的子组件被开关的情形。如果你在其中有 <code>v-for</code> 则不会工作。如果有上述的多个条件性的子元素，<code>&lt;keep-alive&gt;</code> 要求同时只有一个子元素被渲染。</p></li> <li><p><strong><code>include</code> and <code>exclude</code></strong></p> <blockquote><p>2.1.0 新增</p></blockquote> <p><code>include</code> 和 <code>exclude</code> prop 允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示：</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;!-- 逗号分隔字符串 --&gt;
&lt;keep-alive include=&quot;a,b&quot;&gt;
  &lt;component :is=&quot;view&quot;&gt;&lt;/component&gt;
&lt;/keep-alive&gt;

&lt;!-- 正则表达式 (使用 `v-bind`) --&gt;
&lt;keep-alive :include=&quot;/a|b/&quot;&gt;
  &lt;component :is=&quot;view&quot;&gt;&lt;/component&gt;
&lt;/keep-alive&gt;

&lt;!-- 数组 (使用 `v-bind`) --&gt;
&lt;keep-alive :include=&quot;['a', 'b']&quot;&gt;
  &lt;component :is=&quot;view&quot;&gt;&lt;/component&gt;
&lt;/keep-alive&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>匹配首先检查组件自身的 <code>name</code> 选项，如果 <code>name</code> 选项不可用，则匹配它的局部注册名称 (父组件 <code>components</code> 选项的键值)。匿名组件不能被匹配。</p></li> <li><p><strong><code>max</code></strong></p> <blockquote><p>2.5.0 新增</p></blockquote> <p>最多可以缓存多少组件实例。一旦这个数字达到了，在新实例被创建之前，已缓存组件中最久没有被访问的实例会被销毁掉。</p> <div class="language- line-numbers-mode"><pre class="language-text"><code>&lt;keep-alive :max=&quot;10&quot;&gt;
  &lt;component :is=&quot;view&quot;&gt;&lt;/component&gt;
&lt;/keep-alive&gt;
</code></pre> <div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>&lt;keep-alive&gt;</code> 不会在函数式组件中正常工作，因为它们没有缓存实例。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components-dynamic-async.html#%E5%9C%A8%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-keep-alive" target="_blank" rel="noopener noreferrer">动态组件 - keep-alive<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h3 id="slot"><a href="#slot" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#slot" title="slot" target="_blank" rel="noopener noreferrer">slot<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h3> <ul><li><p><strong>Props</strong>：</p> <ul><li><code>name</code> - string，用于命名插槽。</li></ul></li> <li><p><strong>Usage</strong>：</p> <p><code>&lt;slot&gt;</code> 元素作为组件模板之中的内容分发插槽。<code>&lt;slot&gt;</code> 元素自身将被替换。</p> <p>详细用法，请参考下面教程的链接。</p></li> <li><p><strong>参考</strong>：<a href="https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87%E6%8F%92%E6%A7%BD%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9" target="_blank" rel="noopener noreferrer">通过插槽分发内容<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></p></li></ul> <h2 id="vnode-接口"><a href="#vnode-接口" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#VNode-%E6%8E%A5%E5%8F%A3" title="VNode 接口" target="_blank" rel="noopener noreferrer">VNode 接口<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <ul><li>请参考 <a href="https://github.com/vuejs/vue/blob/dev/src/core/vdom/vnode.js" target="_blank" rel="noopener noreferrer">VNode class declaration<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</li></ul> <h2 id="服务端渲染"><a href="#服务端渲染" class="header-anchor">#</a> <a href="https://cn.vuejs.org/v2/api/#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93" title="服务端渲染" target="_blank" rel="noopener noreferrer">服务端渲染<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a></h2> <ul><li>请参考 <a href="https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer" target="_blank" rel="noopener noreferrer">vue-server-renderer package documentation<span><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>。</li></ul></div> <footer class="page-edit"><!----> <div class="last-updated"><span class="prefix">Last Updated:</span> <span class="time">7/29/2022, 7:39:19 AM</span></div></footer> <!----> </main></div><div class="global-ui"><!----></div></div>
    <script src="/langnang/assets/js/app.d31b4f67.js" defer></script><script src="/langnang/assets/js/3.4862c1a5.js" defer></script><script src="/langnang/assets/js/180.78baa277.js" defer></script>
  </body>
</html>
